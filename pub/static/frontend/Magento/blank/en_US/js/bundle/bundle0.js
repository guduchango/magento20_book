require.config({
    config: {
        'jsbuild':{"Magento_Cookie/js/require-cookie.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint evil:true browser:true jquery:true */\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.requireCookie', {\n        options: {\n            event: 'click',\n            noCookieUrl: 'enable-cookies',\n            triggers: ['.action.login', '.action.submit']\n        },\n\n        /**\n         * Constructor\n         * @private\n         */\n        _create: function() {\n            this._bind();\n        },\n\n        /**\n         * This method binds elements found in this widget.\n         * @private\n         */\n        _bind: function() {\n            var events = {};\n\n            $.each(this.options.triggers, function(index, value) {\n                events['click ' + value] = '_checkCookie';\n            });\n            this._on(events);\n        },\n\n        /**\n         * This method set the url for the redirect.\n         * @private\n         */\n        _checkCookie: function(event) {\n            if (navigator.cookieEnabled) {\n                return;\n            }\n            event.preventDefault();\n            window.location = this.options.noCookieUrl;\n        }\n    });\n\n    return $.mage.requireCookie;\n});\n","Magento_Cookie/js/notices.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"mage/cookies\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.cookieNotices', {\n        _create: function() {\n            if ($.mage.cookies.get(this.options.cookieName)) {\n                this.element.hide();\n            } else {\n                this.element.show();\n            }\n            $(this.options.cookieAllowButtonSelector).on('click', $.proxy(function() {\n                var cookieExpires = new Date(new Date().getTime() + this.options.cookieLifetime * 1000);\n\n                $.mage.cookies.set(this.options.cookieName, this.options.cookieValue, {expires: cookieExpires});\n                if ($.mage.cookies.get(this.options.cookieName)) {\n                    window.location.reload();\n                } else {\n                    window.location.href = this.options.noCookiesUrl;\n                }\n            }, this));\n        }\n    });\n\n    return $.mage.cookieNotices;\n});\n","Magento_Customer/address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true, jquery:true*/\n/*global confirm:true*/\ndefine([\n    \"jquery\",\n    'Magento_Ui/js/modal/confirm',\n    \"jquery/ui\",\n    \"mage/translate\"\n], function($, confirm){\n    \"use strict\";\n    \n    $.widget('mage.address', {\n        /**\n         * Options common to all instances of this widget.\n         * @type {Object}\n         */\n        options: {\n            deleteConfirmMessage: $.mage.__('Are you sure you want to delete this address?')\n        },\n\n        /**\n         * Bind event handlers for adding and deleting addresses.\n         * @private\n         */\n        _create: function() {\n            var options         = this.options,\n                addAddress      = options.addAddress,\n                deleteAddress   = options.deleteAddress;\n\n            if( addAddress ){\n                $(document).on('click', addAddress, this._addAddress.bind(this));\n            }\n            \n            if( deleteAddress ){\n                $(document).on('click', deleteAddress, this._deleteAddress.bind(this));\n            }\n        },\n\n        /**\n         * Add a new address.\n         * @private\n         */\n        _addAddress: function() {\n            window.location = this.options.addAddressLocation;\n        },\n\n        /**\n         * Delete the address whose id is specified in a data attribute after confirmation from the user.\n         * @private\n         * @param {Event}\n         * @return {Boolean}\n         */\n        _deleteAddress: function(e) {\n            var self = this;\n\n            confirm({\n                content: this.options.deleteConfirmMessage,\n                actions: {\n                    confirm: function() {\n                        if (typeof $(e.target).parent().data('address') !== 'undefined') {\n                            window.location = self.options.deleteUrlPrefix + $(e.target).parent().data('address')\n                                + '/form_key/' + $.mage.cookies.get('form_key');\n                        }\n                        else {\n                            window.location = self.options.deleteUrlPrefix + $(e.target).data('address')\n                                + '/form_key/' + $.mage.cookies.get('form_key');\n                        }\n                    }\n                }\n            });\n\n            return false;\n        }\n    });\n    \n    return $.mage.address;\n});\n","Magento_Customer/set-password.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true expr:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.setPassword', {\n        options: {\n        },\n\n        _create: function() {\n            this.element.on('change', $.proxy(function(event) {\n                $(event.target).is(':checked') ? this._showPassword() : this._hidePassword();\n            }, this));\n            this.options.showOnDefault && this._showPassword();\n        },\n\n        /**\n         * Hide password input fields\n         * @private\n         */\n        _hidePassword: function() {\n            $(this.options.currentPasswordId).removeAttr('data-validate')\n                .parents(this.options.passwordContainer).hide();\n            $(this.options.passwordId).removeAttr('data-validate');\n            $(this.options.confirmationId).removeAttr('data-validate');\n        },\n\n        /**\n         * Show password input fields\n         * @private\n         */\n        _showPassword: function() {\n            $(this.options.currentPasswordId).attr('data-validate', '{required:true}')\n                .parents(this.options.passwordContainer).show();\n            $(this.options.passwordId).attr('data-validate', \"{required:true, 'validate-password':true}\");\n            $(this.options.confirmationId).attr('data-validate',\n                '{required:true, equalTo:\"' + this.options.passwordId + '\"}');\n        }\n    });\n    \n    return $.mage.setPassword;\n});\n","Magento_Customer/js/checkout-balance.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.checkoutBalance', {\n        /**\n         * Initialize store credit events\n         * @private\n         */\n        _create: function() {\n            this.eventData = {\n                price: this.options.balance,\n                totalPrice: 0\n            };\n            this.element.on('change', $.proxy(function(e) {\n                if ($(e.target).is(':checked')) {\n                    this.eventData.price = -1 * this.options.balance;\n                } else {\n                    if (this.options.amountSubstracted) {\n                        this.eventData.price = this.options.usedAmount;\n                        this.options.amountSubstracted = false;\n                    } else {\n                        this.eventData.price = this.options.balance;\n                    }\n                }\n                this.element.trigger('updateCheckoutPrice', this.eventData);\n            }, this));\n        }\n    });\n\n    return $.mage.checkoutBalance;\n});\n","Magento_Customer/js/section-config.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(['underscore'], function (_) {\n    'use strict';\n\n    var baseUrls, sections, clientSideSections;\n\n    var canonize = function(url){\n        var route = url;\n        for (var key in baseUrls) {\n            route = url.replace(baseUrls[key], '');\n            if (route != url) {\n                break;\n            }\n        }\n        return route.replace(/^\\/?index.php\\/?/, '').toLowerCase();\n    };\n\n    return {\n        getAffectedSections: function (url) {\n            var route = canonize(url);\n            var actions = _.find(sections, function(val, section) {\n                if (section.indexOf('*') >= 0) {\n                    section = section.replace(/\\*/g, '[^/]+') + '$';\n                    var matched = route.match(section);\n                    return matched && matched[0] == route;\n                }\n                return (route.indexOf(section) === 0);\n            });\n\n            return _.union(_.toArray(actions), _.toArray(sections['*']));\n        },\n\n        filterClientSideSections: function (sections) {\n            if (Array.isArray(sections)) {\n                return _.difference(sections, clientSideSections);\n            }\n            return sections;\n        },\n\n        isClientSideSection: function (sectionName) {\n            return _.contains(clientSideSections, sectionName);\n        },\n\n        'Magento_Customer/js/section-config': function(options) {\n            baseUrls = options.baseUrls;\n            sections = options.sections;\n            clientSideSections = options.clientSideSections;\n        }\n    };\n});\n","Magento_Customer/js/customer-data.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'ko',\n    'Magento_Customer/js/section-config',\n    'jquery/jquery-storageapi'\n], function ($, _, ko, sectionConfig) {\n    'use strict';\n\n    //TODO: remove global change, in this case made for initNamespaceStorage\n    $.cookieStorage.setConf({path:'/'});\n\n    var options;\n    var storage = $.initNamespaceStorage('mage-cache-storage').localStorage;\n    var storageInvalidation = $.initNamespaceStorage('mage-cache-storage-section-invalidation').localStorage;\n\n    var invalidateCacheBySessionTimeOut = function(options) {\n        if (new Date($.localStorage.get('mage-cache-timeout')) < new Date()) {\n            storage.removeAll();\n            var date = new Date(Date.now() + parseInt(options.cookieLifeTime, 10) * 1000);\n            $.localStorage.set('mage-cache-timeout', date);\n        }\n    };\n\n    var invalidateCacheByCloseCookieSession = function() {\n        if (!$.cookieStorage.isSet('mage-cache-sessid')) {\n            $.cookieStorage.set('mage-cache-sessid', true);\n            storage.removeAll();\n        }\n    };\n\n    var dataProvider = {\n        getFromStorage: function (sectionNames) {\n            var result = {};\n            _.each(sectionNames, function (sectionName) {\n                result[sectionName] = storage.get(sectionName);\n            });\n            return result;\n        },\n        getFromServer: function (sectionNames, updateSectionId) {\n            sectionNames = sectionConfig.filterClientSideSections(sectionNames);\n            var parameters = _.isArray(sectionNames) ? {sections: sectionNames.join(',')} : [];\n            parameters['update_section_id'] = updateSectionId;\n            return $.getJSON(options.sectionLoadUrl, parameters).fail(function(jqXHR) {\n                throw new Error(jqXHR);\n            });\n        }\n    };\n\n\n    ko.extenders.disposableCustomerData = function(target, sectionName) {\n        var sectionDataIds, newSectionDataIds = {};\n        target.subscribe(function(newValue) {\n            setTimeout(function(){\n                storage.remove(sectionName);\n                sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\n                _.each(sectionDataIds, function (data, name) {\n                    if (name != sectionName) {\n                        newSectionDataIds[name] = data;\n                    }\n                });\n                $.cookieStorage.set('section_data_ids', newSectionDataIds);\n            }, 3000);\n        });\n        return target;\n    };\n\n    var buffer = {\n        data: {},\n        bind: function (sectionName) {\n            this.data[sectionName] = ko.observable({});\n        },\n        get: function (sectionName) {\n            if (!this.data[sectionName]) {\n                this.bind(sectionName);\n            }\n            return this.data[sectionName];\n        },\n        keys: function () {\n            return _.keys(this.data);\n        },\n        notify: function (sectionName, sectionData) {\n            if (!this.data[sectionName]) {\n                this.bind(sectionName);\n            }\n            this.data[sectionName](sectionData);\n        },\n        update: function (sections) {\n            var sectionId = 0;\n            var sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\n            _.each(sections, function (sectionData, sectionName) {\n                sectionId = sectionData['data_id'];\n                sectionDataIds[sectionName] = sectionId;\n                storage.set(sectionName, sectionData);\n                storageInvalidation.remove(sectionName);\n                buffer.notify(sectionName, sectionData);\n            });\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\n        },\n        remove: function (sections) {\n            _.each(sections, function (sectionName) {\n                storage.remove(sectionName);\n                if (!sectionConfig.isClientSideSection(sectionName)) {\n                    storageInvalidation.set(sectionName, true);\n                }\n            });\n        }\n    };\n\n    var customerData = {\n        init: function() {\n            var countryData,\n                privateContent = $.cookieStorage.get('private_content_version');\n\n            if (_.isEmpty(storage.keys())) {\n                if (!_.isEmpty(privateContent)) {\n                    this.reload([], false);\n                }\n            } else if (this.needReload()) {\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\n                    buffer.notify(sectionName, sectionData);\n                });\n                this.reload(this.getExpiredKeys(), false);\n            } else {\n                _.each(dataProvider.getFromStorage(storage.keys()), function (sectionData, sectionName) {\n                    buffer.notify(sectionName, sectionData);\n                });\n                if (!_.isEmpty(storageInvalidation.keys())) {\n                    this.reload(storageInvalidation.keys(), false);\n                }\n            }\n\n            if (!_.isEmpty(privateContent)) {\n                countryData = this.get('directory-data');\n                if (_.isEmpty(countryData())) {\n                    customerData.reload(['directory-data'], false);\n                }\n            }\n        },\n        needReload: function () {\n            var cookieSections = $.cookieStorage.get('section_data_ids');\n            if (typeof cookieSections != 'object') {\n                return true;\n            }\n            var storageVal, name;\n            for (name in cookieSections) {\n                if (undefined !== name) {\n                    storageVal = storage.get(name);\n                    if (typeof storageVal == 'object' && cookieSections[name] > storageVal['data_id']) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        getExpiredKeys: function() {\n            var cookieSections = $.cookieStorage.get('section_data_ids');\n\n            if (typeof cookieSections != 'object') {\n                return [];\n            }\n            var storageVal, name, expiredKeys = [];\n            for (name in cookieSections) {\n                storageVal = storage.get(name);\n                if (typeof storageVal == 'object' && cookieSections[name] !=  storage.get(name)['data_id']) {\n                    expiredKeys.push(name);\n                }\n            }\n            return expiredKeys;\n        },\n        get: function (sectionName) {\n            return buffer.get(sectionName);\n        },\n        set: function (sectionName, sectionData) {\n            var data = {};\n            data[sectionName] = sectionData;\n            buffer.update(data);\n        },\n        reload: function (sectionNames, updateSectionId) {\n            return dataProvider.getFromServer(sectionNames, updateSectionId).done(function (sections) {\n                buffer.update(sections);\n            });\n        },\n        invalidate: function (sectionNames) {\n            var sectionDataIds,\n                sectionsNamesForInvalidation;\n\n            sectionsNamesForInvalidation = _.contains(sectionNames, '*') ? buffer.keys() : sectionNames;\n            buffer.remove(sectionsNamesForInvalidation);\n            sectionDataIds = $.cookieStorage.get('section_data_ids') || {};\n\n            // Invalidate section in cookie (increase version of section with 1000)\n            _.each(sectionNames, function (sectionName) {\n                if (!sectionConfig.isClientSideSection(sectionName)) {\n                    sectionDataIds[sectionName] += 1000;\n                }\n            });\n            $.cookieStorage.set('section_data_ids', sectionDataIds);\n        },\n        'Magento_Customer/js/customer-data': function (settings) {\n            options = settings;\n            invalidateCacheBySessionTimeOut(settings);\n            invalidateCacheByCloseCookieSession();\n            customerData.init();\n        }\n    };\n\n    /** Events listener **/\n    $(document).on('ajaxComplete', function (event, xhr, settings) {\n        var sections,\n            redirects;\n\n        if (settings.type.match(/post|put/i)) {\n            sections = sectionConfig.getAffectedSections(settings.url);\n            if (sections) {\n                customerData.invalidate(sections);\n                redirects = ['redirect', 'backUrl'];\n\n                if (_.isObject(xhr.responseJSON) && !_.isEmpty(_.pick(xhr.responseJSON, redirects))) {\n                    return;\n                }\n                customerData.reload(sections, true);\n            }\n        }\n    });\n    $(document).on('submit', function (event) {\n        var sections;\n\n        if (event.target.method.match(/post|put/i)) {\n            sections = sectionConfig.getAffectedSections(event.target.action);\n            if (sections) {\n                customerData.invalidate(sections);\n            }\n        }\n    });\n\n    return customerData;\n});\n","Magento_Customer/js/model/customer-addresses.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        './customer/address'\n    ],\n    function($, ko, address) {\n        \"use strict\";\n        var isLoggedIn = ko.observable(window.isCustomerLoggedIn);\n        return {\n            getAddressItems: function() {\n                var items = [];\n                if (isLoggedIn) {\n                    var customerData = window.customerData;\n                    if (Object.keys(customerData).length) {\n                        $.each(customerData.addresses, function (key, item) {\n                            items.push(new address(item));\n                        });\n                    }\n                }\n                return items;\n            }\n        }\n    }\n);\n","Magento_Customer/js/model/customer.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'underscore',\n        './address-list'\n    ],\n    function($, ko, _, addressList) {\n        \"use strict\";\n        var isLoggedIn = ko.observable(window.isCustomerLoggedIn),\n            customerData = {};\n\n        if (isLoggedIn()) {\n            customerData = window.customerData;\n        } else {\n            customerData = {};\n        }\n\n        return {\n            customerData: customerData,\n            customerDetails: {},\n            isLoggedIn: isLoggedIn,\n            setIsLoggedIn: function (flag) {\n                isLoggedIn(flag);\n            },\n            getBillingAddressList: function () {\n                return addressList();\n            },\n            getShippingAddressList: function () {\n                return addressList();\n            },\n            setDetails: function (fieldName, value) {\n                if (fieldName) {\n                    this.customerDetails[fieldName] = value;\n                }\n            },\n            getDetails: function (fieldName) {\n                if (fieldName) {\n                    if (this.customerDetails.hasOwnProperty(fieldName)) {\n                        return this.customerDetails[fieldName];\n                    }\n                    return undefined;\n                } else {\n                    return this.customerDetails;\n                }\n            },\n            addCustomerAddress: function (address) {\n                var fields = [\n                        'customer_id', 'country_id', 'street', 'company', 'telephone', 'fax', 'postcode', 'city',\n                        'firstname', 'lastname', 'middlename', 'prefix', 'suffix', 'vat_id', 'default_billing',\n                        'default_shipping'\n                    ],\n                    customerAddress = {},\n                    hasAddress = 0,\n                    existingAddress;\n\n                if (!this.customerData.addresses) {\n                    this.customerData.addresses = [];\n                }\n\n                customerAddress = _.pick(address, fields);\n                if (address.hasOwnProperty('region_id')) {\n                    customerAddress.region = {\n                        region_id: address.region_id,\n                        region: address.region\n                    };\n                }\n                for (existingAddress in this.customerData.addresses) {\n                    if (this.customerData.addresses.hasOwnProperty(existingAddress)) {\n                        if (_.isEqual(this.customerData.addresses[existingAddress], customerAddress)) {\n                            hasAddress = existingAddress;\n                            break;\n                        }\n                    }\n                }\n                if (hasAddress === 0) {\n                    return this.customerData.addresses.push(customerAddress) - 1;\n                }\n                return hasAddress;\n            },\n            setAddressAsDefaultBilling: function (addressId) {\n                if (this.customerData.addresses[addressId]) {\n                    this.customerData.addresses[addressId].default_billing = 1;\n                    return true;\n                }\n                return false;\n            },\n            setAddressAsDefaultShipping: function (addressId) {\n                if (this.customerData.addresses[addressId]) {\n                    this.customerData.addresses[addressId].default_shipping = 1;\n                    return true;\n                }\n                return false;\n            }\n        };\n    }\n);\n","Magento_Customer/js/model/authentication-popup.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Ui/js/modal/modal'\n    ],\n    function ($, modal) {\n        'use strict';\n        return {\n            modalWindow: null,\n\n            /** Create popUp window for provided element */\n            createPopUp: function(element) {\n                this.modalWindow = element;\n                var options = {\n                    'type': 'popup',\n                    'modalClass': 'popup-authentication',\n                    'responsive': true,\n                    'innerScroll': true,\n                    'trigger': '.proceed-to-checkout',\n                    'buttons': []\n                };\n                modal(options, $(this.modalWindow));\n            },\n\n            /** Show login popup window */\n            showModal: function() {\n                $(this.modalWindow).modal('openModal');\n            }\n        }\n    }\n);\n","Magento_Customer/js/model/address-list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'ko',\n        './customer-addresses'\n    ],\n    function(ko, defaultProvider) {\n        \"use strict\";\n        return ko.observableArray(defaultProvider.getAddressItems());\n    }\n);\n","Magento_Customer/js/model/customer/address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([], function() {\n    /**\n     * @param addressData\n     * Returns new address object\n     */\n    return function (addressData) {\n        return {\n            customerAddressId: addressData.id,\n            email: addressData.email,\n            countryId: addressData.country_id,\n            regionId: addressData.region_id,\n            regionCode: addressData.region.region_code,\n            region: addressData.region.region,\n            customerId: addressData.customer_id,\n            street: addressData.street,\n            company: addressData.company,\n            telephone: addressData.telephone,\n            fax: addressData.fax,\n            postcode: addressData.postcode,\n            city: addressData.city,\n            firstname: addressData.firstname,\n            lastname: addressData.lastname,\n            middlename: addressData.middlename,\n            prefix: addressData.prefix,\n            suffix: addressData.suffix,\n            vatId: addressData.vat_id,\n            sameAsBilling: addressData.same_as_billing,\n            saveInAddressBook: addressData.save_in_address_book,\n            customAttributes: addressData.custom_attributes,\n            isDefaultShipping: function() {\n                return addressData.default_shipping;\n            },\n            isDefaultBilling: function() {\n                return addressData.default_billing;\n            },\n            getAddressInline: function() {\n                return addressData.inline;\n            },\n            getType: function() {\n                return 'customer-address'\n            },\n            getKey: function() {\n                return this.getType() + this.customerAddressId;\n            },\n            getCacheKey: function() {\n                return this.getKey();\n            },\n            isEditable: function() {\n                return false;\n            },\n            canUseForBilling: function() {\n                return true;\n            }\n        }\n    }\n});\n","Magento_Customer/js/action/login.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mage/storage',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Customer/js/customer-data'\n    ],\n    function($, storage, globalMessageList, customerData) {\n        'use strict';\n        var callbacks = [],\n            action = function(loginData, redirectUrl, isGlobal, messageContainer) {\n                messageContainer = messageContainer || globalMessageList;\n                return storage.post(\n                    'customer/ajax/login',\n                    JSON.stringify(loginData),\n                    isGlobal\n                ).done(function (response) {\n                    if (response.errors) {\n                        messageContainer.addErrorMessage(response);\n                        callbacks.forEach(function(callback) {\n                            callback(loginData);\n                        });\n                    } else {\n                        callbacks.forEach(function(callback) {\n                            callback(loginData);\n                        });\n                        customerData.invalidate(['customer']);\n                        if (redirectUrl) {\n                            window.location.href = redirectUrl;\n                        } else if (response.redirectUrl) {\n                            window.location.href = response.redirectUrl;\n                        } else {\n                            location.reload();\n                        }\n                    }\n                }).fail(function () {\n                    messageContainer.addErrorMessage({'message': 'Could not authenticate. Please try again later'});\n                    callbacks.forEach(function(callback) {\n                        callback(loginData);\n                    });\n                });\n            };\n\n        action.registerLoginCallback = function(callback) {\n            callbacks.push(callback);\n        };\n\n        return action;\n    }\n);\n","Magento_Customer/js/action/check-email-availability.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'mage/storage',\n        'Magento_Checkout/js/model/url-builder'\n    ],\n    function (storage, urlBuilder) {\n        'use strict';\n\n        return function (deferred, email) {\n            return storage.post(\n                urlBuilder.createUrl('/customers/isEmailAvailable', {}),\n                JSON.stringify({\n                    customerEmail: email\n                }),\n                false\n            ).done(\n                function (isEmailAvailable) {\n                    if (isEmailAvailable) {\n                        deferred.resolve();\n                    } else {\n                        deferred.reject();\n                    }\n                }\n            ).fail(\n                function () {\n                    deferred.reject();\n                }\n            );\n        };\n    }\n);\n","Magento_Customer/js/view/customer.js":"/**\n* Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n* See COPYING.txt for license details.\n*/\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function (Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        initialize: function () {\n            this._super();\n\n            this.customer = customerData.get('customer');\n        }\n    });\n});\n","Magento_Customer/js/view/authentication-popup.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magento_Ui/js/form/form',\n        'Magento_Customer/js/action/login',\n        'Magento_Customer/js/customer-data',\n        'Magento_Customer/js/model/authentication-popup',\n        'mage/translate',\n        'mage/url',\n        'Magento_Ui/js/modal/alert',\n        'mage/validation'\n    ],\n    function($, ko, Component, loginAction, customerData, authenticationPopup, $t, url, alert) {\n        'use strict';\n        return Component.extend({\n            registerUrl: window.authenticationPopup.customerRegisterUrl,\n            forgotPasswordUrl: window.authenticationPopup.customerForgotPasswordUrl,\n            autocomplete: window.checkout.autocomplete,\n            modalWindow: null,\n            isLoading: ko.observable(false),\n\n            defaults: {\n                template: 'Magento_Customer/authentication-popup'\n            },\n\n            initialize: function() {\n                var self = this;\n                this._super();\n                url.setBaseUrl(window.authenticationPopup.baseUrl);\n                loginAction.registerLoginCallback(function() {\n                    self.isLoading(false);\n                });\n            },\n\n            /** Init popup login window */\n            setModalElement: function (element) {\n                if (authenticationPopup.modalWindow == null) {\n                    authenticationPopup.createPopUp(element);\n                }\n            },\n\n            /** Is login form enabled for current customer */\n            isActive: function() {\n                var customer = customerData.get('customer');\n                return customer() == false;\n            },\n\n            /** Show login popup window */\n            showModal: function() {\n                if (this.modalWindow) {\n                    $(this.modalWindow).modal('openModal');\n                } else {\n                    alert({\n                        content: $t('Guest checkout is disabled.')\n                    });\n                }\n            },\n\n            /** Provide login action */\n            login: function(loginForm) {\n                var loginData = {},\n                    formDataArray = $(loginForm).serializeArray();\n                formDataArray.forEach(function (entry) {\n                    loginData[entry.name] = entry.value;\n                });\n\n                if($(loginForm).validation()\n                    && $(loginForm).validation('isValid')\n                ) {\n                    this.isLoading(true);\n                    loginAction(loginData, null, false);\n                }\n            }\n        });\n    }\n);\n","Magento_Bundle/js/price-bundle.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'priceUtils',\n    'priceBox'\n], function ($, _, mageTemplate, utils) {\n    'use strict';\n\n    var globalOptions = {\n        optionConfig: null,\n        productBundleSelector: 'input.bundle.option, select.bundle.option, textarea.bundle.option',\n        qtyFieldSelector: 'input.qty',\n        priceBoxSelector: '.price-box',\n        optionHandlers: {},\n        optionTemplate: '<%- data.label %>' +\n        '<% if (data.finalPrice.value) { %>' +\n        ' +<%- data.finalPrice.formatted %>' +\n        '<% } %>',\n        controlContainer: 'dd', // should be eliminated\n        priceFormat: {},\n        isFixedPrice: false\n    };\n\n    $.widget('mage.priceBundle', {\n        options: globalOptions,\n\n        /**\n         * @private\n         */\n        _init: function initPriceBundle() {\n            var form = this.element,\n                options = $(this.options.productBundleSelector, form);\n\n            options.trigger('change');\n        },\n\n        /**\n         * @private\n         */\n        _create: function createPriceBundle() {\n            var form = this.element,\n                options = $(this.options.productBundleSelector, form),\n                priceBox = $(this.options.priceBoxSelector, form),\n                qty = $(this.options.qtyFieldSelector, form);\n\n            if (priceBox.data('magePriceBox') && priceBox.priceBox('option') && priceBox.priceBox('option').priceConfig) {\n                if (priceBox.priceBox('option').priceConfig.optionTemplate) {\n                    this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\n                }\n                this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\n                priceBox.priceBox('setDefault', this.options.optionConfig.prices);\n            }\n            this._applyQtyFix();\n            this._applyOptionNodeFix(options);\n\n            options.on('change', this._onBundleOptionChanged.bind(this));\n            qty.on('change', this._onQtyFieldChanged.bind(this));\n        },\n\n        /**\n         * Handle change on bundle option inputs\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _onBundleOptionChanged: function onBundleOptionChanged(event) {\n            var changes,\n                bundleOption = $(event.target),\n                priceBox = $(this.options.priceBoxSelector, this.element),\n                handler = this.options.optionHandlers[bundleOption.data('role')];\n\n            bundleOption.data('optionContainer', bundleOption.closest(this.options.controlContainer));\n            bundleOption.data('qtyField', bundleOption.data('optionContainer').find(this.options.qtyFieldSelector));\n\n            if (handler && handler instanceof Function) {\n                changes = handler(bundleOption, this.options.optionConfig, this);\n            } else {\n                changes = defaultGetOptionValue(bundleOption, this.options.optionConfig);\n            }\n\n            if (changes) {\n                priceBox.trigger('updatePrice', changes);\n            }\n            this.updateProductSummary();\n        },\n\n        /**\n         * Handle change on qty inputs near bundle option\n         * @param {jQuery.Event} event\n         * @private\n         */\n        _onQtyFieldChanged: function onQtyFieldChanged(event) {\n            var field = $(event.target),\n                optionInstance,\n                optionConfig;\n\n            if (field.data('optionId') && field.data('optionValueId')) {\n                optionInstance = field.data('option');\n                optionConfig = this.options.optionConfig\n                    .options[field.data('optionId')]\n                    .selections[field.data('optionValueId')];\n                optionConfig.qty = field.val();\n\n                optionInstance.trigger('change');\n            }\n        },\n\n        /**\n         * Helper to fix backend behavior:\n         *  - if default qty large than 1 then backend multiply price in config\n         *\n         * @private\n         */\n        _applyQtyFix: function applyQtyFix() {\n            var config = this.options.optionConfig;\n            if (config.isFixedPrice) {\n                _.each(config.options, function (option) {\n                    _.each(option.selections, function (item) {\n                        if (item.qty && item.qty !== 1) {\n                            _.each(item.prices, function (price) {\n                                price.amount = price.amount / item.qty;\n                            });\n                        }\n                    });\n                });\n            }\n        },\n\n        /**\n         * Helper to fix issue with option nodes:\n         *  - you can't place any html in option ->\n         *    so you can't style it via CSS\n         * @param {jQuery} options\n         * @private\n         */\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\n            var config = this.options,\n                format = config.priceFormat,\n                template = config.optionTemplate;\n            template = mageTemplate(template);\n            options.filter('select').each(function (index, element) {\n                var $element = $(element),\n                    optionId = utils.findOptionId($element),\n                    optionName = $element.prop('name'),\n                    optionType = $element.prop('type'),\n                    optionConfig = config.optionConfig && config.optionConfig.options[optionId].selections;\n\n                $element.find('option').each(function (idx, option) {\n                    var $option,\n                        optionValue,\n                        toTemplate,\n                        prices;\n\n                    $option = $(option);\n                    optionValue = $option.val();\n\n                    if (!optionValue && optionValue !== 0) {\n                        return;\n                    }\n\n                    toTemplate = {\n                        data: {\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\n                        }\n                    };\n                    prices = optionConfig[optionValue].prices;\n\n                    _.each(prices, function (price, type) {\n                        var value = +(price.amount);\n                        value += _.reduce(price.adjustments, function (sum, x) {\n                            return sum + x;\n                        }, 0);\n                        toTemplate.data[type] = {\n                            value: value,\n                            formatted: utils.formatPrice(value, format)\n                        };\n                    });\n\n                    $option.text(template(toTemplate));\n                });\n            });\n        },\n\n        /**\n         * Custom behavior on getting options:\n         * now widget able to deep merge accepted configuration with instance options.\n         * @param  {Object}  options\n         * @return {$.Widget}\n         */\n        _setOptions: function setOptions(options) {\n            $.extend(true, this.options, options);\n\n            this._super(options);\n\n            return this;\n        },\n\n        /**\n         * Handler to update productSummary box\n         */\n        updateProductSummary: function updateProductSummary() {\n            this.element.trigger('updateProductSummary', {\n                config: this.options.optionConfig\n            });\n        }\n    });\n\n    return $.mage.priceBundle;\n\n    /**\n     * Converts option value to priceBox object\n     *\n     * @param   {jQuery} element\n     * @param   {Object} config\n     * @returns {Object|null} - priceBox object with additional prices\n     */\n    function defaultGetOptionValue(element, config) {\n        var changes = {},\n            optionHash,\n            tempChanges,\n            qtyField,\n            optionId = utils.findOptionId(element[0]),\n            optionValue = element.val() || null,\n            optionName = element.prop('name'),\n            optionType = element.prop('type'),\n            optionConfig = config.options[optionId].selections,\n            optionQty = 0,\n            canQtyCustomize = false,\n            selectedIds = config.selected;\n\n        switch (optionType) {\n            case 'radio':\n\n            case 'select-one':\n\n                if (optionType === 'radio' && !element.is(':checked')) {\n                    return null;\n                }\n\n                qtyField = element.data('qtyField');\n                qtyField.data('option', element);\n\n                if (optionValue) {\n                    optionQty = optionConfig[optionValue].qty || 0;\n                    canQtyCustomize = optionConfig[optionValue].customQty === '1';\n                    toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);\n                    tempChanges = utils.deepClone(optionConfig[optionValue].prices);\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig[optionValue]);\n                    tempChanges = applyQty(tempChanges, optionQty);\n                } else {\n                    tempChanges = {};\n                    toggleQtyField(qtyField, '0', optionId, optionValue, false);\n                }\n                optionHash = 'bundle-option-' + optionName;\n                changes[optionHash] = tempChanges;\n                selectedIds[optionId] = [optionValue];\n                break;\n\n            case 'select-multiple':\n                optionValue = _.compact(optionValue);\n\n                _.each(optionConfig, function (row, optionValueCode) {\n                    optionHash = 'bundle-option-' + optionName + '##' + optionValueCode;\n                    optionQty = row.qty || 0;\n                    tempChanges = utils.deepClone(row.prices);\n                    tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);\n                    tempChanges = applyQty(tempChanges, optionQty);\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? tempChanges : {};\n                });\n\n                selectedIds[optionId] = optionValue || [];\n                break;\n\n            case 'checkbox':\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\n                optionQty = optionConfig[optionValue].qty || 0;\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);\n                tempChanges = applyQty(tempChanges, optionQty);\n                changes[optionHash] = element.is(':checked') ? tempChanges : {};\n\n                selectedIds[optionId] = selectedIds[optionId] || [];\n\n                if (!_.contains(selectedIds[optionId], optionValue) && element.is(':checked')) {\n                    selectedIds[optionId].push(optionValue);\n                } else if (!element.is(':checked')) {\n                    selectedIds[optionId] = _.without(selectedIds[optionId], optionValue);\n                }\n                break;\n\n            case 'hidden':\n                optionHash = 'bundle-option-' + optionName + '##' + optionValue;\n                optionQty = optionConfig[optionValue].qty || 0;\n                canQtyCustomize = optionConfig[optionValue].customQty === '1';\n                qtyField = element.data('qtyField');\n                qtyField.data('option', element);\n                toggleQtyField(qtyField, optionQty, optionId, optionValue, canQtyCustomize);\n                tempChanges = utils.deepClone(optionConfig[optionValue].prices);\n                tempChanges = applyTierPrice(tempChanges, optionQty, optionConfig);\n                tempChanges = applyQty(tempChanges, optionQty);\n\n                optionHash = 'bundle-option-' + optionName;\n                changes[optionHash] = tempChanges;\n                selectedIds[optionId] = [optionValue];\n                break;\n        }\n\n        return changes;\n    }\n\n    /**\n     * Helper to toggle qty field\n     * @param {jQuery} element\n     * @param {String|Number} value\n     * @param {String|Number} optionId\n     * @param {String|Number} optionValueId\n     * @param {Boolean} canEdit\n     */\n    function toggleQtyField(element, value, optionId, optionValueId, canEdit) {\n        element\n            .val(value)\n            .data('optionId', optionId)\n            .data('optionValueId', optionValueId)\n            .attr('disabled', !canEdit);\n\n        if (canEdit) {\n            element.removeClass('qty-disabled');\n        } else {\n            element.addClass('qty-disabled');\n        }\n    }\n\n    /**\n     * Helper to multiply on qty\n     *\n     * @param   {Object} prices\n     * @param   {Number} qty\n     * @returns {Object}\n     */\n    function applyQty(prices, qty) {\n        _.each(prices, function (everyPrice) {\n            everyPrice.amount *= qty;\n            _.each(everyPrice.adjustments, function (el, index) {\n                everyPrice.adjustments[index] *= qty;\n            });\n        });\n\n        return prices;\n    }\n\n    /**\n     * Helper to limit price with tier price\n     *\n     * @param {Object} oneItemPrice\n     * @param {Number} qty\n     * @param {Object} optionConfig\n     * @returns {Object}\n     */\n    function applyTierPrice(oneItemPrice, qty, optionConfig) {\n        var tiers = optionConfig.tierPrice,\n            magicKey = _.keys(oneItemPrice)[0],\n            lowest = false;\n\n        _.each(tiers, function (tier, index) {\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (tier.price_qty > qty) {\n                return;\n            }\n            // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n\n            if (tier.prices[magicKey].amount < oneItemPrice[magicKey].amount) {\n                lowest = index;\n            }\n        });\n\n        if (lowest !== false) {\n            oneItemPrice = utils.deepClone(tiers[lowest].prices);\n        }\n\n        return oneItemPrice;\n    }\n});\n","Magento_Bundle/js/slide.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true expr:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.slide', {\n        options: {\n            slideSpeed: 1500,\n            slideSelector: '#bundle-slide',\n            slideBackSelector: '.bundle-slide-back',\n            bundleProductSelector: '#bundleProduct',\n            bundleOptionsContainer: '#options-container',\n            productViewContainer: '#productView',\n            slidedown: true\n\n        },\n\n        _create: function() {\n            if(this.options.slidedown === true) {\n                $(this.options.slideSelector).on('click', $.proxy(this._show, this));\n                $(this.options.slideBackSelector).on('click', $.proxy(this._hide, this));\n                this.options.autostart && this._show();\n            } else {\n                $(this.options.slideSelector).on('click', $.proxy(this._slide, this));\n                $(this.options.slideBackSelector).on('click', $.proxy(this._slideBack, this));\n                this.options.autostart && this._slide();\n            }\n        },\n\n        /**\n         * slide bundleOptionsContainer over to the main view area\n         * @private\n         */\n        _slide: function() {\n            $(this.options.bundleProductSelector).css('top', '0px');\n            $(this.options.bundleOptionsContainer).show();\n            this.element.css('height',$(this.options.productViewContainer).height() + 'px');\n            $(this.options.bundleProductSelector).css('left', '0px').animate(\n                {'left': '-' + this.element.width() + 'px'},\n                this.options.slideSpeed,\n                $.proxy(function() {\n                    this.element.css('height','auto');\n                    $(this.options.productViewContainer).hide();\n                }, this)\n            );\n        },\n\n        /**\n         * slideback productViewContainer to main view area\n         * @private\n         */\n        _slideBack: function() {\n            $(this.options.bundleProductSelector).css('top', '0px');\n            $(this.options.productViewContainer).show();\n            this.element.css('height', $(this.options.bundleOptionsContainer).height() + 'px');\n            $(this.options.bundleProductSelector).animate(\n                {'left': '0px'},\n                this.options.slideSpeed,\n                $.proxy(function() {\n                    $(this.options.bundleOptionsContainer).hide();\n                    this.element.css('height','auto');\n                }, this)\n            );\n        },\n        _show: function() {\n            $(this.options.bundleOptionsContainer).slideDown(800);\n            $('html, body').animate({\n                scrollTop: $(this.options.bundleOptionsContainer).offset().top\n            }, 600);\n            $('#product-options-wrapper > fieldset').focus();\n        },\n        _hide: function() {\n            $('html, body').animate({\n                scrollTop: 0\n            }, 600);\n            $(this.options.bundleOptionsContainer).slideUp(800);\n        }\n    });\n    \n    return $.mage.slide;\n});\n","Magento_Bundle/js/float.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true expr:true*/\ndefine([\"jquery\",\"jquery/ui\"], function($){\n\n    $.widget('mage.float', {\n        options: {\n            productOptionsSelector: '#product-options-wrapper'\n        },\n\n        /**\n         * Bind handlers to scroll event\n         * @private\n         */\n        _create: function() {\n            $(window).on('scroll', $.proxy(this._setTop, this));\n        },\n\n        /**\n         * float bundleSummary on windowScroll\n         * @private\n         */\n        _setTop: function() {\n            if ((this.element).is(':visible')) {\n                var starTop = $(this.options.productOptionsSelector).offset().top,\n                    offset = $(document).scrollTop(),\n                    maxTop = this.element.parent().offset().top;\n                if (!this.options.top) {\n                    this.options.top = this.element.position().top;\n                    this.element.css('top', this.options.top);\n                }\n\n                if (starTop > offset) {\n                    return false;\n                }\n\n                if (offset < this.options.top) {\n                    offset = this.options.top;\n                }\n\n                var allowedTop = this.options.top + offset - starTop;\n\n                if (allowedTop < maxTop) {\n                    this.element.css('top', allowedTop);\n                }\n            }\n        }\n    });\n});\n","Magento_Bundle/js/product-summary.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery/ui',\n    'Magento_Bundle/js/price-bundle'\n], function ($, mageTemplate) {\n    'use strict';\n\n    /**\n     * Widget product Summary:\n     * Handles rendering of Bundle options and displays them in the Summary box\n     */\n    $.widget('mage.productSummary', {\n        options: {\n            mainContainer:          '#product_addtocart_form',\n            templates: {\n                summaryBlock:       '[data-template=\"bundle-summary\"]',\n                optionBlock:        '[data-template=\"bundle-option\"]'\n            },\n            optionSelector:         '[data-container=\"options\"]',\n            summaryContainer:       '[data-container=\"product-summary\"]',\n            bundleSummaryContainer: '.bundle-summary'\n        },\n        cache: {},\n        /**\n         * Method attaches event observer to the product form\n         * @private\n         */\n        _create: function () {\n            this.element\n                .closest(this.options.mainContainer)\n                .on('updateProductSummary', $.proxy(this._renderSummaryBox, this))\n                .priceBundle({})\n            ;\n        },\n        /**\n         * Method extracts data from the event and renders Summary box\n         * using jQuery template mechanism\n         * @param {Event} event\n         * @param {Object} data\n         * @private\n         */\n        _renderSummaryBox: function (event, data) {\n            this.cache.currentElement = data.config;\n            this.cache.currentElementCount = 0;\n\n            // Clear Summary box\n            this.element.html('');\n\n            $.each(this.cache.currentElement.selected, $.proxy(this._renderOption, this));\n            this.element\n                .parents(this.options.bundleSummaryContainer)\n                .toggleClass('empty', !this.cache.currentElementCount); // Zero elements equal '.empty' container\n        },\n\n        /**\n         * @param {String} key\n         * @param {String} row\n         * @private\n         */\n        _renderOption: function (key, row) {\n            var template;\n\n            if (row && row.length > 0 && row[0] !== null) {\n                template = this.element\n                    .closest(this.options.summaryContainer)\n                    .find(this.options.templates.summaryBlock)\n                    .html();\n                template = mageTemplate($.trim(template), {\n                    data: {\n                        _label_: this.cache.currentElement.options[key].title\n                    }\n                });\n\n                this.cache.currentKey = key;\n                this.cache.summaryContainer = $(template);\n                this.element.append(this.cache.summaryContainer);\n\n                $.each(row, this._renderOptionRow.bind(this));\n                this.cache.currentElementCount += row.length;\n\n                //Reset Cache\n                this.cache.currentKey = null;\n            }\n        },\n\n        /**\n         * @param {String} key\n         * @param {String} optionIndex\n         * @private\n         */\n        _renderOptionRow: function (key, optionIndex) {\n            var template;\n\n            template = this.element\n                .closest(this.options.summaryContainer)\n                .find(this.options.templates.optionBlock)\n                .html();\n            template = mageTemplate($.trim(template), {\n                data: {\n                    _quantity_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].qty,\n                    _label_: this.cache.currentElement.options[this.cache.currentKey].selections[optionIndex].name\n                }\n            });\n            this.cache.summaryContainer\n                .find(this.options.optionSelector)\n                .append(template);\n        }\n    });\n\n    return $.mage.productSummary;\n});\n","Magento_ConfigurableProduct/js/configurable-customer-data.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\nrequire([\n    'jquery',\n    'Magento_ConfigurableProduct/js/options-updater'\n], function ($, Updater) {\n    'use strict';\n\n    var selectors = {\n            formSelector: '#product_addtocart_form'\n        },\n        configurableWidgetName = 'mageConfigurable',\n        widgetInitEvent = 'configurable.initialized',\n\n    /**\n    * Sets all configurable attribute's selected values\n    */\n    updateConfigurableOptions = function () {\n        var configurableWidget = $(selectors.formSelector).data(configurableWidgetName);\n\n        if (!configurableWidget) {\n            return;\n        }\n        configurableWidget.options.values = this.productOptions || {};\n        configurableWidget._configureForValues();\n    },\n    updater = new Updater(widgetInitEvent, updateConfigurableOptions);\n\n    updater.listen();\n});\n","Magento_ConfigurableProduct/js/configurable.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'priceUtils',\n    'priceBox',\n    'jquery/ui',\n    'jquery/jquery.parsequery'\n], function ($, _, mageTemplate) {\n    'use strict';\n\n    $.widget('mage.configurable', {\n        options: {\n            superSelector: '.super-attribute-select',\n            selectSimpleProduct: '[name=\"selected_configurable_option\"]',\n            priceHolderSelector: '.price-box',\n            spConfig: {},\n            state: {},\n            priceFormat: {},\n            optionTemplate: '<%- data.label %>' +\n            '<% if (data.finalPrice.value) { %>' +\n            ' <%- data.finalPrice.formatted %>' +\n            '<% } %>',\n            mediaGallerySelector: '[data-gallery-role=gallery-placeholder]',\n            mediaGalleryInitial: null,\n            slyOldPriceSelector: '.sly-old-price',\n\n            /**\n             * Defines the mechanism of how images of a gallery should be\n             * updated when user switches between configurations of a product.\n             *\n             * As for now value of this option can be either 'replace' or 'prepend'.\n             *\n             * @type {String}\n             */\n            gallerySwitchStrategy: 'replace'\n        },\n\n        /**\n         * Creates widget\n         * @private\n         */\n        _create: function () {\n            // Initial setting of various option values\n            this._initializeOptions();\n\n            // Override defaults with URL query parameters and/or inputs values\n            this._overrideDefaults();\n\n            // Change events to check select reloads\n            this._setupChangeEvents();\n\n            // Fill state\n            this._fillState();\n\n            // Setup child and prev/next settings\n            this._setChildSettings();\n\n            // Setup/configure values to inputs\n            this._configureForValues();\n\n            $(this.element).trigger('configurable.initialized');\n        },\n\n        /**\n         * Initialize tax configuration, initial settings, and options values.\n         * @private\n         */\n        _initializeOptions: function () {\n            var options = this.options,\n                gallery = $(options.mediaGallerySelector),\n                priceBoxOptions = $(this.options.priceHolderSelector).priceBox('option').priceConfig || null;\n\n            if (priceBoxOptions && priceBoxOptions.optionTemplate) {\n                options.optionTemplate = priceBoxOptions.optionTemplate;\n            }\n\n            if (priceBoxOptions && priceBoxOptions.priceFormat) {\n                options.priceFormat = priceBoxOptions.priceFormat;\n            }\n            options.optionTemplate = mageTemplate(options.optionTemplate);\n\n            options.settings = options.spConfig.containerId ?\n                $(options.spConfig.containerId).find(options.superSelector) :\n                $(options.superSelector);\n\n            options.values = options.spConfig.defaultValues || {};\n            options.parentImage = $('[data-role=base-image-container] img').attr('src');\n\n            this.inputSimpleProduct = this.element.find(options.selectSimpleProduct);\n\n            gallery.data('gallery') ?\n                this._onGalleryLoaded(gallery) :\n                gallery.on('gallery:loaded', this._onGalleryLoaded.bind(this, gallery));\n        },\n\n        /**\n         * Override default options values settings with either URL query parameters or\n         * initialized inputs values.\n         * @private\n         */\n        _overrideDefaults: function () {\n            var hashIndex = window.location.href.indexOf('#');\n\n            if (hashIndex !== -1) {\n                this._parseQueryParams(window.location.href.substr(hashIndex + 1));\n            }\n\n            if (this.options.spConfig.inputsInitialized) {\n                this._setValuesByAttribute();\n            }\n        },\n\n        /**\n         * Parse query parameters from a query string and set options values based on the\n         * key value pairs of the parameters.\n         * @param {*} queryString - URL query string containing query parameters.\n         * @private\n         */\n        _parseQueryParams: function (queryString) {\n            var queryParams = $.parseQuery({\n                query: queryString\n            });\n\n            $.each(queryParams, $.proxy(function (key, value) {\n                this.options.values[key] = value;\n            }, this));\n        },\n\n        /**\n         * Override default options values with values based on each element's attribute\n         * identifier.\n         * @private\n         */\n        _setValuesByAttribute: function () {\n            this.options.values = {};\n            $.each(this.options.settings, $.proxy(function (index, element) {\n                var attributeId;\n\n                if (element.value) {\n                    attributeId = element.id.replace(/[a-z]*/, '');\n                    this.options.values[attributeId] = element.value;\n                }\n            }, this));\n        },\n\n        /**\n         * Set up .on('change') events for each option element to configure the option.\n         * @private\n         */\n        _setupChangeEvents: function () {\n            $.each(this.options.settings, $.proxy(function (index, element) {\n                $(element).on('change', this, this._configure);\n            }, this));\n        },\n\n        /**\n         * Iterate through the option settings and set each option's element configuration,\n         * attribute identifier. Set the state based on the attribute identifier.\n         * @private\n         */\n        _fillState: function () {\n            $.each(this.options.settings, $.proxy(function (index, element) {\n                var attributeId = element.id.replace(/[a-z]*/, '');\n\n                if (attributeId && this.options.spConfig.attributes[attributeId]) {\n                    element.config = this.options.spConfig.attributes[attributeId];\n                    element.attributeId = attributeId;\n                    this.options.state[attributeId] = false;\n                }\n            }, this));\n        },\n\n        /**\n         * Set each option's child settings, and next/prev option setting. Fill (initialize)\n         * an option's list of selections as needed or disable an option's setting.\n         * @private\n         */\n        _setChildSettings: function () {\n            var childSettings = [],\n                settings = this.options.settings,\n                index = settings.length,\n                option;\n\n            while (index--) {\n                option = settings[index];\n\n                if (index) {\n                    option.disabled = true;\n                } else {\n                    this._fillSelect(option);\n                }\n\n                _.extend(option, {\n                    childSettings: childSettings.slice(),\n                    prevSetting: settings[index - 1],\n                    nextSetting: settings[index + 1]\n                });\n\n                childSettings.push(option);\n            }\n        },\n\n        /**\n         * Setup for all configurable option settings. Set the value of the option and configure\n         * the option, which sets its state, and initializes the option's choices, etc.\n         * @private\n         */\n        _configureForValues: function () {\n            if (this.options.values) {\n                this.options.settings.each($.proxy(function (index, element) {\n                    var attributeId = element.attributeId;\n                    element.value = this.options.values[attributeId] || '';\n                    this._configureElement(element);\n                }, this));\n            }\n        },\n\n        /**\n         * Event handler for configuring an option.\n         * @private\n         * @param {Object} event - Event triggered to configure an option.\n         */\n        _configure: function (event) {\n            event.data._configureElement(this);\n        },\n\n        /**\n         * Configure an option, initializing it's state and enabling related options, which\n         * populates the related option's selection and resets child option selections.\n         * @private\n         * @param {*} element - The element associated with a configurable option.\n         */\n        _configureElement: function (element) {\n            this.simpleProduct = this._getSimpleProductId(element);\n\n            if (element.value) {\n                this.options.state[element.config.id] = element.value;\n\n                if (element.nextSetting) {\n                    element.nextSetting.disabled = false;\n                    this._fillSelect(element.nextSetting);\n                    this._resetChildren(element.nextSetting);\n                } else {\n                    if (!!document.documentMode) {\n                        this.inputSimpleProduct.val(element.options[element.selectedIndex].config.allowedProducts[0]);\n                    } else {\n                        this.inputSimpleProduct.val(element.selectedOptions[0].config.allowedProducts[0]);\n                    }\n                }\n            } else {\n                this._resetChildren(element);\n            }\n            this._reloadPrice();\n            this._displayRegularPriceBlock(this.simpleProduct);\n            this._changeProductImage();\n        },\n\n        /**\n         * Change displayed product image according to chosen options of configurable product\n         * @private\n         */\n        _changeProductImage: function () {\n            var images = this.options.spConfig.images[this.simpleProduct],\n                initialImages = this.options.mediaGalleryInitial,\n                galleryObject = $(this.options.mediaGallerySelector).data('gallery');\n\n            if (galleryObject) {\n                if (images) {\n                    if (this.options.gallerySwitchStrategy === 'prepend') {\n                        images = images.concat(initialImages);\n                    }\n\n                    images = $.extend(true, [], images);\n\n                    images.forEach(function (img) {\n                        img.type = 'image';\n                    });\n\n                    galleryObject.updateData(images);\n                } else {\n                    galleryObject.updateData(initialImages);\n                    $(this.options.mediaGallerySelector).AddFotoramaVideoEvents();\n                }\n            }\n\n            galleryObject.first();\n        },\n\n        /**\n         * For a given option element, reset all of its selectable options. Clear any selected\n         * index, disable the option choice, and reset the option's state if necessary.\n         * @private\n         * @param {*} element - The element associated with a configurable option.\n         */\n        _resetChildren: function (element) {\n            if (element.childSettings) {\n                _.each(element.childSettings, function (set) {\n                    set.selectedIndex = 0;\n                    set.disabled = true;\n                });\n\n                if (element.config) {\n                    this.options.state[element.config.id] = false;\n                }\n            }\n        },\n\n        /**\n         * Populates an option's selectable choices.\n         * @private\n         * @param {*} element - Element associated with a configurable option.\n         */\n        _fillSelect: function (element) {\n            var attributeId = element.id.replace(/[a-z]*/, ''),\n                options = this._getAttributeOptions(attributeId),\n                prevConfig,\n                index = 1,\n                allowedProducts,\n                i,\n                j;\n\n            this._clearSelect(element);\n            element.options[0] = new Option('', '');\n            element.options[0].innerHTML = this.options.spConfig.chooseText;\n            prevConfig = false;\n\n            if (element.prevSetting) {\n                prevConfig = element.prevSetting.options[element.prevSetting.selectedIndex];\n            }\n\n            if (options) {\n                for (i = 0; i < options.length; i++) {\n                    allowedProducts = [];\n\n                    if (prevConfig) {\n                        for (j = 0; j < options[i].products.length; j++) {\n                            // prevConfig.config can be undefined\n                            if (prevConfig.config &&\n                                prevConfig.config.allowedProducts &&\n                                prevConfig.config.allowedProducts.indexOf(options[i].products[j]) > -1) {\n                                allowedProducts.push(options[i].products[j]);\n                            }\n                        }\n                    } else {\n                        allowedProducts = options[i].products.slice(0);\n                    }\n\n                    if (allowedProducts.length > 0) {\n                        options[i].allowedProducts = allowedProducts;\n                        element.options[index] = new Option(this._getOptionLabel(options[i]), options[i].id);\n\n                        if (typeof options[i].price !== 'undefined') {\n                            element.options[index].setAttribute('price', options[i].prices);\n                        }\n\n                        element.options[index].config = options[i];\n                        index++;\n                    }\n                }\n            }\n        },\n\n        /**\n         * Generate the label associated with a configurable option. This includes the option's\n         * label or value and the option's price.\n         * @private\n         * @param {*} option - A single choice among a group of choices for a configurable option.\n         * @return {String} The option label with option value and price (e.g. Black +1.99)\n         */\n        _getOptionLabel: function (option) {\n            return option.label;\n        },\n\n        /**\n         * Removes an option's selections.\n         * @private\n         * @param {*} element - The element associated with a configurable option.\n         */\n        _clearSelect: function (element) {\n            var i;\n\n            for (i = element.options.length - 1; i >= 0; i--) {\n                element.remove(i);\n            }\n        },\n\n        /**\n         * Retrieve the attribute options associated with a specific attribute Id.\n         * @private\n         * @param {Number} attributeId - The id of the attribute whose configurable options are sought.\n         * @return {Object} Object containing the attribute options.\n         */\n        _getAttributeOptions: function (attributeId) {\n            if (this.options.spConfig.attributes[attributeId]) {\n                return this.options.spConfig.attributes[attributeId].options;\n            }\n        },\n\n        /**\n         * Reload the price of the configurable product incorporating the prices of all of the\n         * configurable product's option selections.\n         */\n        _reloadPrice: function () {\n            $(this.options.priceHolderSelector).trigger('updatePrice', this._getPrices());\n        },\n\n        /**\n         * Get product various prices\n         * @returns {{}}\n         * @private\n         */\n        _getPrices: function () {\n            var prices = {},\n                elements = _.toArray(this.options.settings),\n                hasProductPrice = false;\n\n            _.each(elements, function (element) {\n                var selected = element.options[element.selectedIndex],\n                    config = selected && selected.config,\n                    priceValue = {};\n\n                if (config && config.allowedProducts.length === 1 && !hasProductPrice) {\n                    priceValue = this._calculatePrice(config);\n                    hasProductPrice = true;\n                }\n\n                prices[element.attributeId] = priceValue;\n            }, this);\n\n            return prices;\n        },\n\n        /**\n         * Returns prices for configured products\n         *\n         * @param {*} config - Products configuration\n         * @returns {*}\n         * @private\n         */\n        _calculatePrice: function (config) {\n            var displayPrices = $(this.options.priceHolderSelector).priceBox('option').prices,\n                newPrices = this.options.spConfig.optionPrices[_.first(config.allowedProducts)];\n\n            _.each(displayPrices, function (price, code) {\n                if (newPrices[code]) {\n                    displayPrices[code].amount = newPrices[code].amount - displayPrices[code].amount;\n                }\n            });\n\n            return displayPrices;\n        },\n\n        /**\n         * Returns Simple product Id\n         *  depending on current selected option.\n         *\n         * @private\n         * @param {HTMLElement} element\n         * @returns {String|undefined}\n         */\n        _getSimpleProductId: function (element) {\n            // TODO: Rewrite algorithm. It should return ID of\n            //        simple product based on selected options.\n            var allOptions = element.config.options,\n                value = element.value,\n                config;\n\n            config = _.filter(allOptions, function (option) {\n                return option.id === value;\n            });\n            config = _.first(config);\n\n            return _.isEmpty(config) ?\n                undefined :\n                _.first(config.allowedProducts);\n\n        },\n\n        /**\n         * Show or hide regular price block\n         *\n         * @param {*} optionId\n         * @private\n         */\n        _displayRegularPriceBlock: function (optionId) {\n            if (typeof optionId != 'undefined'\n                && this.options.spConfig.optionPrices[optionId].oldPrice.amount\n                != this.options.spConfig.optionPrices[optionId].finalPrice.amount\n            ) {\n                $(this.options.slyOldPriceSelector).show();\n            } else {\n                $(this.options.slyOldPriceSelector).hide();\n            }\n        },\n\n        /**\n         * Callback which fired after gallery gets initialized.\n         *\n         * @param {HTMLElement} element - DOM element associated with gallery.\n         */\n        _onGalleryLoaded: function (element) {\n            var galleryObject = element.data('gallery');\n\n            this.options.mediaGalleryInitial = galleryObject.returnCurrentImages();\n        }\n    });\n\n    return $.mage.configurable;\n});\n","Magento_ConfigurableProduct/js/options-updater.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'Magento_Customer/js/customer-data'\n], function ($, customerData) {\n    'use strict';\n\n    var selectors = {\n        formSelector: '#product_addtocart_form',\n        productIdSelector: '#product_addtocart_form [name=\"product\"]'\n    },\n    cartData = customerData.get('cart'),\n    productId = $(selectors.productIdSelector).val(),\n\n    /**\n    * set productOptions according to cart data from customer-data\n    *\n    * @param {Object} data - cart data from customer-data\n    * @returns {Boolean} - whether the new options differ from previous\n    */\n    setProductOptions = function (data) {\n        var changedProductOptions;\n\n        if (!(data && data.items && data.items.length && productId)) {\n            return false;\n        }\n        changedProductOptions = data.items.find(function (item) {\n            return item['product_id'] === productId;\n        });\n        changedProductOptions = changedProductOptions && changedProductOptions.options &&\n            changedProductOptions.options.reduce(function (obj, val) {\n                obj[val['option_id']] = val['option_value'];\n\n                return obj;\n            }, {});\n\n        if (JSON.stringify(this.productOptions || {}) === JSON.stringify(changedProductOptions || {})) {\n            return false;\n        }\n\n        this.productOptions = changedProductOptions;\n\n        return true;\n    },\n\n    /**\n    * Listens to update of cart data or options initialization and update selected option according to customer data\n    *\n    */\n    listen = function () {\n        cartData.subscribe(function (updateCartData) {\n            if (this.setProductOptions(updateCartData)) {\n                this.updateOptions();\n            }\n        }.bind(this));\n        $(selectors.formSelector).on(this.eventName, function () {\n            this.setProductOptions(cartData());\n            this.updateOptions();\n        }.bind(this));\n    },\n\n    /**\n    * Updater constructor function\n    *\n    */\n    Updater = function (eventName, updateOptionsCallback) {\n        if (this instanceof Updater) {\n            this.eventName = eventName;\n            this.updateOptions = updateOptionsCallback;\n            this.productOptions = {};\n        }\n    };\n\n    Updater.prototype.setProductOptions = setProductOptions;\n    Updater.prototype.listen = listen;\n\n    return Updater;\n});\n","Magento_CheckoutAgreements/js/model/agreement-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'mage/validation'\n    ],\n    function ($) {\n        'use strict';\n        var agreementsConfig = window.checkoutConfig.checkoutAgreements;\n        return {\n            /**\n             * Validate checkout agreements\n             *\n             * @returns {boolean}\n             */\n            validate: function() {\n                if (!agreementsConfig.isEnabled) {\n                    return true;\n                }\n\n                var form = $('.payment-method._active form[data-role=checkout-agreements]');\n                form.validation();\n                return form.validation('isValid');\n            }\n        }\n    }\n);\n","Magento_CheckoutAgreements/js/model/agreements-modal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Ui/js/modal/modal',\n        'mage/translate'\n    ],\n    function ($, modal, $t) {\n        'use strict';\n        return {\n            modalWindow: null,\n\n            /** Create popUp window for provided element */\n            createModal: function(element) {\n                this.modalWindow = element;\n                var options = {\n                    'type': 'popup',\n                    'modalClass': 'agreements-modal',\n                    'responsive': true,\n                    'innerScroll': true,\n                    'trigger': '.show-modal',\n                    'buttons': [\n                        {\n                            text: $t('Close'),\n                            class: 'action secondary action-hide-popup',\n                            click: function() {\n                                this.closeModal();\n                            }\n                        }\n                    ]\n                };\n                modal(options, $(this.modalWindow));\n            },\n\n            /** Show login popup window */\n            showModal: function() {\n                $(this.modalWindow).modal('openModal');\n            }\n        }\n    }\n);\n","Magento_CheckoutAgreements/js/model/place-order-mixin.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    'jquery',\n    'mage/utils/wrapper'\n], function ($, wrapper) {\n    'use strict';\n    var agreementsConfig = window.checkoutConfig.checkoutAgreements;\n\n    return function (placeOrderAction) {\n        /** Override default place order action and add agreement_ids to request */\n        return wrapper.wrap(placeOrderAction, function(originalAction, paymentData, redirectOnSuccess, messageContainer) {\n            if (!agreementsConfig.isEnabled) {\n                return originalAction(paymentData, redirectOnSuccess, messageContainer);\n            }\n\n            var agreementForm = $('.payment-method._active form[data-role=checkout-agreements]'),\n                agreementData = agreementForm.serializeArray(),\n                agreementIds = [];\n\n            agreementData.forEach(function(item) {\n                agreementIds.push(item.value);\n            });\n\n            paymentData.extension_attributes = {agreement_ids: agreementIds};\n            return originalAction(paymentData, redirectOnSuccess, messageContainer);\n        });\n    };\n});\n","Magento_CheckoutAgreements/js/view/checkout-agreements.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'jquery',\n        'uiComponent',\n        'Magento_CheckoutAgreements/js/model/agreements-modal'\n    ],\n    function (ko, $, Component, agreementsModal) {\n        'use strict';\n        var agreementsConfig = window.checkoutConfig.checkoutAgreements,\n            agreementManualMode = 1;\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_CheckoutAgreements/checkout/checkout-agreements'\n            },\n            isVisible: agreementsConfig.isEnabled,\n            agreements: agreementsConfig.agreements,\n            modalTitle: ko.observable(null),\n            modalContent: ko.observable(null),\n            modalWindow: null,\n\n            /**\n             * Checks if agreement required\n             *\n             * @param element\n             */\n            isAgreementRequired: function(element) {\n                return element.mode == agreementManualMode;\n            },\n\n            /**\n             * Show agreement content in modal\n             *\n             * @param element\n             */\n            showContent: function (element) {\n                this.modalTitle(element.checkboxText);\n                this.modalContent(element.content);\n                agreementsModal.showModal();\n            },\n\n            /**\n             * Init modal window for rendered element\n             *\n             * @param element\n             */\n            initModal: function(element) {\n                agreementsModal.createModal(element);\n            }\n        });\n    }\n);\n","Magento_CheckoutAgreements/js/view/agreement-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_CheckoutAgreements/js/model/agreement-validator'\n    ],\n    function (Component, additionalValidators, agreementValidator) {\n        'use strict';\n        additionalValidators.registerValidator(agreementValidator);\n        return Component.extend({});\n    }\n);\n","Magento_GiftMessage/extra-options.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.extraOptions', {\n        options: {\n            events: 'billingSave shippingSave',\n            additionalContainer: '#onepage-checkout-shipping-method-additional-load'\n        },\n\n        /**\n         * Set up event handler for requesting any additional extra options from the backend.\n         * @private\n         */\n        _create: function() {\n            this.element.on(this.options.events, $.proxy(this._addExtraOptions, this));\n        },\n\n        /**\n         * Fetch the extra options using an Ajax call. Extra options include Gift Receipt and\n         * Printed Card.\n         * @private\n         */\n        _addExtraOptions: function() {\n            $.ajax({\n                url: this.options.additionalUrl,\n                context: this,\n                type: 'post',\n                async: false,\n                success: function(response) {\n                    $(this.options.additionalContainer).html(response).trigger('contentUpdated');\n                }\n            });\n        }\n    });\n    \n    return $.mage.extraOptions;\n});\n","Magento_GiftMessage/gift-options.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.giftOptions', {\n        options: {\n            mageError: 'mage-error',\n            noDisplay: 'no-display',\n            requiredEntry: 'required-entry'\n        },\n\n        /**\n         * Initial toggle of the various gift options after widget instantiation.\n         * @private\n         */\n        _init: function() {\n            this._toggleVisibility();\n        },\n\n        /**\n         * Bind a click handler to the widget's context element.\n         * @private\n         */\n        _create: function() {\n            this.element.on('click', $.proxy(this._toggleVisibility, this));\n            $(this.element.data('selector').id).find('.giftmessage-area')\n                .on('change', $.proxy(this._toggleRequired, this));\n        },\n\n        /**\n         * Toggle the visibility of the widget's context element's selector(s).\n         * @private\n         * @param event {Object} - Click event. Target is a checkbox.\n         */\n        _toggleVisibility: function(event) {\n            var checkbox = event ? $(event.target) : this.element,\n                container = $(checkbox.data('selector').id);\n            if (checkbox.is(':checked')) {\n                container.show()\n                    .find('.giftmessage-area:not(:visible)').each(function(x, element) {\n                        if ($(element).val().length > 0) {\n                            $(element).change();\n                            container.find('a').click();\n                        }\n                    });\n            } else {\n                var _this = this;\n                container.hide()\n                    .find('.input-text:not(.giftmessage-area)').each(function(x, element) {\n                        $(element).val(element.defaultValue).removeClass(_this.options.mageError)\n                            .next('div.' + _this.options.mageError).remove();\n                    }).end()\n                    .find('.giftmessage-area').val('').change().end()\n                    .find('.select').val('').change().end()\n                    .find('.checkbox:checked').prop('checked', false).click().prop('checked', false).end()\n                    .find('.price-box').addClass(this.options.noDisplay).end();\n            }\n        },\n\n        /**\n         * Make the From and To input fields required if a gift message has been written.\n         * @private\n         * @param event {Object} - Change event. Target is a textarea.\n         */\n        _toggleRequired: function(event) {\n            var textArea = $(event.target),\n                length = textArea.val().length;\n            textArea.closest('li').prev('.fields')\n                .find('.input-text').toggleClass(this.options.requiredEntry, length > 0);\n        }\n    });\n    \n    return $.mage.giftOptions;\n});\n","Magento_GiftMessage/js/model/gift-message.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(['uiElement', 'underscore', 'mage/url'],\n    function (uiElement, _, url) {\n        'use strict';\n\n        var provider = uiElement();\n\n        return function (itemId) {\n            var model = {\n                id: 'message-' + itemId,\n                itemId: itemId,\n                observables: {},\n                additionalOptions: [],\n                submitParams: [\n                    'recipient',\n                    'sender',\n                    'message'\n                ],\n                initialize: function() {\n                    this.getObservable('alreadyAdded')(false);\n                    var message = false;\n\n                    if (this.itemId == 'orderLevel') {\n                        message = window.giftOptionsConfig.giftMessage.hasOwnProperty(this.itemId)\n                            ? window.giftOptionsConfig.giftMessage[this.itemId]\n                            : null;\n                    } else {\n                        message =\n                            window.giftOptionsConfig.giftMessage.hasOwnProperty('itemLevel')\n                            && window.giftOptionsConfig.giftMessage['itemLevel'].hasOwnProperty(this.itemId)\n                            && window.giftOptionsConfig.giftMessage['itemLevel'][this.itemId].hasOwnProperty('message')\n                            ? window.giftOptionsConfig.giftMessage['itemLevel'][this.itemId]['message']\n                            : null;\n                    }\n                    if (_.isObject(message)) {\n                        this.getObservable('recipient')(message.recipient);\n                        this.getObservable('sender')(message.sender);\n                        this.getObservable('message')(message.message);\n                        this.getObservable('alreadyAdded')(true);\n                    }\n                },\n                getObservable: function(key) {\n                    this.initObservable(this.id, key);\n                    return provider[this.getUniqueKey(this.id, key)];\n                },\n                initObservable: function(node, key) {\n                    if (node && !this.observables.hasOwnProperty(node)) {\n                        this.observables[node] = [];\n                    }\n                    if (key && this.observables[node].indexOf(key) == -1) {\n                        this.observables[node].push(key);\n                        provider.observe(this.getUniqueKey(node, key));\n                    }\n                },\n                getUniqueKey: function(node, key) {\n                    return node + '-' + key;\n                },\n                getConfigValue: function(key) {\n                    return window.giftOptionsConfig.hasOwnProperty(key) ?\n                        window.giftOptionsConfig[key]\n                        : null;\n                },\n                reset: function() {\n                    this.getObservable('isClear')(true);\n                },\n                getAfterSubmitCallbacks: function() {\n                    var callbacks = [];\n                    callbacks.push(this.afterSubmit);\n                    _.each(this.additionalOptions, function(option) {\n                        if (_.isFunction(option.afterSubmit)) {\n                            callbacks.push(option.afterSubmit);\n                        }\n                    });\n                    return callbacks;\n                },\n                afterSubmit: function() {\n                    window.location.href = url.build('checkout/cart/updatePost')\n                        + '?form_key=' + window.checkoutConfig.formKey\n                        + '&cart[]';\n                },\n                getSubmitParams: function(remove) {\n                    var params = {},\n                        self = this;\n                    _.each(this.submitParams, function(key) {\n                        var observable = provider[self.getUniqueKey(self.id, key)];\n                        if (_.isFunction(observable)) {\n                            params[key] = remove ? null : observable();\n                        }\n                    });\n\n                    if(this.additionalOptions.length) {\n                        params['extension_attributes'] = {};\n                    }\n                    _.each(this.additionalOptions, function(option) {\n                        if (_.isFunction(option.getSubmitParams)) {\n                            params['extension_attributes'] = _.extend(\n                                params['extension_attributes'],\n                                option.getSubmitParams(remove)\n                            );\n                        }\n                    });\n                    return params;\n                },\n                /**\n                 * Check if gift message can be displayed.\n                 *\n                 * @returns {Boolean}\n                 */\n                isGiftMessageAvailable: function () {\n                    var isGloballyAvailable,\n                        giftMessageConfig,\n                        itemConfig;\n\n                    // itemId represent gift message level: 'orderLevel' constant or cart item ID\n                    if (this.itemId === 'orderLevel') {\n                        return this.getConfigValue('isOrderLevelGiftOptionsEnabled');\n                    }\n\n                    // gift message product configuration must override system configuration\n                    isGloballyAvailable = this.getConfigValue('isItemLevelGiftOptionsEnabled');\n                    giftMessageConfig = window.giftOptionsConfig.giftMessage;\n                    itemConfig = giftMessageConfig.hasOwnProperty('itemLevel') &&\n                    giftMessageConfig.itemLevel.hasOwnProperty(this.itemId) ?\n                        giftMessageConfig.itemLevel[this.itemId] :\n                        {};\n\n                    return itemConfig.hasOwnProperty('is_available') ? itemConfig['is_available'] : isGloballyAvailable;\n                }\n            };\n            model.initialize();\n            return model;\n        }\n    }\n);\n","Magento_GiftMessage/js/model/gift-options.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(['underscore', 'ko'],\n    function (_, ko) {\n\n        'use strict';\n\n        return {\n            options: ko.observableArray([]),\n            addOption: function (option) {\n                if (!this.options().hasOwnProperty(option.itemId)) {\n                    this.options.push({\n                            id: option.itemId, value: option\n                        }\n                    );\n                }\n            },\n            getOptionByItemId: function (itemId) {\n                var option = null;\n                _.each(this.options(), function (data) {\n                    if (data.id === itemId) {\n                        option = data.value;\n\n                        return false;\n                    }\n                });\n\n                return option;\n            }\n        };\n    }\n);\n","Magento_GiftMessage/js/model/url-builder.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/model/url-builder'\n    ],\n    function ($, urlBuilder) {\n        'use strict';\n\n        return $.extend(\n            urlBuilder,\n            {\n                storeCode: window.giftOptionsConfig.storeCode\n            }\n        );\n    }\n);\n","Magento_GiftMessage/js/action/gift-options.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_GiftMessage/js/model/url-builder',\n        'mage/storage',\n        'Magento_Ui/js/model/messageList',\n        'Magento_Checkout/js/model/error-processor',\n        'mage/url',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (urlBuilder, storage, messageList, errorProcessor, url, quote) {\n        'use strict';\n\n        return function (giftMessage, remove) {\n            var serviceUrl;\n\n            url.setBaseUrl(giftMessage.getConfigValue('baseUrl'));\n\n            if (giftMessage.getConfigValue('isCustomerLoggedIn')) {\n                serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message', {});\n\n                if (giftMessage.itemId != 'orderLevel') {\n                    serviceUrl = urlBuilder.createUrl('/carts/mine/gift-message/:itemId', {\n                        itemId: giftMessage.itemId\n                    });\n                }\n            } else {\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/gift-message', {\n                    cartId: quote.getQuoteId()\n                });\n\n                if (giftMessage.itemId != 'orderLevel') {\n                    serviceUrl = urlBuilder.createUrl(\n                        '/guest-carts/:cartId/gift-message/:itemId',\n                        {\n                            cartId: quote.getQuoteId(), itemId: giftMessage.itemId\n                        }\n                    );\n                }\n            }\n            messageList.clear();\n\n            storage.post(\n                serviceUrl,\n                JSON.stringify({\n                    gift_message: giftMessage.getSubmitParams(remove)\n                })\n            ).done(\n                function (response) {\n                    giftMessage.reset();\n                    _.each(giftMessage.getAfterSubmitCallbacks(), function (callback) {\n                        if (_.isFunction(callback)) {\n                            callback();\n                        }\n                    });\n                }\n            ).fail(\n                function (response) {\n                    errorProcessor.process(response);\n                }\n            );\n        };\n    }\n);\n","Magento_GiftMessage/js/view/gift-message.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine([\n        'uiComponent',\n        'Magento_GiftMessage/js/model/gift-message',\n        'Magento_GiftMessage/js/model/gift-options',\n        'Magento_GiftMessage/js/action/gift-options'\n    ],\n    function (Component, giftMessage, giftOptions, giftOptionsService) {\n        \"use strict\";\n        return Component.extend({\n            formBlockVisibility: null,\n            resultBlockVisibility: null,\n            model: {},\n            initialize: function() {\n                var self = this;\n                this._super()\n                    .observe('formBlockVisibility')\n                    .observe({'resultBlockVisibility': false});\n\n                this.itemId = this.itemId || 'orderLevel';\n                var model = new giftMessage(this.itemId);\n                giftOptions.addOption(model);\n                this.model = model;\n\n                this.model.getObservable('isClear').subscribe(function(value) {\n                    if (value == true) {\n                        self.formBlockVisibility(false);\n                        self.model.getObservable('alreadyAdded')(true);\n                    }\n                });\n\n                this.isResultBlockVisible();\n            },\n            isResultBlockVisible: function() {\n                var self = this;\n                if (this.model.getObservable('alreadyAdded')()) {\n                    this.resultBlockVisibility(true);\n                }\n                this.model.getObservable('additionalOptionsApplied').subscribe(function(value) {\n                    if (value == true) {\n                        self.resultBlockVisibility(true);\n                    }\n                });\n            },\n            getObservable: function(key) {\n                return this.model.getObservable(key);\n            },\n            toggleFormBlockVisibility: function() {\n                if (!this.model.getObservable('alreadyAdded')()) {\n                    this.formBlockVisibility(!this.formBlockVisibility());\n                }\n            },\n            editOptions: function() {\n                this.resultBlockVisibility(false);\n                this.formBlockVisibility(true);\n            },\n            deleteOptions: function() {\n                giftOptionsService(this.model, true);\n            },\n            hideFormBlock: function() {\n                this.formBlockVisibility(false);\n                if (this.model.getObservable('alreadyAdded')()) {\n                    this.resultBlockVisibility(true);\n                }\n            },\n            hasActiveOptions: function() {\n                var regionData = this.getRegion('additionalOptions');\n                var options = regionData();\n                for (var i in options) {\n                    if (options[i].isActive()) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n            isActive: function() {\n                return this.model.isGiftMessageAvailable();\n            },\n            submitOptions: function() {\n                giftOptionsService(this.model);\n            }\n        });\n    }\n);\n","Magento_Multishipping/js/overview.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\n/*global alert*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"mage/translate\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.orderOverview', {\n        options: {\n            opacity: 0.5, // CSS opacity for the 'Place Order' button when it's clicked and then disabled.\n            pleaseWaitLoader: 'span.please-wait', // 'Submitting order information...' Ajax loader.\n            placeOrderSubmit: 'button[type=\"submit\"]', // The 'Place Order' button.\n            agreements: '#checkout-agreements' // Container for all of the checkout agreements and terms/conditions\n        },\n\n        /**\n         * Bind a submit handler to the form.\n         * @private\n         */\n        _create: function() {\n            this.element.on('submit', $.proxy(this._showLoader, this));\n        },\n\n        /**\n         * Verify that all agreements and terms/conditions are checked. Show the Ajax loader. Disable\n         * the submit button (i.e. Place Order).\n         * @return {Boolean}\n         * @private\n         */\n        _showLoader: function() {\n            if ($(this.options.agreements).find('input[type=\"checkbox\"]:not(:checked)').length > 0) {\n                return false;\n            }\n            this.element.find(this.options.pleaseWaitLoader).show().end()\n                .find(this.options.placeOrderSubmit).prop('disabled', true).css('opacity', this.options.opacity);\n            return true;\n        }\n    });\n\n    return $.mage.orderOverview;\n});\n","Magento_Multishipping/js/payment.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global alert*/\n\ndefine([\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'jquery/ui',\n    'mage/translate'\n], function ($, mageTemplate, alert) {\n    'use strict';\n\n    $.widget('mage.payment', {\n        options: {\n            continueSelector: '#payment-continue',\n            methodsContainer: '#payment-methods',\n            minBalance: 0.0001,\n            tmpl: '<input id=\"hidden-free\" type=\"hidden\" name=\"payment[method]\" value=\"free\">'\n        },\n\n        _create: function () {\n            this.element.find('dd [name^=\"payment[\"]').prop('disabled', true).end()\n                .on('click', this.options.continueSelector, $.proxy(this._submitHandler, this))\n                .on('updateCheckoutPrice', $.proxy(function (event, data) {\n                    //updating the checkoutPrice\n                    if (data.price) {\n                        this.options.checkoutPrice += data.price;\n                    }\n\n                    //updating total price\n                    if (data.totalPrice) {\n                        data.totalPrice = this.options.checkoutPrice;\n                    }\n\n                    if (this.options.checkoutPrice < this.options.minBalance) {\n                        // Add free input field, hide and disable unchecked checkbox payment method and all radio button payment methods\n                        this._disablePaymentMethods();\n                    } else {\n                        // Remove free input field, show all payment method\n                        this._enablePaymentMethods();\n                    }\n                }, this))\n                .on('click', 'dt input:radio', $.proxy(this._paymentMethodHandler, this));\n\n            if (this.options.checkoutPrice < this.options.minBalance) {\n                this._disablePaymentMethods();\n            } else {\n                this._enablePaymentMethods();\n            }\n        },\n\n        /**\n         * Display payment details when payment method radio button is checked\n         * @private\n         * @param {EventObject} e\n         */\n        _paymentMethodHandler: function (e) {\n            var element = $(e.target),\n                parentsDl = element.closest('dl');\n\n            parentsDl.find('dt input:radio').prop('checked', false);\n            parentsDl.find('.items').hide().find('[name^=\"payment[\"]').prop('disabled', true);\n            element.prop('checked', true).parent().nextUntil('dt').find('.items').show().find('[name^=\"payment[\"]').prop('disabled', false);\n        },\n\n        /**\n         * make sure one payment method is selected\n         * @private\n         * @return {Boolean}\n         */\n        _validatePaymentMethod: function () {\n            var methods = this.element.find('[name^=\"payment[\"]'),\n                isValid = false;\n\n            if (methods.length === 0) {\n                alert({\n                    content: $.mage.__('We can\\'t complete your order because you don\\'t have a payment method set up.')\n                });\n            } else if (this.options.checkoutPrice < this.options.minBalance) {\n                isValid = true;\n            } else if (methods.filter('input:radio:checked').length) {\n                isValid = true;\n            } else {\n                alert({\n                    content: $.mage.__('Please choose a payment method.')\n                });\n            }\n\n            return isValid;\n        },\n\n        /**\n         * Disable and enable payment methods\n         * @private\n         */\n        _disablePaymentMethods: function () {\n            var tmpl = mageTemplate(this.options.tmpl, {\n                data: {}\n            });\n\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', true).end()\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', true).parent().hide();\n            this.element.find('[name=\"payment[method]\"][value=\"free\"]').parent('dt').remove();\n            this.element.find(this.options.methodsContainer).hide().find('[name^=\"payment[\"]').prop('disabled', true);\n\n            $(tmpl).appendTo(this.element);\n        },\n\n        /**\n         * Enable and enable payment methods\n         * @private\n         */\n        _enablePaymentMethods: function () {\n            this.element.find('input[name=\"payment[method]\"]').prop('disabled', false).end()\n                .find('input[name=\"payment[method]\"][value=\"free\"]').remove().end()\n                .find('dt input:radio:checked').trigger('click').end()\n                .find('input[id^=\"use\"][name^=\"payment[use\"]:not(:checked)').prop('disabled', false).parent().show();\n            this.element.find(this.options.methodsContainer).show();\n        },\n\n        /**\n         * Validate  before form submit\n         * @private\n         * @param {EventObject} e\n         */\n        _submitHandler: function (e) {\n            e.preventDefault();\n\n            if (this._validatePaymentMethod()) {\n                this.element.submit();\n            }\n        }\n    });\n\n    return $.mage.payment;\n});\n","Magento_Multishipping/js/multi-shipping.js":"/**\n * @category    checkout multi-shipping addresses\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.multiShipping', {\n        options: {\n            addNewAddressBtn: 'button[data-role=\"add-new-address\"]', // Add a new multishipping address.\n            addNewAddressFlag: '#add_new_address_flag', // Hidden input field with value 0 or 1.\n            canContinueBtn: 'button[data-role=\"can-continue\"]', // Continue (update quantity or go to shipping).\n            canContinueFlag: '#can_continue_flag' // Hidden input field with value 0 or 1.\n        },\n\n        /**\n         * Bind event handlers to click events for corresponding buttons.\n         * @private\n         */\n        _create: function() {\n            $(this.options.addNewAddressBtn).on('click', $.proxy(this._addNewAddress, this));\n            $(this.options.canContinueBtn).on('click', $.proxy(this._canContinue, this));\n        },\n\n        /**\n         * Add a new address. Set the hidden input field and submit the form. Then enter a new shipping address.\n         * @private\n         */\n        _addNewAddress: function() {\n            $(this.options.addNewAddressFlag).val(1);\n            this.element.submit();\n        },\n\n        /**\n         * Can the user continue to the next step? The data-flag attribute holds either 0 (no) or 1 (yes).\n         * @private\n         * @param event {Event} - Click event on the corresponding button.\n         */\n        _canContinue: function(event) {\n            $(this.options.canContinueFlag).val(parseInt($(event.currentTarget).data('flag'), 10));\n        }\n    });\n    \n    return $.mage.multiShipping;\n});\n","Magento_PageCache/js/page-cache.js":"/**\n * Handles additional ajax request for rendering user private content\n *\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'domReady',\n    'jquery/ui',\n    'mage/cookies'\n], function ($, domReady) {\n    'use strict';\n\n    /**\n     * Nodes tree to flat list converter\n     * @returns {Array}\n     */\n    $.fn.comments = function () {\n        var elements = [];\n\n        /**\n         * @param {jQuery} element - Comment holder\n         */\n        (function lookup(element) {\n            $(element).contents().each(function (index, el) {\n                switch (el.nodeType) {\n                    case 1: // ELEMENT_NODE\n                        lookup(el);\n                        break;\n\n                    case 8: // COMMENT_NODE\n                        elements.push(el);\n                        break;\n\n                    case 9: // DOCUMENT_NODE\n                        var hostName = window.location.hostname,\n                            iFrameHostName = $('<a>')\n                                .prop('href', element.prop('src'))\n                                .prop('hostname');\n\n                        if (hostName === iFrameHostName) {\n                            lookup($(el).find('body'));\n                        }\n                        break;\n                }\n            });\n        })(this);\n\n        return elements;\n    };\n\n    /**\n     * FormKey Widget - this widget is generating from key, saves it to cookie and\n     */\n    $.widget('mage.formKey', {\n        options: {\n            inputSelector: 'input[name=\"form_key\"]',\n            allowedCharacters: '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',\n            length: 16\n        },\n\n        /**\n         * Creates widget 'mage.formKey'\n         * @private\n         */\n        _create: function () {\n            var formKey = $.mage.cookies.get('form_key');\n\n            if (!formKey) {\n                formKey = generateRandomString(this.options.allowedCharacters, this.options.length);\n                $.mage.cookies.set('form_key', formKey);\n            }\n            $(this.options.inputSelector).val(formKey);\n        }\n    });\n\n    /**\n     * PageCache Widget\n     */\n    $.widget('mage.pageCache', {\n        options: {\n            url: '/',\n            patternPlaceholderOpen: /^ BLOCK (.+) $/,\n            patternPlaceholderClose: /^ \\/BLOCK (.+) $/,\n            versionCookieName: 'private_content_version',\n            handles: []\n        },\n\n        /**\n         * Creates widget 'mage.pageCache'\n         * @private\n         */\n        _create: function () {\n            var placeholders,\n                version = $.mage.cookies.get(this.options.versionCookieName);\n\n            if (!version) {\n                return;\n            }\n            placeholders = this._searchPlaceholders(this.element.comments());\n\n            if (placeholders && placeholders.length) {\n                this._ajax(placeholders, version);\n            }\n        },\n\n        /**\n         * Parse page for placeholders.\n         * @param {Array} elements\n         * @returns {Array}\n         * @private\n         */\n        _searchPlaceholders: function (elements) {\n            var placeholders = [],\n                tmp = {},\n                ii,\n                len,\n                el, matches, name;\n\n            if (!(elements && elements.length)) {\n                return placeholders;\n            }\n\n            for (ii = 0, len = elements.length; ii < len; ii++) {\n                el = elements[ii];\n                matches = this.options.patternPlaceholderOpen.exec(el.nodeValue);\n                name = null;\n\n                if (matches) {\n                    name = matches[1];\n                    tmp[name] = {\n                        name: name,\n                        openElement: el\n                    };\n                } else {\n                    matches = this.options.patternPlaceholderClose.exec(el.nodeValue);\n\n                    if (matches) {\n                        name = matches[1];\n\n                        if (tmp[name]) {\n                            tmp[name].closeElement = el;\n                            placeholders.push(tmp[name]);\n                            delete tmp[name];\n                        }\n                    }\n                }\n            }\n\n            return placeholders;\n        },\n\n        /**\n         * Parse for page and replace placeholders\n         * @param {Object} placeholder\n         * @param {Object} html\n         * @protected\n         */\n        _replacePlaceholder: function (placeholder, html) {\n            if (!placeholder || !html) {\n                return;\n            }\n\n            var parent = $(placeholder.openElement).parent(),\n                contents = parent.contents(),\n                startReplacing = false,\n                prevSibling = null,\n                yy,\n                len,\n                element;\n\n            for (yy = 0, len = contents.length; yy < len; yy++) {\n                element = contents[yy];\n\n                if (element == placeholder.openElement) {\n                    startReplacing = true;\n                }\n\n                if (startReplacing) {\n                    $(element).remove();\n                } else if (element.nodeType != 8) {\n                    //due to comment tag doesn't have siblings we try to find it manually\n                    prevSibling = element;\n                }\n\n                if (element == placeholder.closeElement) {\n                    break;\n                }\n            }\n\n            if (prevSibling) {\n                $(prevSibling).after(html);\n            } else {\n                $(parent).prepend(html);\n            }\n\n            // trigger event to use mage-data-init attribute\n            $(parent).trigger('contentUpdated');\n        },\n\n        /**\n         * AJAX helper\n         * @param {Object} placeholders\n         * @param {String} version\n         * @private\n         */\n        _ajax: function (placeholders, version) {\n            var ii,\n                data = {\n                    blocks: [],\n                    handles: this.options.handles,\n                    originalRequest: this.options.originalRequest,\n                    version: version\n                };\n\n            for (ii = 0; ii < placeholders.length; ii++) {\n                data.blocks.push(placeholders[ii].name);\n            }\n            data.blocks = JSON.stringify(data.blocks.sort());\n            data.handles = JSON.stringify(data.handles);\n            data.originalRequest = JSON.stringify(data.originalRequest);\n            $.ajax({\n                url: this.options.url,\n                data: data,\n                type: 'GET',\n                cache: true,\n                dataType: 'json',\n                context: this,\n\n                /**\n                 * Response handler\n                 * @param {Object} response\n                 */\n                success: function (response) {\n                    var placeholder, i;\n\n                    for (i = 0; i < placeholders.length; i++) {\n                        placeholder = placeholders[i];\n\n                        if (response.hasOwnProperty(placeholder.name)) {\n                            this._replacePlaceholder(placeholder, response[placeholder.name]);\n                        }\n                    }\n                }\n            });\n        }\n    });\n\n    domReady(function () {\n        $('body')\n            .formKey();\n    });\n\n    return {\n        'pageCache': $.mage.pageCache,\n        'formKey': $.mage.formKey\n    };\n\n    /**\n     * Helper. Generate random string\n     * TODO: Merge with mage/utils\n     * @param {String} chars - list of symbols\n     * @param {Number} length - length for need string\n     * @returns {String}\n     */\n    function generateRandomString(chars, length) {\n        var result = '';\n        length = length > 0 ? length : 1;\n\n        while (length--) {\n            result += chars[Math.round(Math.random() * (chars.length - 1))];\n        }\n\n        return result;\n    }\n});\n","Magento_Fedex/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'city': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_Fedex/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        './shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_Fedex/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../model/shipping-rates-validator',\n        '../model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        fedexShippingRatesValidator,\n        fedexShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('fedex', fedexShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('fedex', fedexShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_Paypal/order-review.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([\n    \"jquery\",\n    'Magento_Ui/js/modal/alert',\n    \"jquery/ui\",\n    \"mage/translate\",\n    \"mage/mage\",\n    \"mage/validation\"\n], function($, alert){\n    \"use strict\";\n\n    $.widget('mage.orderReview', {\n        options: {\n            orderReviewSubmitSelector: '#review-button',\n            shippingSelector: '#shipping_method',\n            shippingSubmitFormSelector: null,\n            updateOrderSelector: '#update-order',\n            billingAsShippingSelector: '#billing\\\\:as_shipping',\n            updateContainerSelector: '#details-reload',\n            waitLoadingContainer: '#review-please-wait',\n            shippingMethodContainer: '#shipping-method-container',\n            isAjax: false,\n            updateShippingMethodSubmitSelector: \"#update-shipping-method-submit\",\n            reviewSubmitSelector: \"#review-submit\",\n            shippingMethodUpdateUrl: null,\n            updateOrderSubmitUrl: null,\n            canEditShippingMethod: false\n        },\n\n        /**\n         * Widget instance properties\n         */\n        triggerPropertyChange: true,\n        isShippingSubmitForm: false,\n\n        _create: function () {\n            //change handler for ajaxEnabled\n            if (this.options.isAjax) {\n                this._submitOrder = this._ajaxSubmitOrder;\n            }\n\n            this.element.on('click', this.options.orderReviewSubmitSelector, $.proxy(this._submitOrder, this))\n                .on('click', this.options.billingAsShippingSelector, $.proxy(this._shippingTobilling, this))\n                .on('change', this.options.shippingSelector, $.proxy(this._submitUpdateOrder, this, this.options.updateOrderSubmitUrl, this.options.updateContainerSelector))\n                .find(this.options.updateOrderSelector).on('click', $.proxy(this._updateOrderHandler, this)).end()\n                .find(this.options.updateShippingMethodSubmitSelector).hide().end()\n                .find(this.options.reviewSubmitSelector).hide();\n            this._shippingTobilling();\n            if ($(this.options.shippingSubmitFormSelector).length && this.options.canEditShippingMethod) {\n                this.isShippingSubmitForm = true;\n                $(this.options.shippingSubmitFormSelector).find(this.options.updateShippingMethodSubmitSelector).hide().end()\n                    .on('change',\n                        this.options.shippingSelector, $.proxy(this._submitUpdateOrder, this, $(this.options.shippingSubmitFormSelector).prop('action'), this.options.updateContainerSelector));\n                this._updateOrderSubmit(!$(this.options.shippingSubmitFormSelector).find(this.options.shippingSelector).val());\n            } else {\n                var isDisable = (this.isShippingSubmitForm && this.element.find(this.options.shippingSelector).val());\n                this.element.on('input propertychange', \":input[name]\", $.proxy(this._updateOrderSubmit, this, isDisable, this._onShippingChange))\n                    .find('select').not(this.options.shippingSelector).on('change', this._propertyChange);\n                this._updateOrderSubmit(isDisable);\n            }\n\n        },\n\n        /**\n         * show ajax loader\n         */\n        _ajaxBeforeSend: function () {\n            this.element.find(this.options.waitLoadingContainer).show();\n        },\n\n        /**\n         * hide ajax loader\n         */\n        _ajaxComplete: function () {\n            this.element.find(this.options.waitLoadingContainer).hide();\n        },\n\n        /**\n         * trigger propertychange for input type select\n         */\n        _propertyChange: function () {\n            $(this).trigger('propertychange');\n        },\n\n        /**\n         * trigger change for the update of shippping methods from server\n         */\n        _updateOrderHandler: function () {\n            $(this.options.shippingSelector).trigger('change');\n        },\n\n        /**\n         * Attempt to submit order\n         */\n        _submitOrder: function () {\n            if (this._validateForm()) {\n                this.element.find(this.options.updateOrderSelector).fadeTo(0, 0.5)\n                    .end().find(this.options.waitLoadingContainer).show()\n                    .end().submit();\n            }\n            this._updateOrderSubmit(true);\n        },\n\n        /**\n         * Attempt to ajax submit order\n         */\n        _ajaxSubmitOrder: function () {\n            if (this.element.find(this.options.waitLoadingContainer).is(\":visible\")) {\n                return false;\n            }\n            $.ajax({\n                url: this.element.prop('action'),\n                type: 'post',\n                context: this,\n                data: {isAjax: 1},\n                dataType: 'json',\n                beforeSend: this._ajaxBeforeSend,\n                complete: this._ajaxComplete,\n                success: function (response) {\n                    if ($.type(response) === 'object' && !$.isEmptyObject(response)) {\n                        if (response.error_messages) {\n                            this._ajaxComplete();\n                            var msg = response.error_messages;\n                            if (msg) {\n                                if ($.type(msg) === 'array') {\n                                    msg = msg.join(\"\\n\");\n                                }\n                            }\n                            alert({\n                                content: msg\n                            });\n                            return false;\n                        }\n                        if (response.redirect) {\n                            $.mage.redirect(response.redirect);\n                            return false;\n                        }\n                        else if (response.success) {\n                            $.mage.redirect(this.options.successUrl);\n                            return false;\n                        }\n                        this._ajaxComplete();\n                        alert({\n                            content: $.mage.__('Sorry, something went wrong.')\n                        });\n                    }\n                },\n                error: function () {\n                    alert({\n                        content: $.mage.__('Sorry, something went wrong. Please try again later.')\n                    });\n                    this._ajaxComplete();\n                }\n            });\n        },\n\n        /**\n         * Validate Order form\n         */\n        _validateForm: function () {\n            if (this.element.data('mageValidation')) {\n                return this.element.validation().valid();\n            }\n            return true;\n        },\n\n        /**\n         * Check/Set whether order can be submitted\n         * Also disables form submission element, if any\n         * @param shouldDisable - whether should prevent order submission explicitly\n         * @param optional function for shipping change handler\n         * @param optional if true the property change will be set to true\n         */\n        _updateOrderSubmit: function (shouldDisable, fn) {\n            this._toggleButton(this.options.orderReviewSubmitSelector, shouldDisable);\n            if ($.type(fn) === 'function') {\n                fn.call(this);\n            }\n        },\n\n        /**\n         * Enable/Disable button\n         * @param button button selector to be toggled\n         * @param disable  boolean for toggling\n         */\n        _toggleButton: function (button, disable) {\n            $(button).prop({\"disabled\": disable}).toggleClass('no-checkout', disable).fadeTo(0, disable ? 0.5 : 1);\n        },\n\n        /**\n         * Copy element value from shipping to billing address\n         * @param e optional\n         */\n        _shippingTobilling: function (e) {\n            if (this.options.shippingSubmitFormSelector) {\n                return false;\n            }\n            var isChecked = $(this.options.billingAsShippingSelector).is(':checked'),\n                opacity = isChecked ? 0.5 : 1;\n            if (isChecked) {\n                this.element.validation(\"clearError\", ':input[name^=\"billing\"]');\n            }\n            $(':input[name^=\"shipping\"]', this.element).each($.proxy(function (key, value) {\n                var fieldObj = $(value.id.replace('shipping:', '#billing\\\\:'));\n                if (isChecked) {\n                    fieldObj = fieldObj.val($(value).val());\n                }\n                fieldObj.prop({\"readonly\": isChecked, \"disabled\": isChecked}).fadeTo(0, opacity);\n                if (fieldObj.is(\"select\")) {\n                    this.triggerPropertyChange = false;\n                    fieldObj.trigger('change');\n                }\n            }, this));\n            if (isChecked || e) {\n                this._updateOrderSubmit(true);\n            }\n            this.triggerPropertyChange = true;\n        },\n\n        /**\n         * Dispatch an ajax request of Update Order submission\n         * @param url - url where to submit shipping method\n         * @param resultId - id of element to be updated\n         */\n        _submitUpdateOrder: function (url, resultId) {\n            if (this.element.find(this.options.waitLoadingContainer).is(\":visible\")) {\n                return false;\n            }\n            var isChecked = $(this.options.billingAsShippingSelector).is(':checked'),\n                formData = null,\n                callBackResponseHandler = null,\n                shippingMethod = $.trim($(this.options.shippingSelector).val());\n            this._shippingTobilling();\n            if (url && resultId && this._validateForm() && shippingMethod) {\n                this._updateOrderSubmit(true);\n                this._toggleButton(this.options.updateOrderSelector, true);\n                // form data and callBack updated based on the shippping Form element\n                if (this.isShippingSubmitForm) {\n                    formData = $(this.options.shippingSubmitFormSelector).serialize() + \"&isAjax=true\";\n                    callBackResponseHandler = function (response) {\n                        $(resultId).html(response);\n                        this._updateOrderSubmit(false);\n                        this._ajaxComplete();\n                    };\n                } else {\n                    formData = this.element.serialize() + \"&isAjax=true\";\n                    callBackResponseHandler = function (response) {\n                        $(resultId).html(response);\n                        this._ajaxShippingUpdate(shippingMethod);\n                    };\n                }\n                if (isChecked) {\n                    $(this.options.shippingSelect).prop('disabled', true);\n                }\n                $.ajax({\n                    url: url,\n                    type: 'post',\n                    context: this,\n                    beforeSend: this._ajaxBeforeSend,\n                    data: formData,\n                    success: callBackResponseHandler\n                });\n            }\n        },\n\n        /**\n         * Update Shipping Methods Element from server\n         * @param shippingMethod\n         */\n        _ajaxShippingUpdate: function (shippingMethod) {\n            $.ajax({\n                    url: this.options.shippingMethodUpdateUrl,\n                    data: {isAjax: true, shipping_method: shippingMethod},\n                    type: 'post',\n                    context: this,\n                    success: function (response) {\n                        $(this.options.shippingMethodContainer).parent().html(response);\n                        this._toggleButton(this.options.updateOrderSelector, false);\n                        this._updateOrderSubmit(false);\n                    },\n                    complete: this._ajaxComplete\n                }\n            );\n        },\n\n        /**\n         * Actions on change Shipping Address data\n         */\n        _onShippingChange: function () {\n            if (this.triggerPropertyChange && $.trim($(this.options.shippingSelector).val())) {\n                this.element.find(this.options.shippingSelector).hide().end()\n                    .find(this.options.shippingSelector + '_update').show();\n            }\n        }\n    });\n    \n    return $.mage.orderReview;\n});\n","Magento_Paypal/js/paypal-checkout.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/confirm',\n    'jquery/ui',\n    'mage/mage'\n], function ($, confirm) {\n    'use strict';\n\n    $.widget('mage.paypalCheckout', {\n        options: {\n            originalForm:\n                'form:not(#product_addtocart_form_from_popup):has(input[name=\"product\"][value=%1])',\n            productId: 'input[type=\"hidden\"][name=\"product\"]',\n            ppCheckoutSelector: '[data-role=pp-checkout-url]',\n            ppCheckoutInput: '<input type=\"hidden\" data-role=\"pp-checkout-url\" name=\"return_url\" value=\"\"/>'\n        },\n\n        /**\n         * Initialize store credit events\n         * @private\n         */\n        _create: function () {\n            this.element.on('click', '[data-action=\"checkout-form-submit\"]', $.proxy(function (e) {\n                var $target = $(e.target),\n                    returnUrl = $target.data('checkout-url'),\n                    productId = $target.closest('form').find(this.options.productId).val(),\n                    originalForm = this.options.originalForm.replace('%1', productId),\n                    self = this;\n\n                e.preventDefault();\n\n                if (this.options.confirmUrl && this.options.confirmMessage) {\n                    confirm({\n                        content: this.options.confirmMessage,\n                        actions: {\n\n                            /**\n                             * Confirmation handler\n                             *\n                             */\n                            confirm: function () {\n                                returnUrl = self.options.confirmUrl;\n                                self._redirect(returnUrl, originalForm);\n                            },\n\n                            /**\n                             * Cancel confirmation handler\n                             *\n                             */\n                            cancel: function () {\n                                self._redirect(returnUrl);\n                            }\n                        }\n                    });\n\n                    return false;\n                }\n\n                this._redirect(returnUrl, originalForm);\n\n            }, this));\n        },\n\n        /**\n         * Redirect to certain url, with optional form\n         * @param {String} returnUrl\n         * @param {HTMLElement} originalForm\n         *\n         */\n        _redirect: function (returnUrl, originalForm) {\n            var $form,\n                ppCheckoutInput;\n\n            if (this.options.isCatalogProduct && originalForm) {\n                // find the form from which the button was clicked\n                $form = originalForm ? $(originalForm) : $($(this.options.shortcutContainerClass).closest('form'));\n\n                ppCheckoutInput = $form.find(this.options.ppCheckoutSelector)[0];\n\n                if (!ppCheckoutInput) {\n                    ppCheckoutInput = $(this.options.ppCheckoutInput);\n                    ppCheckoutInput.appendTo($form);\n                }\n                $(ppCheckoutInput).val(returnUrl);\n\n                $form.submit();\n            } else {\n                $.mage.redirect(returnUrl);\n            }\n        }\n    });\n\n    return $.mage.paypalCheckout;\n});\n","Magento_Paypal/js/model/iframe.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko'\n    ],\n    function (ko) {\n        'use strict';\n\n        var isInAction = ko.observable(false);\n\n        return {\n            isInAction: isInAction,\n            stopEventPropagation: function (event) {\n                event.stopImmediatePropagation();\n                event.preventDefault();\n            }\n        };\n    }\n);\n","Magento_Paypal/js/model/iframe-redirect.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'Magento_Paypal/js/model/iframe',\n        'Magento_Ui/js/model/messageList'\n    ],\n    function (ko, iframe, messageList) {\n        'use strict';\n\n        return function (cartUrl, errorMessage, goToSuccessPage, successUrl) {\n            if (this === window.self) {\n                window.location = cartUrl;\n            }\n\n            if (!!errorMessage.message) {\n                document.removeEventListener('click', iframe.stopEventPropagation, true);\n                iframe.isInAction(false);\n                messageList.addErrorMessage(errorMessage);\n            } else if (!!goToSuccessPage) {\n                window.location = successUrl;\n            } else {\n                window.location = cartUrl;\n            }\n        };\n    }\n);\n","Magento_Paypal/js/action/set-payment-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/url-builder',\n        'mage/storage',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function ($, quote, urlBuilder, storage, errorProcessor, customer, fullScreenLoader) {\n        'use strict';\n\n        return function (messageContainer) {\n            var serviceUrl,\n                payload,\n                paymentData = quote.paymentMethod();\n\n            /**\n             * Checkout for guest and registered customer.\n             */\n            if (!customer.isLoggedIn()) {\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/selected-payment-method', {\n                    cartId: quote.getQuoteId()\n                });\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    method: paymentData\n                };\n            } else {\n                serviceUrl = urlBuilder.createUrl('/carts/mine/selected-payment-method', {});\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    method: paymentData\n                };\n            }\n            fullScreenLoader.startLoader();\n\n            return storage.put(\n                serviceUrl, JSON.stringify(payload)\n            ).done(\n                function () {\n                    $.mage.redirect(window.checkoutConfig.payment.paypalExpress.redirectUrl[quote.paymentMethod().method]);\n                }\n            ).fail(\n                function (response) {\n                    errorProcessor.process(response, messageContainer);\n                    fullScreenLoader.stopLoader();\n                }\n            );\n        };\n    }\n);\n","Magento_Paypal/js/view/payment/paypal-payments.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n        rendererList.push(\n            {\n                type: 'paypal_express',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-express'\n            },\n            {\n                type: 'paypal_express_bml',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-express-bml'\n            },\n            {\n                type: 'payflow_express',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express'\n            },\n            {\n                type: 'payflow_express_bml',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml'\n            },\n            {\n                type: 'payflowpro',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/payflowpro-method'\n            },\n            {\n                type: 'payflow_link',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\n            },\n            {\n                type: 'payflow_advanced',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\n            },\n            {\n                type: 'hosted_pro',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/iframe-methods'\n            },\n            {\n                type: 'paypal_billing_agreement',\n                component: 'Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement'\n            }\n        );\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/paypal-billing-agreement.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/view/payment/default',\n        \"mage/validation\"\n    ],\n    function ($, Component) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/paypal_billing_agreement-form',\n                selectedBillingAgreement: ''\n            },\n            initObservable: function () {\n                this._super()\n                    .observe('selectedBillingAgreement');\n                return this;\n            },\n            getTransportName: function() {\n                return window.checkoutConfig.payment.paypalBillingAgreement.transportName;\n            },\n            getBillingAgreements: function() {\n                return window.checkoutConfig.payment.paypalBillingAgreement.agreements;\n            },\n            getData: function() {\n\n                var additionalData = null;\n                if (this.getTransportName()) {\n                    additionalData = {};\n                    additionalData[this.getTransportName()] = this.selectedBillingAgreement();\n                }\n                return {'method': this.item.method, 'additional_data': additionalData};\n            },\n            validate: function() {\n                var form = '#billing-agreement-form';\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/payflow-express'\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/payflow-express-bml.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/payflow-express-bml'\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/iframe-methods.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'ko',\n        'Magento_Paypal/js/model/iframe',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function (Component, ko, iframe, fullScreenLoader) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/iframe-methods',\n                paymentReady: false\n            },\n            redirectAfterPlaceOrder: false,\n            isInAction: iframe.isInAction,\n            initObservable: function () {\n                this._super()\n                    .observe('paymentReady');\n\n                return this;\n            },\n            isPaymentReady: function () {\n                return this.paymentReady();\n            },\n            /**\n             * Get action url for payment method iframe.\n             * @returns {String}\n             */\n            getActionUrl: function () {\n                return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\n            },\n            /**\n             * Places order in pending payment status.\n             */\n            placePendingPaymentOrder: function () {\n                var self = this;\n                this.afterPlaceOrder = function () {\n                    self.paymentReady(true);\n                };\n                if (this.placeOrder()) {\n                    this.isInAction(true);\n                    // capture all click events\n                    document.addEventListener('click', iframe.stopEventPropagation, true);\n                }\n            },\n            /**\n             * Hide loader when iframe is fully loaded.\n             * @returns {void}\n             */\n            iframeLoaded: function() {\n                fullScreenLoader.stopLoader();\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express-bml.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/paypal-express-bml'\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/payflowpro-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magento_Payment/js/view/payment/iframe',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_Checkout/js/action/set-payment-information',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function ($, Component, additionalValidators, setPaymentInformationAction, fullScreenLoader) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/payflowpro-form'\n            },\n            placeOrderHandler: null,\n            validateHandler: null,\n\n            setPlaceOrderHandler: function(handler) {\n                this.placeOrderHandler = handler;\n            },\n\n            setValidateHandler: function(handler) {\n                this.validateHandler = handler;\n            },\n\n            context: function() {\n                return this;\n            },\n\n            isShowLegend: function() {\n                return true;\n            },\n\n            getCode: function() {\n                return 'payflowpro';\n            },\n\n            isActive: function() {\n                return true;\n            },\n\n            /**\n             * @override\n             */\n            placeOrder: function () {\n                var self = this;\n\n                if (this.validateHandler() && additionalValidators.validate()) {\n                    this.isPlaceOrderActionAllowed(false);\n                    fullScreenLoader.startLoader();\n                    $.when(\n                        setPaymentInformationAction(this.messageContainer, {'method': self.getCode()})\n                    ).done(\n                        function () {\n                            self.placeOrderHandler().fail(\n                                function () {\n                                    fullScreenLoader.stopLoader();\n                                }\n                            );\n                        }\n                    ).always(\n                        function () {\n                            self.isPlaceOrderActionAllowed(true);\n                            fullScreenLoader.stopLoader();\n                        }\n                    );\n                }\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/view/payment/default',\n        'Magento_Paypal/js/action/set-payment-method',\n        'Magento_Checkout/js/model/payment/additional-validators'\n    ],\n    function ($, Component, setPaymentMethodAction, additionalValidators) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/paypal-express-bml',\n                billingAgreement: ''\n            },\n\n            /** Init observable variables */\n            initObservable: function () {\n                this._super()\n                    .observe('billingAgreement');\n                return this;\n            },\n\n            /** Open window with  */\n            showAcceptanceWindow: function(data, event) {\n                window.open(\n                    $(event.target).attr('href'),\n                    'olcwhatispaypal',\n                    'toolbar=no, location=no,' +\n                    ' directories=no, status=no,' +\n                    ' menubar=no, scrollbars=yes,' +\n                    ' resizable=yes, ,left=0,' +\n                    ' top=0, width=400, height=350'\n                );\n                return false;\n            },\n\n            /** Returns payment acceptance mark link path */\n            getPaymentAcceptanceMarkHref: function() {\n                return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkHref;\n            },\n\n            /** Returns payment acceptance mark image path */\n            getPaymentAcceptanceMarkSrc: function() {\n                return window.checkoutConfig.payment.paypalExpress.paymentAcceptanceMarkSrc;\n            },\n\n            /** Returns billing agreement data */\n            getBillingAgreementCode: function() {\n                return window.checkoutConfig.payment.paypalExpress.billingAgreementCode[this.item.method];\n            },\n\n            /** Returns payment information data */\n            getData: function() {\n                var parent = this._super(),\n                    additionalData = null;\n\n                if (this.getBillingAgreementCode()) {\n                    additionalData = {};\n                    additionalData[this.getBillingAgreementCode()] = this.billingAgreement();\n                }\n                return $.extend(true, parent, {'additional_data': additionalData});\n            },\n\n            /** Redirect to paypal */\n            continueToPayPal: function () {\n                if (additionalValidators.validate()) {\n                    //update payment method information if additional data was changed\n                    this.selectPaymentMethod();\n                    setPaymentMethodAction(this.messageContainer);\n                    return false;\n                }\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/payment/method-renderer/paypal-express.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Paypal/js/view/payment/method-renderer/paypal-express-abstract'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/payment/paypal-express'\n            }\n        });\n    }\n);\n","Magento_Paypal/js/view/review/actions/iframe.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'ko',\n        'Magento_Paypal/js/model/iframe'\n    ],\n    function (Component, ko, iframe) {\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Paypal/review/actions/iframe'\n            },\n            getCode: function() {\n                return this.index;\n            },\n            getActionUrl: function() {\n                return this.isInAction() ? window.checkoutConfig.payment.paypalIframe.actionUrl[this.getCode()] : '';\n            },\n            afterSave: function() {\n                iframe.setIsInAction(true);\n                return false;\n            },\n            isInAction: function() {\n                return iframe.getIsInAction()();\n            },\n            placeOrder: function(context) {\n                return context.placeOrder.bind(context, this.afterSave);\n            }\n        });\n    }\n);\n","Magento_Sales/gift-message.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.giftMessage', {\n        options: {\n            rowPrefix: '#order-item-row-', // Selector prefix for item's row in the table.\n            linkPrefix: '#order-item-gift-message-link-', // Selector prefix for the 'Gift Message' link.\n            duration: 100, // Toggle duration.\n            expandedClass: 'expanded', // Class added/removed to/from the 'Gift Message' link.\n            expandedContentClass: 'expanded-content', // Class added/removed to/from the 'Gift Message' content.\n            lastClass: 'last' // Class added/removed to/from the last item's row in the products table.\n        },\n\n        /**\n         * Bind a click handler on the widget's element to toggle the gift message.\n         * @private\n         */\n        _create: function() {\n            this.element.on('click', $.proxy(this._toggleGiftMessage, this));\n        },\n\n        /**\n         * Toggle the display of the item's corresponding gift message.\n         * @private\n         * @param event - {Object} - Click event.\n         */\n        _toggleGiftMessage: function(event) {\n            var element = $(event.target), // Click target. The 'Gift Message' link or 'Close' button.\n                options = this.options, // Cached widget options.\n                itemId = element.data('item-id'), // The individual item's numeric id.\n                link = $(options.linkPrefix + itemId), // The 'Gift Message' expandable link.\n                row = $(options.rowPrefix + itemId), // The item's row in the products table.\n                region = $('#' + element.attr('aria-controls')); // The gift message container region.\n            region.toggleClass(options.expandedContentClass, options.duration, function() {\n                if (region.attr('aria-expanded') === \"true\") {\n                    region.attr('aria-expanded', \"false\");\n                    if (region.hasClass(options.lastClass)) {\n                        row.addClass(options.lastClass);\n                    }\n                } else {\n                    region.attr('aria-expanded', \"true\");\n                    if (region.hasClass(options.lastClass)) {\n                        row.removeClass(options.lastClass);\n                    }\n                }\n                link.toggleClass(options.expandedClass);\n            });\n            event.preventDefault(); // Prevent event propagation and avoid going to the link's href.\n        }\n    });\n    \n    return $.mage.giftMessage;\n});\n","Magento_Sales/orders-returns.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true, jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.ordersReturns', {\n        options: {\n            zipCode: '#oar-zip', // Search by zip code.\n            emailAddress: '#oar-email', // Search by email address.\n            searchType: '#quick-search-type-id' // Search element used for choosing between the two.\n        },\n\n        _create: function() {\n            $(this.options.searchType).on('change', $.proxy(this._showIdentifyBlock, this)).trigger('change');\n        },\n\n        /**\n         * Show either the search by zip code option or the search by email address option.\n         * @private\n         * @param e - Change event. Event target value is either 'zip' or 'email'.\n         */\n        _showIdentifyBlock: function(e) {\n            var value = $(e.target).val();\n            $(this.options.zipCode).toggle(value === 'zip');\n            $(this.options.emailAddress).toggle(value === 'email');\n        }\n    });\n\n    return $.mage.ordersReturns;\n});\n","Magento_Sales/js/view/last-ordered-items.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function (Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        initialize: function () {\n            var isShowAddToCart = false;\n\n            this._super();\n            this.lastOrderedItems = customerData.get('last-ordered-items');\n\n            for (var item in this.lastOrderedItems.items) {\n                if (item['is_saleable']) {\n                    isShowAddToCart = true;\n                    break;\n                }\n            }\n\n            this.lastOrderedItems.isShowAddToCart = isShowAddToCart;\n        }\n    });\n});\n","Magento_Dhl/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'city': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_Dhl/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        './shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_Dhl/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../model/shipping-rates-validator',\n        '../model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        dhlShippingRatesValidator,\n        dhlShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('dhl', dhlShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('dhl', dhlShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_Catalog/js/price-box.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Catalog/js/price-utils',\n    'underscore',\n    'mage/template',\n    'jquery/ui'\n], function ($, utils, _, mageTemplate) {\n    'use strict';\n\n    var globalOptions = {\n        productId: null,\n        priceConfig: null,\n        prices: {},\n        priceTemplate: '<span class=\"price\"><%- data.formatted %></span>'\n    };\n\n    $.widget('mage.priceBox', {\n        options: globalOptions,\n        cache: {},\n\n        /**\n         * Widget initialisation.\n         * Every time when option changed prices also can be changed. So\n         * changed options.prices -> changed cached prices -> recalculation -> redraw price box\n         */\n        _init: function initPriceBox() {\n            var box = this.element;\n            box.trigger('updatePrice');\n            this.cache.displayPrices = utils.deepClone(this.options.prices);\n        },\n\n        /**\n         * Widget creating.\n         */\n        _create: function createPriceBox() {\n            var box = this.element;\n\n            this._setDefaultsFromPriceConfig();\n            this._setDefaultsFromDataSet();\n\n            box.on('reloadPrice', this.reloadPrice.bind(this));\n            box.on('updatePrice', this.onUpdatePrice.bind(this));\n        },\n\n        /**\n         * Call on event updatePrice. Proxy to updatePrice method.\n         * @param {Event} event\n         * @param {Object} prices\n         */\n        onUpdatePrice: function onUpdatePrice(event, prices) {\n            return this.updatePrice(prices);\n        },\n\n        /**\n         * Updates price via new (or additional values).\n         * It expects object like this:\n         * -----\n         *   \"option-hash\":\n         *      \"price-code\":\n         *         \"amount\": 999.99999,\n         *         ...\n         * -----\n         * Empty option-hash object or empty price-code object treats as zero amount.\n         * @param {Object} newPrices\n         */\n        updatePrice: function updatePrice(newPrices) {\n            var prices = this.cache.displayPrices,\n                additionalPrice = {},\n                pricesCode = [];\n\n            this.cache.additionalPriceObject = this.cache.additionalPriceObject || {};\n\n            if (newPrices) {\n                $.extend(this.cache.additionalPriceObject, newPrices);\n            }\n\n            if (!_.isEmpty(additionalPrice)) {\n                pricesCode = _.keys(additionalPrice);\n            } else if (!_.isEmpty(prices)) {\n                pricesCode = _.keys(prices);\n            }\n\n            _.each(this.cache.additionalPriceObject, function (additional) {\n                if (additional && !_.isEmpty(additional)) {\n                    pricesCode = _.keys(additional);\n                }\n                _.each(pricesCode, function (priceCode) {\n                    var priceValue = additional[priceCode] || {};\n                    priceValue.amount = +priceValue.amount || 0;\n                    priceValue.adjustments = priceValue.adjustments || {};\n\n                    additionalPrice[priceCode] = additionalPrice[priceCode] || {\n                        'amount': 0,\n                        'adjustments': {}\n                    };\n                    additionalPrice[priceCode].amount =  0 + (additionalPrice[priceCode].amount || 0)\n                        + priceValue.amount;\n                    _.each(priceValue.adjustments, function (adValue, adCode) {\n                        additionalPrice[priceCode].adjustments[adCode] = 0\n                            + (additionalPrice[priceCode].adjustments[adCode] || 0) + adValue;\n                    });\n                });\n            });\n\n            if (_.isEmpty(additionalPrice)) {\n                this.cache.displayPrices = utils.deepClone(this.options.prices);\n            } else {\n                _.each(additionalPrice, function (option, priceCode) {\n                    var origin = this.options.prices[priceCode] || {},\n                        final = prices[priceCode] || {};\n                    option.amount = option.amount || 0;\n                    origin.amount = origin.amount || 0;\n                    origin.adjustments = origin.adjustments || {};\n                    final.adjustments = final.adjustments || {};\n\n                    final.amount = 0 + origin.amount + option.amount;\n                    _.each(option.adjustments, function (pa, paCode) {\n                        final.adjustments[paCode] = 0 + (origin.adjustments[paCode] || 0) + pa;\n                    });\n                }, this);\n            }\n\n            this.element.trigger('reloadPrice');\n        },\n\n        /**\n         * Render price unit block.\n         */\n        reloadPrice: function reDrawPrices() {\n            var priceFormat = (this.options.priceConfig && this.options.priceConfig.priceFormat) || {},\n                priceTemplate = mageTemplate(this.options.priceTemplate);\n\n            _.each(this.cache.displayPrices, function (price, priceCode) {\n                price.final = _.reduce(price.adjustments, function(memo, amount) {\n                    return memo + amount;\n                }, price.amount);\n\n                price.formatted = utils.formatPrice(price.final, priceFormat);\n\n                $('[data-price-type=\"' + priceCode + '\"]', this.element).html(priceTemplate({data: price}));\n            }, this);\n        },\n\n        /**\n         * Overwrites initial (default) prices object.\n         * @param {Object} prices\n         */\n        setDefault: function setDefaultPrices(prices) {\n            this.cache.displayPrices = utils.deepClone(prices);\n            this.options.prices = utils.deepClone(prices);\n        },\n\n        /**\n         * Custom behavior on getting options:\n         * now widget able to deep merge of accepted configuration.\n         * @param  {Object} options\n         * @return {mage.priceBox}\n         */\n        _setOptions: function setOptions(options) {\n            $.extend(true, this.options, options);\n\n            if ('disabled' in options) {\n                this._setOption('disabled', options.disabled);\n            }\n\n            return this;\n        },\n\n        /**\n         * setDefaultsFromDataSet\n         */\n        _setDefaultsFromDataSet: function _setDefaultsFromDataSet() {\n            var box = this.element,\n                priceHolders = $('[data-price-type]', box),\n                prices = this.options.prices;\n            this.options.productId = box.data('productId');\n\n            if (_.isEmpty(prices)) {\n                priceHolders.each(function (index, element) {\n                    var type = $(element).data('priceType'),\n                        amount = parseFloat($(element).data('priceAmount'));\n\n                    if (type && amount) {\n                        prices[type] = {\n                            amount: amount\n                        };\n                    }\n                });\n            }\n        },\n\n        /**\n         * setDefaultsFromPriceConfig\n         */\n        _setDefaultsFromPriceConfig: function _setDefaultsFromPriceConfig() {\n            var config = this.options.priceConfig;\n\n            if (config) {\n                if (+config.productId !== +this.options.productId) {\n                    return;\n                }\n                this.options.prices = config.prices;\n            }\n        }\n    });\n\n    return $.mage.priceBox;\n});\n","Magento_Catalog/js/price-utils.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore'\n], function ($, _) {\n    'use strict';\n\n    var globalPriceFormat = {\n        requiredPrecision: 2,\n        integerRequired: 1,\n        decimalSymbol: ',',\n        groupSymbol: ',',\n        groupLength: ','\n    };\n\n    return {\n        formatPrice: formatPrice,\n        deepClone: objectDeepClone,\n        strPad: stringPad,\n        findOptionId: findOptionId\n    };\n\n    /**\n     * Formatter for price amount\n     * @param  {Number}  amount\n     * @param  {Object}  format\n     * @param  {Boolean} isShowSign\n     * @return {String}              Formatted value\n     */\n    function formatPrice(amount, format, isShowSign) {\n        format = _.extend(globalPriceFormat, format);\n\n        // copied from price-option.js | Could be refactored with varien/js.js\n\n        var precision = isNaN(format.requiredPrecision = Math.abs(format.requiredPrecision)) ? 2 : format.requiredPrecision,\n            integerRequired = isNaN(format.integerRequired = Math.abs(format.integerRequired)) ? 1 : format.integerRequired,\n            decimalSymbol = format.decimalSymbol === undefined ? ',' : format.decimalSymbol,\n            groupSymbol = format.groupSymbol === undefined ? '.' : format.groupSymbol,\n            groupLength = format.groupLength === undefined ? 3 : format.groupLength,\n            pattern = format.pattern || '%s',\n            s = '',\n            i, pad,\n            j, re, r;\n\n        if (isShowSign === undefined || isShowSign === true) {\n            s = amount < 0 ? '-' : (isShowSign ? '+' : '');\n        } else if (isShowSign === false) {\n            s = '';\n        }\n        pattern = pattern.indexOf('{sign}') < 0 ? s + pattern : pattern.replace('{sign}', s);\n\n        i = parseInt(amount = Math.abs(+amount || 0).toFixed(precision), 10) + '';\n        pad = (i.length < integerRequired) ? (integerRequired - i.length) : 0;\n\n        i = stringPad('0', pad) + i;\n\n        j = i.length > groupLength ? i.length % groupLength : 0;\n        re = new RegExp('(\\\\d{' + groupLength + '})(?=\\\\d)', 'g');\n\n        // replace(/-/, 0) is only for fixing Safari bug which appears\n        // when Math.abs(0).toFixed() executed on '0' number.\n        // Result is '0.-0' :(\n        r = (j ? i.substr(0, j) + groupSymbol : '') +\n            i.substr(j).replace(re, '$1' + groupSymbol) +\n            (precision ? decimalSymbol + Math.abs(amount - i).toFixed(precision).replace(/-/, 0).slice(2) : '');\n\n        return pattern.replace('%s', r).replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n\n    /**\n     * Repeats {string} {times} times\n     * @param  {String} string\n     * @param  {Number} times\n     * @return {String}\n     */\n    function stringPad(string, times) {\n        return (new Array(times + 1)).join(string);\n    }\n\n    /**\n     * Deep clone of Object. Doesn't support functions\n     * @param {Object} obj\n     * @return {Object}\n     */\n    function objectDeepClone(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n\n    /**\n     * Helper to find ID in name attribute\n     * @param   {jQuery} element\n     * @returns {undefined|String}\n     */\n    function findOptionId(element) {\n        if (!element) {\n            return;\n        }\n        var re, id,\n            name = $(element).attr('name');\n\n        if (name.indexOf('[') !== -1) {\n            re = /\\[([^\\]]+)?\\]/;\n        } else {\n            re = /_([^\\]]+)?_/; // just to support file-type-option\n        }\n        id = re.exec(name) && re.exec(name)[1];\n\n        if (id) {\n            return id;\n        }\n    }\n});\n","Magento_Catalog/js/price-option-file.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'jquery/ui'\n], function ($) {\n    'use strict';\n\n    $.widget('mage.priceOptionFile', {\n        options: {\n            fileName: '',\n            fileNamed: '',\n            fieldNameAction: '',\n            changeFileSelector: '',\n            deleteFileSelector: ''\n        },\n\n        /**\n         * Creates instance of widget\n         * @private\n         */\n        _create: function () {\n            this.fileDeleteFlag = this.fileChangeFlag = false;\n            this.inputField = this.element.find('input[name=' + this.options.fileName + ']')[0];\n            this.inputFieldAction = this.element.find('input[name=' + this.options.fieldNameAction + ']')[0];\n            this.fileNameSpan = this.element.parent('dd').find('.' + this.options.fileNamed);\n\n            $(this.options.changeFileSelector).on('click', $.proxy(function () {\n                this._toggleFileChange();\n            }, this));\n            $(this.options.deleteFileSelector).on('click', $.proxy(function () {\n                this._toggleFileDelete();\n            }, this));\n        },\n\n        /**\n         * Toggles whether the current file is being changed or not. If the file is being deleted\n         * then the option to change the file is disabled.\n         * @private\n         */\n        _toggleFileChange: function () {\n            this.element.toggle();\n            this.fileChangeFlag = !this.fileChangeFlag;\n\n            if (!this.fileDeleteFlag) {\n                $(this.inputFieldAction).attr('value', this.fileChangeFlag ? 'save_new' : 'save_old');\n                this.inputField.disabled = !this.fileChangeFlag;\n            }\n        },\n\n        /**\n         * Toggles whether the file is to be deleted. When the file is being deleted, the name of\n         * the file is decorated with strike-through text and the option to change the file is\n         * disabled.\n         * @private\n         */\n        _toggleFileDelete: function () {\n            this.fileDeleteFlag = $(this.options.deleteFileSelector + ':checked').val();\n            $(this.inputFieldAction).attr('value',\n                this.fileDeleteFlag ? '' : this.fileChangeFlag ? 'save_new' : 'save_old');\n            this.inputField.disabled = this.fileDeleteFlag || !this.fileChangeFlag;\n            this.fileNameSpan.css('text-decoration', this.fileDeleteFlag ? 'line-through' : 'none');\n        }\n    });\n\n    return $.mage.priceOptionFile;\n});\n","Magento_Catalog/js/price-option-date.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'priceUtils',\n    'priceOptions',\n    'jquery/ui'\n], function ($, utils) {\n    'use strict';\n\n    var globalOptions = {\n        fromSelector: 'form',\n        dropdownsSelector: '[data-role=calendar-dropdown]'\n    };\n\n    $.widget('mage.priceOptionDate', {\n        options: globalOptions,\n\n        /**\n         * Function-initializer of priceOptionDate widget\n         * @private\n         */\n        _create: function initOptionDate() {\n            var field = this.element,\n                form = field.closest(this.options.fromSelector),\n                dropdowns = $(this.options.dropdownsSelector, field),\n                optionHandler = {},\n                dateOptionId;\n\n            if (dropdowns.length) {\n                dateOptionId = this.options.dropdownsSelector + dropdowns.attr('name');\n\n                optionHandler.optionHandlers = {};\n                optionHandler.optionHandlers[dateOptionId] = onCalendarDropdownChange(dropdowns);\n\n                form.priceOptions(optionHandler);\n\n                dropdowns.data('role', dateOptionId);\n                dropdowns.on('change', onDateChange.bind(this, dropdowns));\n            }\n        }\n    });\n\n    return $.mage.priceOptionDate;\n\n    /**\n     * Custom handler for Date-with-Dropdowns option type.\n     * @param  {jQuery} siblings\n     * @return {Function} function that return object { optionHash : optionAdditionalPrice }\n     */\n    function onCalendarDropdownChange(siblings) {\n        return function (element, optionConfig, form) {\n            var changes = {},\n                optionId = utils.findOptionId(element),\n                overhead = optionConfig[optionId].prices,\n                isNeedToUpdate = true,\n                optionHash = 'price-option-calendar-' + optionId;\n\n            siblings.each(function (index, el) {\n                isNeedToUpdate = isNeedToUpdate && !!$(el).val();\n            });\n\n            overhead = isNeedToUpdate ? overhead : {};\n            changes[optionHash] = overhead;\n\n            return changes;\n        };\n    }\n\n    /**\n     * Adjusts the number of days in the day option element based on which month or year\n     * is selected (changed). Adjusts the days to 28, 29, 30, or 31 typically.\n     * @param {jQuery} dropdowns\n     */\n    function onDateChange(dropdowns) {\n        var daysNodes,\n            curMonth, curYear, expectedDays,\n            options, needed,\n            month = dropdowns.filter('[data-calendar-role=month]'),\n            year = dropdowns.filter('[data-calendar-role=year]');\n\n        if (month.length && year.length) {\n            daysNodes = dropdowns.filter('[data-calendar-role=day]').find('option');\n\n            curMonth = month.val() || '01';\n            curYear = year.val() || '2000';\n            expectedDays = getDaysInMonth(curMonth, curYear);\n\n            if (daysNodes.length - 1 > expectedDays) { // remove unnecessary option nodes\n                daysNodes.each(function (i, e) {\n                    if (e.value > expectedDays) {\n                        $(e).remove();\n                    }\n                });\n            } else if (daysNodes.length - 1 < expectedDays) { // add missing option nodes\n                options = [];\n                needed = expectedDays - daysNodes.length + 1;\n\n                while (needed--) {\n                    options.push('<option value=\"' + (expectedDays - needed) + '\">' + (expectedDays - needed) + '</option>');\n                }\n                $(options.join('')).insertAfter(daysNodes.last());\n            }\n        }\n    }\n\n    /**\n     * Returns number of days for special month and year\n     * @param  {Number} month\n     * @param  {Number} year\n     * @return {Number}\n     */\n    function getDaysInMonth(month, year) {\n        return new Date(year, month, 0).getDate();\n    }\n});\n","Magento_Catalog/js/price-options.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'priceUtils',\n    'priceBox',\n    'jquery/ui'\n], function ($, _, mageTemplate, utils) {\n    'use strict';\n\n    var globalOptions = {\n        productId: null,\n        priceHolderSelector: '.price-box', //data-role=\"priceBox\"\n        optionsSelector: '.product-custom-option',\n        optionConfig: {},\n        optionHandlers: {},\n        optionTemplate: '<%- data.label %>' +\n        '<% if (data.finalPrice.value) { %>' +\n        ' +<%- data.finalPrice.formatted %>' +\n        '<% } %>',\n        controlContainer: 'dd'\n    };\n\n    $.widget('mage.priceOptions', {\n        options: globalOptions,\n\n        /**\n         * Widget creating method.\n         * Triggered once.\n         * @private\n         */\n        _create: function createPriceOptions() {\n            var form = this.element,\n                options = $(this.options.optionsSelector, form),\n                priceBox = $(this.options.priceHolderSelector, $(this.options.optionsSelector).element);\n\n            if (priceBox.data('magePriceBox') && priceBox.priceBox('option') && priceBox.priceBox('option').priceConfig) {\n                if (priceBox.priceBox('option').priceConfig.optionTemplate) {\n                    this._setOption('optionTemplate', priceBox.priceBox('option').priceConfig.optionTemplate);\n                }\n                this._setOption('priceFormat', priceBox.priceBox('option').priceConfig.priceFormat);\n            }\n\n            this._applyOptionNodeFix(options);\n\n            options.on('change', this._onOptionChanged.bind(this));\n        },\n\n        /**\n         * Custom option change-event handler\n         * @param {Event} event\n         * @private\n         */\n        _onOptionChanged: function onOptionChanged(event) {\n            var changes,\n                option = $(event.target),\n                handler = this.options.optionHandlers[option.data('role')];\n            option.data('optionContainer', option.closest(this.options.controlContainer));\n\n            if (handler && handler instanceof Function) {\n                changes = handler(option, this.options.optionConfig, this);\n            } else {\n                changes = defaultGetOptionValue(option, this.options.optionConfig);\n            }\n            $(this.options.priceHolderSelector).trigger('updatePrice', changes);\n        },\n\n\n        /**\n         * Helper to fix issue with option nodes:\n         *  - you can't place any html in option ->\n         *    so you can't style it via CSS\n         * @param {jQuery} options\n         * @private\n         */\n        _applyOptionNodeFix: function applyOptionNodeFix(options) {\n            var config = this.options,\n                format = config.priceFormat,\n                template = config.optionTemplate;\n            template = mageTemplate(template);\n            options.filter('select').each(function (index, element) {\n                var $element = $(element),\n                    optionId = utils.findOptionId($element),\n                    optionName = $element.prop('name'),\n                    optionType = $element.prop('type');\n                var  optionConfig = config.optionConfig && config.optionConfig[optionId];\n\n                $element.find('option').each(function (idx, option) {\n                    var $option,\n                        optionValue,\n                        toTemplate,\n                        prices;\n\n                    $option = $(option);\n                    optionValue = $option.val();\n\n                    if (!optionValue && optionValue !== 0) {\n                        return;\n                    }\n\n                    toTemplate = {\n                        data: {\n                            label: optionConfig[optionValue] && optionConfig[optionValue].name\n                        }\n                    };\n                    prices = optionConfig[optionValue] ? optionConfig[optionValue].prices : null;\n\n                    if (prices) {\n                        _.each(prices, function (price, type) {\n                            var value = +(price.amount);\n                            value += _.reduce(price.adjustments, function (sum, x) {\n                                return sum + x;\n                            }, 0);\n                            toTemplate.data[type] = {\n                                value: value,\n                                formatted: utils.formatPrice(value, format)\n                            };\n                        });\n\n                        $option.text(template(toTemplate));\n                    }\n                });\n            });\n        },\n\n        /**\n         * Custom behavior on getting options:\n         * now widget able to deep merge accepted configuration with instance options.\n         * @param  {Object}  options\n         * @return {$.Widget}\n         * @private\n         */\n        _setOptions: function setOptions(options) {\n            $.extend(true, this.options, options);\n            this._super(options);\n\n            return this;\n        }\n    });\n\n    return $.mage.priceOptions;\n\n    /**\n     * Custom option preprocessor\n     * @param  {jQuery} element\n     * @param  {Object} optionsConfig - part of config\n     * @return {Object}\n     */\n    function defaultGetOptionValue(element, optionsConfig) {\n        var changes = {},\n            optionValue = element.val(),\n            optionId = utils.findOptionId(element[0]),\n            optionName = element.prop('name'),\n            optionType = element.prop('type'),\n            optionConfig = optionsConfig[optionId],\n            optionHash = optionName;\n\n        switch (optionType) {\n            case 'text':\n\n            case 'textarea':\n                changes[optionHash] = optionValue ? optionConfig.prices : {};\n                break;\n\n            case 'radio':\n\n            case 'select-one':\n                changes[optionHash] = optionConfig[optionValue] && optionConfig[optionValue].prices || {};\n                break;\n\n            case 'select-multiple':\n                _.each(optionConfig, function (row, optionValueCode) {\n                    optionHash = optionName + '##' + optionValueCode;\n                    changes[optionHash] = _.contains(optionValue, optionValueCode) ? row.prices : {};\n                });\n                break;\n\n            case 'checkbox':\n                optionHash = optionName + '##' + optionValue;\n                changes[optionHash] = element.is(':checked') ? optionConfig[optionValue].prices : {};\n                break;\n\n            case 'file':\n                // Checking for 'disable' property equal to checking DOMNode with id*=\"change-\"\n                changes[optionHash] = optionValue || element.prop('disabled') ? optionConfig.prices : {};\n                break;\n        }\n\n        return changes;\n    }\n});\n","Magento_Catalog/product/view/validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([\n            \"jquery\",\n            \"jquery/ui\",\n            \"mage/validation/validation\"\n        ], factory);\n    } else {\n        factory(jQuery);\n    }\n}(function ($) {\n    \"use strict\";\n    \n    $.widget(\"mage.validation\", $.mage.validation, {\n        options: {\n            radioCheckboxClosest: 'ul, ol',\n            errorPlacement: function (error, element) {\n                if (element.attr('data-errors-message-box')) {\n                    var messageBox = $(element.attr('data-errors-message-box'));\n                    messageBox.html(error);\n                    return;\n                }\n                var dataValidate = element.attr('data-validate');\n                if (dataValidate && dataValidate.indexOf('validate-one-checkbox-required-by-name') > 0) {\n                    error.appendTo('#links-advice-container');\n                } else if (element.is(':radio, :checkbox')) {\n                    element.closest(this.radioCheckboxClosest).after(error);\n                } else {\n                    element.after(error);\n                }\n            },\n            highlight: function (element, errorClass) {\n                var dataValidate = $(element).attr('data-validate');\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\n                    $(element).parent().find('.datetime-picker').each(function() {\n                        $(this).removeClass(errorClass);\n                        if ($(this).val().length === 0) {\n                            $(this).addClass(errorClass);\n                        }\n                    });\n                } else if ($(element).is(':radio, :checkbox')) {\n                    $(element).closest(this.radioCheckboxClosest).addClass(errorClass);\n                } else {\n                    $(element).addClass(errorClass);\n                }\n            },\n            unhighlight: function (element, errorClass) {\n                var dataValidate = $(element).attr('data-validate');\n                if (dataValidate && dataValidate.indexOf('validate-required-datetime') > 0) {\n                    $(element).parent().find('.datetime-picker').removeClass(errorClass);\n                } else if ($(element).is(':radio, :checkbox')) {\n                    $(element).closest(this.radioCheckboxClosest).removeClass(errorClass);\n                } else {\n                    $(element).removeClass(errorClass);\n                }\n            }\n        }\n    });\n\n    return $.mage.validation;\n}));\n","Magento_Catalog/js/gallery.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true, jquery:true*/\n(function (factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define([\n            \"jquery\",\n            \"jquery/ui\"\n        ], factory);\n    } else {\n        factory(jQuery);\n    }\n}(function ($) {\n    \"use strict\";\n\n    $.widget('mage.gallery', {\n        options: {\n            minWidth: 300, // Minimum width of the gallery image.\n            widthOffset: 90, // Offset added to the width of the gallery image.\n            heightOffset: 210, // Offset added to the height of the gallery image.\n            closeWindow: \"div.buttons-set a[role='close-window']\" // Selector for closing the gallery popup window.\n        },\n\n        /**\n         * Bind click handler for closing the popup window and resize the popup based on the image size.\n         * @private\n         */\n        _create: function() {\n            $(this.options.closeWindow).on('click', function() { window.close(); });\n            this._resizeWindow();\n        },\n\n        /**\n         * Resize the gallery image popup window based on the image's dimensions.\n         * @private\n         */\n        _resizeWindow: function() {\n            var img = this.element,\n                width = img.width() < this.options.minWidth ? this.options.minWidth : img.width();\n            window.resizeTo(width + this.options.widthOffset, img.height() + this.options.heightOffset);\n        }\n    });\n    \n    return $.mage.gallery;\n}));\n","Magento_Catalog/js/zoom.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true expr:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n\n    $.widget('mage.zoom', {\n        options: {\n            sliderSpeed: 10\n        },\n\n        _create: function() {\n            this.sliderMax = $(this.options.sliderSelector).width();\n            this.image = this.element;\n            this.imageWidth = this.image.width();\n            this.imageHeight = this.image.height();\n            this.imageParent = this.image.parent();\n            this.imageParentWidth = this.imageParent.width();\n            this.imageParentHeight = this.imageParent.height();\n            this.showFullImage = false;\n\n            if (!this._isZoomable()) {\n                return;\n            }\n            this._initialResize();\n\n            // Slide slider to zoom in or out the picture\n            this.slider = $(this.options.sliderSelector).slider({\n                value: 0,\n                min: 0,\n                max: this.sliderMax,\n                slide: $.proxy(function(event, ui) {\n                    this._zoom(ui.value, this.sliderMax);\n                }, this),\n                change: $.proxy(function(event, ui) {\n                    this._zoom(ui.value, this.sliderMax);\n                }, this)\n            });\n\n            // Mousedown on zoom in icon to zoom in picture\n            $(this.options.zoomInSelector).on('mousedown', $.proxy(function() {\n                this.intervalId = setInterval($.proxy(function() {\n                    this.slider.slider('value', this.slider.slider('value') + 1);\n                }, this), this.options.sliderSpeed);\n            }, this)).on('mouseup mouseleave', $.proxy(function() {\n                clearInterval(this.intervalId);\n            }, this));\n\n            // Mousedown on zoom out icon to zoom out picture\n            $(this.options.zoomOutSelector).on('mousedown', $.proxy(function() {\n                this.intervalId = setInterval($.proxy(function() {\n                    this.slider.slider('value', this.slider.slider('value') - 1);\n                }, this), this.options.sliderSpeed);\n            }, this)).on('mouseup mouseleave', $.proxy(function() {\n                clearInterval(this.intervalId);\n            }, this));\n\n            // Double-click image to see full picture\n            this.element.on('dblclick', $.proxy(function() {\n                this.showFullImage = !this.showFullImage;\n                var ratio = this.showFullImage ? this.sliderMax : this.slider.slider('value');\n                this._zoom(ratio, this.sliderMax);\n                if (this.showFullImage) {\n                    $(this.options.sliderSelector).hide();\n                    $(this.options.zoomInSelector).hide();\n                    $(this.options.zoomOutSelector).hide();\n                    this.imageParent.css({'overflow': 'visible', 'zIndex': '1000'});\n                } else {\n                    $(this.options.sliderSelector).show();\n                    $(this.options.zoomInSelector).show();\n                    $(this.options.zoomOutSelector).show();\n                    this.imageParent.css({'overflow': 'hidden', 'zIndex': '9'});\n                }\n            }, this));\n\n            // Window resize will change offset for draggable\n            $(window).resize(this._draggableImage());\n        },\n\n        /**\n         * If image dimension is smaller than parent container, disable zoom\n         * @private\n         */\n        _isZoomable: function() {\n            if (this.imageWidth <= this.imageParentWidth && this.imageHeight <= this.imageParentHeight) {\n                $(this.options.sliderSelector).parent().hide();\n                $(this.options.zoomNoticeSelector).hide();\n                return false;\n            }\n            return true;\n        },\n\n        /**\n         * Resize image to fit parent container and set initial image dimension\n         * @private\n         */\n        _initialResize: function() {\n            if (this.imageWidth > this.imageHeight) {\n                this.ceilingZoom = this.imageWidth / this.imageParentWidth;\n                this.image.width(this.imageParentWidth);\n                this.image.css('top', ((this.imageParentHeight - this.image.height()) / 2) + 'px');\n            } else {\n                this.ceilingZoom = this.imageHeight / this.imageParentHeight;\n                this.image.height(this.imageParentHeight);\n                this.image.css('left', ((this.imageParentWidth - this.image.width()) / 2) + 'px');\n            }\n            // Remember Image original position\n            this.imageInitTop = this.image.position().top;\n            this.imageInitLeft = this.image.position().left;\n        },\n\n        /**\n         * Make Image draggable inside parent container dimension\n         * @private\n         */\n        _draggableImage: function() {\n            var topX = this.image.offset().left,\n                topY = this.image.offset().top,\n                bottomX = this.image.offset().left,\n                bottomY = this.image.offset().top;\n            // Calculate x offset if image width is greater than image container width\n            if (this.image.width() > this.imageParentWidth) {\n                topX = this.image.width() - (this.imageParent.offset().left -\n                    this.image.offset().left) - this.imageParentWidth;\n                topX = this.image.offset().left - topX;\n                bottomX = this.imageParent.offset().left - this.image.offset().left;\n                bottomX = this.image.offset().left + bottomX;\n            }\n            // Calculate y offset if image height is greater than image container height\n            if (this.image.height() > this.imageParentHeight) {\n                topY = this.image.height() - (this.imageParent.offset().top -\n                    this.image.offset().top) - this.imageParentHeight;\n                topY = this.image.offset().top - topY;\n                bottomY = this.imageParent.offset().top - this.image.offset().top;\n                bottomY = this.image.offset().top + bottomY;\n            }\n            // containment field is used because image is larger than parent container\n            this.element.draggable({\n                containment: [topX, topY, bottomX, bottomY],\n                scroll: false\n            });\n        },\n\n        /**\n         * Resize image based on slider position\n         * @param sliderPosition - current slider position (0 to slider track max length)\n         * @param sliderLength - slider track max length\n         * @private\n         */\n        _zoom: function(sliderPosition, sliderLength) {\n            var ratio = sliderPosition / sliderLength;\n            ratio = ratio > 1 ? 1 : ratio;\n            var imageOldLeft = this.image.position().left;\n            var imageOldTop = this.image.position().top;\n            var imageOldWidth = this.image.width();\n            var imageOldHeight = this.image.height();\n            var overSize = (this.imageWidth > this.imageParentWidth || this.imageHeight > this.imageParentHeight);\n            var floorZoom = 1;\n            var imageZoom = floorZoom + (ratio * (this.ceilingZoom - floorZoom));\n            // Zoomed image is larger than container, and resize image based on zoom ratio\n            if (overSize) {\n                this.imageWidth > this.imageHeight ? this.image.width(imageZoom * this.imageParentWidth) :\n                    this.image.height(imageZoom * this.imageParentHeight);\n            } else {\n                $(this.options.sliderSelector).hide();\n            }\n            // Position zoomed image properly\n            var imageNewLeft = imageOldLeft - (this.image.width() - imageOldWidth) / 2;\n            var imageNewTop = imageOldTop - (this.image.height() - imageOldHeight) / 2;\n            // Image can't be positioned more left than original left\n            if (imageNewLeft > this.imageInitLeft || this.image.width() < this.imageParentWidth) {\n                imageNewLeft = this.imageInitLeft;\n            }\n            // Image can't be positioned more right than the difference between parent width and image current width\n            if (Math.abs(imageNewLeft) > Math.abs(this.imageParentWidth - this.image.width())) {\n                imageNewLeft = this.imageParentWidth - this.image.width();\n            }\n            // Image can't be positioned more down than original top\n            if (imageNewTop > this.imageInitTop || this.image.height() < this.imageParentHeight) {\n                imageNewTop = this.imageInitTop;\n            }\n            // Image can't be positioned more top than the difference between parent height and image current height\n            if (Math.abs(imageNewTop) > Math.abs(this.imageParentHeight - this.image.height())) {\n                imageNewTop = this.imageParentHeight - this.image.height();\n            }\n            this.image.css({'left': imageNewLeft + 'px', 'top': imageNewTop + 'px'});\n            // Because image size and position changed, we need to recalculate draggable image containment\n            this._draggableImage();\n        }\n    });\n});\n","Magento_Catalog/js/related-products.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"mage/translate\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.relatedProducts', {\n        options: {\n            relatedCheckbox: '.related-checkbox', // Class name for a related product's input checkbox.\n            relatedProductsCheckFlag: false, // Related products checkboxes are initially unchecked.\n            relatedProductsField: '#related-products-field', // Hidden input field that stores related products.\n            selectAllMessage: $.mage.__('select all'),\n            unselectAllMessage: $.mage.__('unselect all'),\n            selectAllLink: \"[role='select-all']\",\n            elementsSelector: \".item.product\"\n        },\n\n        /**\n         * Bind events to the appropriate handlers.\n         * @private\n         */\n        _create: function() {\n            $(this.options.selectAllLink).on('click', $.proxy(this._selectAllRelated, this));\n            $(this.options.relatedCheckbox).on('click', $.proxy(this._addRelatedToProduct, this));\n            this._showRelatedProducts(\n                this.element.find(this.options.elementsSelector),\n                this.element.data('limit'),\n                this.element.data('shuffle')\n            );\n        },\n\n        /**\n         * This method either checks all checkboxes for a product's set of related products (select all)\n         * or unchecks them (unselect all).\n         * @private\n         * @param e - Click event on either the \"select all\" link or the \"unselect all\" link.\n         * @return {Boolean} - Prevent default event action and event propagation.\n         */\n        _selectAllRelated: function(e) {\n            var innerHTML = this.options.relatedProductsCheckFlag ?\n                this.options.selectAllMessage : this.options.unselectAllMessage;\n            $(e.target).html(innerHTML);\n            $(this.options.relatedCheckbox).attr('checked',\n                this.options.relatedProductsCheckFlag = !this.options.relatedProductsCheckFlag);\n            this._addRelatedToProduct();\n            return false;\n        },\n\n        /**\n         * This method iterates through each checkbox for all related products and collects only those products\n         * whose checkbox has been checked. The selected related products are stored in a hidden input field.\n         * @private\n         */\n        _addRelatedToProduct: function() {\n            $(this.options.relatedProductsField).val(\n                $(this.options.relatedCheckbox + ':checked').map(function() {\n                    return this.value;\n                }).get().join(',')\n            );\n        },\n\n        /**\n         * Show related products according to limit. Shuffle if needed.\n         * @param elements\n         * @param limit\n         * @param shuffle\n         * @private\n         */\n        _showRelatedProducts: function(elements, limit, shuffle) {\n            if (shuffle) {\n                this._shuffle(elements);\n            }\n            if (limit === 0) {\n                limit = elements.length;\n            }\n            for (var index = 0; index < limit; index++) {\n                $(elements[index]).show();\n            }\n        },\n\n        /**\n         * Shuffle an array\n         * @param o\n         * @returns {*}\n         */\n        _shuffle: function shuffle(o){ //v1.0\n            for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n            return o;\n        }\n    });\n\n    return $.mage.relatedProducts;\n});\n","Magento_Catalog/js/catalog-add-to-cart.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/translate',\n    'jquery/ui'\n], function($, $t) {\n    \"use strict\";\n\n    $.widget('mage.catalogAddToCart', {\n\n        options: {\n            processStart: null,\n            processStop: null,\n            bindSubmit: true,\n            minicartSelector: '[data-block=\"minicart\"]',\n            messagesSelector: '[data-placeholder=\"messages\"]',\n            productStatusSelector: '.stock.available',\n            addToCartButtonSelector: '.action.tocart',\n            addToCartButtonDisabledClass: 'disabled',\n            addToCartButtonTextWhileAdding: $t('Adding...'),\n            addToCartButtonTextAdded: $t('Added'),\n            addToCartButtonTextDefault: $t('Add to Cart')\n\n        },\n\n        _create: function() {\n            if (this.options.bindSubmit) {\n                this._bindSubmit();\n            }\n        },\n\n        _bindSubmit: function() {\n            var self = this;\n            this.element.on('submit', function(e) {\n                e.preventDefault();\n                self.submitForm($(this));\n            });\n        },\n\n        isLoaderEnabled: function() {\n            return this.options.processStart && this.options.processStop;\n        },\n\n        submitForm: function(form) {\n            var self = this;\n            if (form.has('input[type=\"file\"]').length && form.find('input[type=\"file\"]').val() !== '') {\n                self.element.off('submit');\n                form.submit();\n            } else {\n                self.ajaxSubmit(form);\n            }\n        },\n\n        ajaxSubmit: function(form) {\n            var self = this;\n            $(self.options.minicartSelector).trigger('contentLoading');\n            self.disableAddToCartButton(form);\n\n            $.ajax({\n                url: form.attr('action'),\n                data: form.serialize(),\n                type: 'post',\n                dataType: 'json',\n                beforeSend: function() {\n                    if (self.isLoaderEnabled()) {\n                        $('body').trigger(self.options.processStart);\n                    }\n                },\n                success: function(res) {\n                    if (self.isLoaderEnabled()) {\n                        $('body').trigger(self.options.processStop);\n                    }\n\n                    if (res.backUrl) {\n                        var eventData = {\n                            'form': form,\n                            'redirectParameters': []\n                        };\n\n                        // trigger global event, so other modules will be able add parameters to redirect url\n                        $('body').trigger('catalogCategoryAddToCartRedirect', eventData);\n                        if (eventData.redirectParameters.length > 0) {\n                            var parameters = res.backUrl.split('#');\n                            parameters.push(eventData.redirectParameters.join('&'));\n                            res.backUrl = parameters.join('#');\n                        }\n                        window.location = res.backUrl;\n                        return;\n                    }\n                    if (res.messages) {\n                        $(self.options.messagesSelector).html(res.messages);\n                    }\n                    if (res.minicart) {\n                        $(self.options.minicartSelector).replaceWith(res.minicart);\n                        $(self.options.minicartSelector).trigger('contentUpdated');\n                    }\n                    if (res.product && res.product.statusText) {\n                        $(self.options.productStatusSelector)\n                            .removeClass('available')\n                            .addClass('unavailable')\n                            .find('span')\n                            .html(res.product.statusText);\n                    }\n                    self.enableAddToCartButton(form);\n                }\n            });\n        },\n\n        disableAddToCartButton: function(form) {\n            var addToCartButton = $(form).find(this.options.addToCartButtonSelector);\n            addToCartButton.addClass(this.options.addToCartButtonDisabledClass);\n            addToCartButton.attr('title', this.options.addToCartButtonTextWhileAdding);\n            addToCartButton.find('span').text(this.options.addToCartButtonTextWhileAdding);\n        },\n\n        enableAddToCartButton: function(form) {\n            var self = this,\n                addToCartButton = $(form).find(this.options.addToCartButtonSelector);\n\n            addToCartButton.find('span').text(this.options.addToCartButtonTextAdded);\n            addToCartButton.attr('title', this.options.addToCartButtonTextAdded);\n\n            setTimeout(function() {\n                addToCartButton.removeClass(self.options.addToCartButtonDisabledClass);\n                addToCartButton.find('span').text(self.options.addToCartButtonTextDefault);\n                addToCartButton.attr('title', self.options.addToCartButtonTextDefault);\n            }, 1000);\n        }\n    });\n\n    return $.mage.catalogAddToCart;\n});\n","Magento_Catalog/js/list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.compareList', {\n        _create: function() {\n\n            var elem = this.element,\n                products = $('thead td', elem);\n\n            if (products.length > this.options.productsInRow) {\n                var headings = $('<table/>')\n                    .addClass('comparison headings data table')\n                    .insertBefore(elem.closest('.container'));\n                    \n                elem.addClass('scroll');\n\n                $('th', elem).each(function(){\n                    var th = $(this),\n                        thCopy = th.clone();\n\n                    th.animate({\n                        top: '+=0'\n                    }, 50, function(){\n                        var height = th.height();\n                        \n                        thCopy.css('height', height)\n                            .appendTo(headings)\n                            .wrap('<tr />');\n                    });\n                });\n            }\n\n            $(this.options.windowPrintSelector).on('click', function(e) {\n                e.preventDefault();\n                window.print();\n            });\n        }\n    });\n\n    return $.mage.compareList;\n});\n","Magento_Catalog/js/upsell-products.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.upsellProducts', {\n        options: {\n            elementsSelector: \".item.product\"\n        },\n\n        /**\n         * Bind events to the appropriate handlers.\n         * @private\n         */\n        _create: function() {\n            this._showUpsellProducts(\n                this.element.find(this.options.elementsSelector),\n                this.element.data('limit'),\n                this.element.data('shuffle')\n            );\n        },\n\n        /**\n         * Show upsell products according to limit. Shuffle if needed.\n         * @param elements\n         * @param limit\n         * @param shuffle\n         * @private\n         */\n        _showUpsellProducts: function(elements, limit, shuffle) {\n            if (shuffle) {\n                this._shuffle(elements);\n            }\n            if (limit === 0) {\n                limit = elements.length;\n            }\n            for (var index = 0; index < limit; index++) {\n                $(this.element).find(elements[index]).show();\n            }\n        },\n\n        /**\n         * Shuffle an array\n         * @param o\n         * @returns {*}\n         */\n        _shuffle: function shuffle(o){ //v1.0\n            for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n            return o;\n        }\n    });\n\n    return $.mage.upsellProducts;\n});\n","Magento_Catalog/js/compare.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global confirm:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"mage/decorate\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.compareItems', {\n        _create: function() {\n            this.element.decorate('list', true);\n            this._confirm(this.options.removeSelector, this.options.removeConfirmMessage);\n            this._confirm(this.options.clearAllSelector, this.options.clearAllConfirmMessage);\n        },\n\n        /**\n         * Set up a click event on the given selector to display a confirmation request message\n         * and ask for that confirmation.\n         * @param selector Selector for the confirmation on click event\n         * @param message Message to display asking for confirmation to perform action\n         * @private\n         */\n        _confirm: function(selector, message) {\n            $(selector).on('click', function() {\n                return confirm(message);\n            });\n        }\n    });\n\n    return $.mage.compareItems;\n});\n","Magento_Catalog/js/product/list/toolbar.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n\n], function($) {\n    /**\n     * ProductListToolbarForm Widget - this widget is setting cookie and submitting form according to toolbar controls\n     */\n    $.widget('mage.productListToolbarForm', {\n\n        options: {\n            modeControl: '[data-role=\"mode-switcher\"]',\n            directionControl: '[data-role=\"direction-switcher\"]',\n            orderControl: '[data-role=\"sorter\"]',\n            limitControl: '[data-role=\"limiter\"]',\n            mode: 'product_list_mode',\n            direction: 'product_list_dir',\n            order: 'product_list_order',\n            limit: 'product_list_limit',\n            modeDefault: 'grid',\n            directionDefault: 'asc',\n            orderDefault: 'position',\n            limitDefault: '9',\n            url: ''\n        },\n\n        _create: function () {\n            this._bind($(this.options.modeControl), this.options.mode, this.options.modeDefault);\n            this._bind($(this.options.directionControl), this.options.direction, this.options.directionDefault);\n            this._bind($(this.options.orderControl), this.options.order, this.options.orderDefault);\n            this._bind($(this.options.limitControl), this.options.limit, this.options.limitDefault);\n        },\n\n        _bind: function (element, paramName, defaultValue) {\n            if (element.is(\"select\")) {\n                element.on('change', {paramName: paramName, default: defaultValue}, $.proxy(this._processSelect, this));\n            } else {\n                element.on('click', {paramName: paramName, default: defaultValue}, $.proxy(this._processLink, this));\n            }\n        },\n\n        _processLink: function (event) {\n            event.preventDefault();\n            this.changeUrl(\n                event.data.paramName,\n                $(event.currentTarget).data('value'),\n                event.data.default\n            );\n        },\n\n        _processSelect: function (event) {\n            this.changeUrl(\n                event.data.paramName,\n                event.currentTarget.options[event.currentTarget.selectedIndex].value,\n                event.data.default\n            );\n        },\n\n        changeUrl: function (paramName, paramValue, defaultValue) {\n            var urlPaths = this.options.url.split('?'),\n                baseUrl = urlPaths[0],\n                urlParams = urlPaths[1] ? urlPaths[1].split('&') : [],\n                paramData = {},\n                parameters;\n            for (var i = 0; i < urlParams.length; i++) {\n                parameters = urlParams[i].split('=');\n                paramData[parameters[0]] = parameters[1] !== undefined\n                    ? window.decodeURIComponent(parameters[1].replace(/\\+/g, '%20'))\n                    : '';\n            }\n            paramData[paramName] = paramValue;\n            if (paramValue == defaultValue) {\n                delete paramData[paramName];\n            }\n            paramData = $.param(paramData);\n\n            location.href = baseUrl + (paramData.length ? '?' + paramData : '');\n        }\n    });\n\n    return $.mage.productListToolbarForm;\n});\n","Magento_Catalog/js/view/compare-products.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'mage/translate'\n], function (Component, customerData) {\n    'use strict';\n\n    var sidebarInitialized = false;\n\n    function initSidebar() {\n        if (sidebarInitialized) {\n            return;\n        }\n        sidebarInitialized = true;\n        require([\n            'jquery',\n            'mage/mage'\n        ], function ($) {\n            /*eslint-disable max-len*/\n            $('[data-role=compare-products-sidebar]').mage('compareItems', {\n                'removeConfirmMessage': $.mage.__('Are you sure you want to remove this item from your Compare Products list?'),\n                'removeSelector': '#compare-items a.action.delete',\n                'clearAllConfirmMessage': $.mage.__('Are you sure you want to remove all items from your Compare Products list?'),\n                'clearAllSelector': '#compare-clear-all'\n            });\n\n            /*eslint-enable max-len*/\n        });\n    }\n\n    return Component.extend({\n        initialize: function () {\n            this._super();\n            this.compareProducts = customerData.get('compare-products');\n\n            initSidebar();\n        }\n    });\n});\n","Magento_Catalog/js/view/image.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        initialize: function () {\n            this._super();\n\n            this.template = window.checkout.imageTemplate || this.template;\n        }\n    });\n});\n","Magento_Reports/js/recently-viewed.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.recentlyViewedProducts', {\n        options: {\n            localStorageKey: \"recently-viewed-products\",\n            productBlock: \"#widget_viewed_item\",\n            viewedContainer: \"ol\"\n        },\n\n        /**\n         * Bind events to the appropriate handlers.\n         * @private\n         */\n        _create: function() {\n            var productHtml = $(this.options.productBlock).html();\n            var productSku = $(this.options.productBlock).data('sku');\n            var products = JSON.parse(window.localStorage.getItem(this.options.localStorageKey));\n            if (products) {\n                var productsLength = products['sku'].length;\n                var maximum = $(this.element).data('count');\n                var showed = 0;\n                for (var index = 0; index <= productsLength; index++) {\n                    if (products['sku'][index] == productSku || showed >= maximum) {\n                        products['sku'].splice(index, 1);\n                        products['html'].splice(index, 1);\n                    } else {\n                        $(this.element).find(this.options.viewedContainer).append(products['html'][index]);\n                        $(this.element).show();\n                        showed++;\n                    }\n                }\n                $(this.element).find(this.options.productBlock).show();\n            } else {\n                products = {};\n                products['sku'] = [];\n                products['html'] = [];\n            }\n            products['sku'].unshift(productSku);\n            products['html'].unshift(productHtml);\n            window.localStorage.setItem(this.options.localStorageKey, JSON.stringify(products));\n        }\n    });\n    \n    return $.mage.recentlyViewedProducts;\n});\n","Magento_Theme/menu.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/**\n * @classDescription simple Navigation with replacing old handlers\n * @param {String} id id of ul element with navigation lists\n * @param {Object} settings object with settings\n */\ndefine([\"prototype\"], function(){\n\n\nwindow.mainNav = function() {\n\n    var main = {\n        obj_nav :   $(arguments[0]) || $(\"nav\"),\n\n        settings :  {\n            show_delay      :   0,\n            hide_delay      :   0,\n            _ie6            :   /MSIE 6.+Win/.test(navigator.userAgent),\n            _ie7            :   /MSIE 7.+Win/.test(navigator.userAgent)\n        },\n\n        init :  function(obj, level) {\n            obj.lists = obj.childElements();\n            obj.lists.each(function(el,ind){\n                main.handlNavElement(el);\n                if((main.settings._ie6 || main.settings._ie7) && level){\n                    main.ieFixZIndex(el, ind, obj.lists.size());\n                }\n            });\n            if(main.settings._ie6 && !level){\n                document.execCommand(\"BackgroundImageCache\", false, true);\n            }\n        },\n\n        handlNavElement :   function(list) {\n            if(list !== undefined){\n                list.onmouseover = function(){\n                    main.fireNavEvent(this,true);\n                };\n                list.onmouseout = function(){\n                    main.fireNavEvent(this,false);\n                };\n                if(list.down(\"ul\")){\n                    main.init(list.down(\"ul\"), true);\n                }\n            }\n        },\n\n        ieFixZIndex : function(el, i, l) {\n            if(el.tagName.toString().toLowerCase().indexOf(\"iframe\") == -1){\n                el.style.zIndex = l - i;\n            } else {\n                el.onmouseover = \"null\";\n                el.onmouseout = \"null\";\n            }\n        },\n\n        fireNavEvent :  function(elm,ev) {\n            if(ev){\n                elm.addClassName(\"over\");\n                elm.down(\"a\").addClassName(\"over\");\n                if (elm.childElements()[1]) {\n                    main.show(elm.childElements()[1]);\n                }\n            } else {\n                elm.removeClassName(\"over\");\n                elm.down(\"a\").removeClassName(\"over\");\n                if (elm.childElements()[1]) {\n                    main.hide(elm.childElements()[1]);\n                }\n            }\n        },\n\n        show : function (sub_elm) {\n            if (sub_elm.hide_time_id) {\n                clearTimeout(sub_elm.hide_time_id);\n            }\n            sub_elm.show_time_id = setTimeout(function() {\n                if (!sub_elm.hasClassName(\"shown-sub\")) {\n                    sub_elm.addClassName(\"shown-sub\");\n                }\n            }, main.settings.show_delay);\n        },\n\n        hide : function (sub_elm) {\n            if (sub_elm.show_time_id) {\n                clearTimeout(sub_elm.show_time_id);\n            }\n            sub_elm.hide_time_id = setTimeout(function(){\n                if (sub_elm.hasClassName(\"shown-sub\")) {\n                    sub_elm.removeClassName(\"shown-sub\");\n                }\n            }, main.settings.hide_delay);\n        }\n\n    };\n    if (arguments[1]) {\n        main.settings = Object.extend(main.settings, arguments[1]);\n    }\n    if (main.obj_nav) {\n        main.init(main.obj_nav, false);\n    }\n};\n\ndocument.observe(\"dom:loaded\", function() {\n    //run navigation without delays and with default id=\"#nav\"\n    //mainNav();\n\n    //run navigation with delays\n    mainNav(\"nav\", {\"show_delay\":\"100\",\"hide_delay\":\"100\"});\n});\n\n});\n","Magento_Theme/js/row-builder.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\ndefine([\n    'jquery',\n    'mage/template',\n    'jquery/ui'\n], function ($, mageTemplate) {\n    'use strict';\n\n    $.widget('mage.rowBuilder', {\n\n        /**\n         * options with default values for setting up the template\n         */\n        options: {\n            //Default template options\n            rowTemplate: '#template-registrant',\n            rowContainer: '#registrant-container',\n            //Row index used by the template rows.\n            rowIndex: 0,\n            //Row count: Should not be set externally\n            rowCount: 0,\n            rowParentElem: '<li></li>',\n            rowContainerClass: 'fields',\n            addRowBtn: '#add-registrant-button',\n            btnRemoveIdPrefix: 'btn-remove',\n            btnRemoveSelector: '.btn-remove',\n            rowIdPrefix: 'row',\n            //This class is added to rows added after the first one. Adds the dotted separator\n            additionalRowClass: 'add-row',\n            /*\n             This is provided during widget instantiation. eg :\n             formDataPost : {\"formData\":formData,\"templateFields\":['field1-name','field2-name'] }\n             -\"formData\" is the multi-dimensional array of form field values : [['a','b'],['c','b']]\n             received from the server and encoded\n             -\"templateFields\" are the input fields in the template with index suffixed after the field name\n             eg field1-name{index}\n             */\n            formDataPost: null,\n            //Default selectors for add element of a template\n            addEventSelector: 'button',\n            //Default selectors for remove markup elements of a template\n            remEventSelector: 'a',\n            //This option allows adding first row delete option and a row separator\n            hideFirstRowAddSeparator: true,\n            //Max rows - This option should be set when instantiating the widget\n            maxRows: 1000,\n            maxRowsMsg: '#max-registrant-message'\n        },\n\n        /**\n         * Initialize create\n         * @private\n         */\n        _create: function () {\n            this.rowTemplate = mageTemplate(this.options.rowTemplate);\n\n            this.options.rowCount = this.options.rowIndex = 0;\n\n            //On document ready related tasks\n            $($.proxy(this.ready, this));\n\n            //Binding template-wide events handlers for adding and removing rows\n            this.element.on('click', this.options.addEventSelector + this.options.addRowBtn, $.proxy(this.handleAdd, this));\n            this.element.on('click', this.options.remEventSelector + this.options.btnRemoveSelector, $.proxy(this.handleRemove, this));\n        },\n\n        /**\n         * Initialize template\n         * @public\n         */\n        ready: function () {\n            if (this.options.formDataPost && this.options.formDataPost.formData && this.options.formDataPost.formData.length) {\n                this.processFormDataArr(this.options.formDataPost);\n            } else if (this.options.rowIndex === 0 && this.options.maxRows !== 0) {\n                //If no form data , then add default row\n                this.addRow(0);\n            }\n        },\n\n        /**\n         * Process and loop through all row data to create preselected values. This is used for any error on submit.\n         * For complex implementations the inheriting widget can override this behavior\n         * @public\n         * @param {Object} formDataArr\n         */\n        processFormDataArr: function (formDataArr) {\n            var formData = formDataArr.formData,\n                templateFields = formDataArr.templateFields,\n                formRow,\n                i, j;\n\n            for (i = this.options.rowIndex = 0; i < formData.length; this.options.rowIndex = i++) {\n                this.addRow(i);\n\n                formRow = formData[i];\n\n                for (j = 0; j < formRow.length; j++) {\n                    this.setFieldById(templateFields[j] + i, formRow[j]);\n                }\n            }\n\n        },\n\n        /**\n         * Initialize and create markup for template row. Add it to the parent container.\n         * The template processing will substitute row index at all places marked with _index_ in the template\n         * using the template\n         * @public\n         * @param {Number} index - current index/count of the created template. This will be used as the id\n         * @return {*}\n         */\n        addRow: function (index) {\n            var row = $(this.options.rowParentElem),\n                tmpl;\n\n            row.addClass(this.options.rowContainerClass).attr('id', this.options.rowIdPrefix + index);\n\n            tmpl = this.rowTemplate({\n                data: {\n                    _index_: index\n                }\n            });\n\n            $(tmpl).appendTo(row);\n\n            $(this.options.rowContainer).append(row);\n\n            row.addClass(this.options.additionalRowClass);\n\n            //Remove 'delete' link and additionalRowClass for first row\n            if (this.options.rowIndex === 0 && this.options.hideFirstRowAddSeparator) {\n                $('#' + this._esc(this.options.btnRemoveIdPrefix) + '0').remove();\n                $('#' + this._esc(this.options.rowIdPrefix) + '0').removeClass(this.options.additionalRowClass);\n            }\n\n            this.maxRowCheck(++this.options.rowCount);\n\n            return row;\n        },\n\n        /**\n         * Remove return item information row\n         * @public\n         * @param {*} rowIndex - return item information row index\n         * @return {Boolean}\n         */\n        removeRow: function (rowIndex) {\n            $('#' + this._esc(this.options.rowIdPrefix) + rowIndex).remove();\n            this.maxRowCheck(--this.options.rowCount);\n\n            return false;\n        },\n\n        /**\n         * Function to check if maximum rows are exceeded and render/hide maxMsg and Add btn\n         * @public\n         * @param {Number} rowIndex\n         */\n        maxRowCheck: function (rowIndex) {\n            var addRowBtn = $(this.options.addRowBtn),\n                maxRowMsg = $(this.options.maxRowsMsg);\n            //liIndex starts from 0\n            if (rowIndex >= this.options.maxRows) {\n                addRowBtn.hide();\n                maxRowMsg.show();\n            } else if (addRowBtn.is(':hidden')) {\n                addRowBtn.show();\n                maxRowMsg.hide();\n            }\n        },\n\n        /**\n         * Set the value on given element\n         * @public\n         * @param {String} domId\n         * @param {String} value\n         */\n        setFieldById: function (domId, value) {\n            var x = $('#' + this._esc(domId));\n\n            if (x.length) {\n\n                if (x.is(':checkbox')) {\n                    x.attr('checked', true);\n                } else if (x.is('option')) {\n                    x.attr('selected', 'selected');\n                } else {\n                    x.val(value);\n                }\n            }\n        },\n\n        /**\n         * Delegated handler for adding a row\n         * @public\n         * @return {Boolean}\n         */\n        handleAdd: function () {\n            this.addRow(++this.options.rowIndex);\n\n            return false;\n        },\n\n        /**\n         * Delegated handler for removing a selected row\n         * @public\n         * @param {Object} e - Native event object\n         * @return {Boolean}\n         */\n        handleRemove: function (e) {\n            this.removeRow($(e.currentTarget).closest(\"[id^='\" + this.options.btnRemoveIdPrefix + \"']\")\n                .attr('id').replace(this.options.btnRemoveIdPrefix, ''));\n\n            return false;\n        },\n\n        /**\n         * Utility function to add escape chars for jquery selector strings\n         * @private\n         * @param {String} str - String to be processed\n         * @return {String}\n         */\n        _esc: function (str) {\n            return str ? str.replace(/([ ;&,.+*~\\':\"!\\^$\\[\\]()=>|\\/@])/g, '\\\\$1') : str;\n        }\n    });\n\n    return $.mage.rowBuilder;\n});\n","Magento_Theme/js/truncate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.truncateOptions', {\n        options: {\n            detailsLink: 'a.details',\n            mouseEvents: 'mouseover mouseout',\n            truncatedFullValue: 'div.truncated.full.value'\n        },\n\n        /**\n         * Establish the event handler for mouse events on the appropriate elements.\n         * @private\n         */\n        _create: function() {\n            this.element.on(this.options.mouseEvents, $.proxy(this._toggleShow, this))\n                .find(this.options.detailsLink).on(this.options.mouseEvents, $.proxy(this._toggleShow, this));\n        },\n\n        /**\n         * Toggle the \"show\" class on the associated element.\n         * @private\n         * @param event {Object} - Mouse over/out event.\n         */\n        _toggleShow: function(event) {\n            $(event.currentTarget).find(this.options.truncatedFullValue).toggleClass('show');\n        }\n    });\n\n});\n","Magento_Theme/js/view/messages.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'uiComponent',\n    'underscore',\n    'Magento_Customer/js/customer-data',\n    'jquery/jquery-storageapi'\n], function ($, Component, _, customerData) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            cookieMessages: [],\n            messages: []\n        },\n\n        /** @inheritdoc */\n        initialize: function () {\n            this._super();\n\n            this.cookieMessages = $.cookieStorage.get('mage-messages');\n            this.messages = customerData.get('messages').extend({\n                disposableCustomerData: 'messages'\n            });\n\n            if (!_.isEmpty(this.messages().messages)) {\n                customerData.set('messages', {});\n            }\n\n            $.cookieStorage.set('mage-messages', '');\n        }\n    });\n});\n","Magento_Ups/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'region_id': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_Ups/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        './shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_Ups/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../model/shipping-rates-validator',\n        '../model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        upsShippingRatesValidator,\n        upsShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('ups', upsShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('ups', upsShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_Wishlist/wishlist.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true sub:true*/\n/*global alert*/\ndefine([\n    'jquery',\n    'mage/template',\n    'Magento_Ui/js/modal/alert',\n    'jquery/ui',\n    'mage/validation/validation',\n\n    'mage/dataPost'\n], function ($, mageTemplate, alert) {\n    'use strict';\n\n    $.widget('mage.wishlist', {\n        options: {\n            dataAttribute: 'item-id',\n            nameFormat: 'qty[{0}]',\n            btnRemoveSelector: '[data-role=remove]',\n            qtySelector: '[data-role=qty]',\n            addToCartSelector: '[data-role=tocart]',\n            addAllToCartSelector: '[data-role=all-tocart]',\n            commentInputType: 'textarea',\n            infoList: false\n        },\n\n        /**\n         * Bind handlers to events.\n         */\n        _create: function () {\n            var _this = this;\n            if (!this.options.infoList) {\n                this.element\n                    .on('addToCart', function (event, context) {\n                        event.stopPropagation(event);\n                        $(context).data('stop-processing', true);\n                        var urlParams = _this._getItemsToCartParams(\n                            $(context).parents('[data-row=product-item]').find(_this.options.addToCartSelector)\n                        );\n                        $.mage.dataPost().postData(urlParams);\n                        return false;\n                    })\n                    .on('click', this.options.btnRemoveSelector, $.proxy(function (event) {\n                        event.preventDefault();\n                        $.mage.dataPost().postData($(event.currentTarget).data('post-remove'));\n                    }, this))\n                    .on('click', this.options.addToCartSelector, $.proxy(this._beforeAddToCart, this))\n                    .on('click', this.options.addAllToCartSelector, $.proxy(this._addAllWItemsToCart, this))\n                    .on('focusin focusout', this.options.commentInputType, $.proxy(this._focusComment, this));\n            }\n\n            // Setup validation for the form\n            this.element.mage('validation', {\n                errorPlacement: function (error, element) {\n                    error.insertAfter(element.next());\n                }\n            });\n        },\n\n        /**\n         * Process data before add to cart\n         *\n         * - update item's qty value.\n         *\n         * @param {Event} event\n         * @private\n         */\n        _beforeAddToCart: function(event) {\n            var elem = $(event.currentTarget),\n                itemId = elem.data(this.options.dataAttribute),\n                qtyName = $.validator.format(this.options.nameFormat, itemId),\n                qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val(),\n                params = elem.data('post');\n\n            if (params) {\n                params.data = $.extend({}, params.data, {'qty': qtyValue});\n                elem.data('post', params);\n            }\n        },\n\n        /**\n         * Add wish list items to cart.\n         * @private\n         * @param {jQuery object} elem - clicked 'add to cart' button\n         */\n        _getItemsToCartParams: function (elem) {\n            if (elem.data(this.options.dataAttribute)) {\n                var itemId = elem.data(this.options.dataAttribute),\n                    url = this.options.addToCartUrl,\n                    qtyName = $.validator.format(this.options.nameFormat, itemId),\n                    qtyValue = elem.parents().find('[name=\"' + qtyName + '\"]').val();\n                url.data.item = itemId;\n                url.data.qty = qtyValue;\n                return url;\n            }\n        },\n\n        /**\n         * Add all wish list items to cart\n         * @private\n         */\n        _addAllWItemsToCart: function () {\n            var urlParams = this.options.addAllToCartUrl,\n                separator = (urlParams.action.indexOf('?') >= 0) ? '&' : '?';\n\n            this.element.find(this.options.qtySelector).each(function (index, element) {\n                urlParams.action += separator + $(element).prop('name') + '=' + encodeURIComponent($(element).val());\n                separator = '&';\n            });\n            $.mage.dataPost().postData(urlParams);\n        },\n\n        /**\n         * Toggle comment string.\n         * @private\n         * @param {Event} e\n         */\n        _focusComment: function (e) {\n            var commentInput = e.currentTarget;\n\n            if (commentInput.value === '' || commentInput.value === this.options.commentString) {\n                commentInput.value = commentInput.value === this.options.commentString ?\n                    '' : this.options.commentString;\n            }\n        }\n    });\n\n    // Extension for mage.wishlist - Select All checkbox\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        options: {\n            selectAllCheckbox: '#select-all',\n            parentContainer: '#wishlist-table'\n        },\n\n        _create: function () {\n            this._super();\n            var selectAllCheckboxParent = $(this.options.selectAllCheckbox).parents(this.options.parentContainer),\n                checkboxCount = selectAllCheckboxParent.find('input:checkbox:not(' + this.options.selectAllCheckbox + ')').length;\n            // If Select all checkbox is checked, check all item checkboxes, if unchecked, uncheck all item checkboxes\n            $(this.options.selectAllCheckbox).on('click', function () {\n                selectAllCheckboxParent.find('input:checkbox').attr('checked', $(this).is(':checked'));\n            });\n            // If all item checkboxes are checked, check select all checkbox,\n            // if not all item checkboxes are checked, uncheck select all checkbox\n            selectAllCheckboxParent.on('click', 'input:checkbox:not(' + this.options.selectAllCheckbox + ')', $.proxy(function () {\n                var checkedCount = selectAllCheckboxParent.find('input:checkbox:checked:not(' + this.options.selectAllCheckbox + ')').length;\n                $(this.options.selectAllCheckbox).attr('checked', checkboxCount === checkedCount);\n            }, this));\n        }\n    });\n    // Extension for mage.wishlist info add to cart\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        _create: function () {\n            this._super();\n\n            if (this.options.infoList) {\n                this.element.on('addToCart', $.proxy(function (event, context) {\n                    this.element.find('input:checkbox').attr('checked', false);\n                    $(context).closest('tr').find('input:checkbox').attr('checked', true);\n                    this.element.submit();\n                }, this));\n                this._checkBoxValidate();\n            }\n        },\n\n        /**\n         * validate checkbox selection.\n         * @private\n         */\n        _checkBoxValidate: function () {\n            this.element.validation({\n                submitHandler: $.proxy(function (form) {\n                    if ($(form).find('input:checkbox:checked').length) {\n                        form.submit();\n                    } else {\n                        alert({\n                            content: this.options.checkBoxValidationMessage\n                        });\n                    }\n                }, this)\n            });\n        }\n    });\n\n    // Extension for mage.wishlist - Add Wishlist item to Gift Registry\n    $.widget('mage.wishlist', $.mage.wishlist, {\n        options: {\n            formTmplSelector: '#form-tmpl',\n            formTmplId: '#wishlist-hidden-form'\n        },\n\n        _create: function () {\n            this._super();\n            var _this = this;\n            this.element.on('click', '[data-wishlist-to-giftregistry]', function () {\n                var json = $(this).data('wishlist-to-giftregistry'),\n                    tmplJson = {\n                        item: json.itemId,\n                        entity: json.entity,\n                        url: json.url\n                    },\n                    html = mageTemplate(_this.options.formTmplSelector, {\n                        data: tmplJson\n                    });\n\n                $(html).appendTo('body');\n                $(_this.options.formTmplId).submit();\n            });\n        }\n    });\n\n    return $.mage.wishlist;\n});\n","Magento_Wishlist/js/search.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.wishlistSearch', {\n\n        /**\n         * Bind handlers to events\n         */\n        _create: function() {\n            this.element.on('change', $.proxy(this._toggleForm, this));\n        },\n\n        /**\n         * Toggle Form\n         * @private\n         */\n        _toggleForm: function() {\n            switch (this.element.val()) {\n                case 'name':\n                    $(this.options.emailFormSelector).hide();\n                    $(this.options.nameFormSelector).show();\n                    break;\n                case 'email':\n                    $(this.options.nameFormSelector).hide();\n                    $(this.options.emailFormSelector).show();\n                    break;\n                default:\n                    $(this.options.emailFormSelector).add(this.options.nameFormSelector).hide();\n            }\n        }\n    });\n\n    return $.mage.wishlistSearch;\n});\n","Magento_Wishlist/js/add-to-wishlist.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n\n    $.widget('mage.addToWishlist', {\n        options: {\n            bundleInfo: 'div.control [name^=bundle_option]',\n            configurableInfo: '.super-attribute-select',\n            groupedInfo: '#super-product-table input',\n            downloadableInfo: '#downloadable-links-list input',\n            customOptionsInfo: '.product-custom-option',\n            qtyInfo: '#qty'\n        },\n        _create: function () {\n            this._bind();\n        },\n        _bind: function() {\n            var options = this.options,\n                dataUpdateFunc = '_updateWishlistData',\n                changeCustomOption = 'change ' + options.customOptionsInfo,\n                changeQty = 'change ' + options.qtyInfo,\n                events = {};\n\n            if ('productType' in options) {\n                if (typeof options.productType === 'string') {\n                    options.productType = [options.productType];\n                }\n            } else {\n                options.productType = [];\n            }\n\n            events[changeCustomOption] = dataUpdateFunc;\n            events[changeQty] = dataUpdateFunc;\n\n            for (var key in options.productType) {\n                if (options.productType.hasOwnProperty(key) && options.productType[key] + 'Info' in options) {\n                    events['change ' + options[options.productType[key] + 'Info']] = dataUpdateFunc;\n                }\n            }\n            this._on(events);\n        },\n        _updateWishlistData: function(event) {\n            var dataToAdd = {},\n                isFileUploaded = false;\n            if (event.handleObj.selector == this.options.qtyInfo) {\n                this._updateAddToWishlistButton({});\n                event.stopPropagation();\n                return;\n            }\n            var self = this;\n            $(event.handleObj.selector).each(function(index, element){\n                if ($(element).is('input[type=text]')\n                    || $(element).is('input[type=email]')\n                    || $(element).is('input[type=number]')\n                    || $(element).is('input[type=hidden]')\n                    || $(element).is('input[type=checkbox]:checked')\n                    || $(element).is('input[type=radio]:checked')\n                    || $(element).is('textarea')\n                    || $('#' + element.id + ' option:selected').length\n                ) {\n                    dataToAdd = $.extend({}, dataToAdd, self._getElementData(element));\n                    return;\n                }\n                if ($(element).is('input[type=file]') && $(element).val()) {\n                    isFileUploaded = true;\n                }\n            });\n            if (isFileUploaded) {\n                this.bindFormSubmit();\n            }\n            this._updateAddToWishlistButton(dataToAdd);\n            event.stopPropagation();\n        },\n        _updateAddToWishlistButton: function(dataToAdd) {\n            var self = this;\n            $('[data-action=\"add-to-wishlist\"]').each(function(index, element) {\n                var params = $(element).data('post');\n                if (!params)\n                    params = {'data': {}};\n\n                if (!$.isEmptyObject(dataToAdd)) {\n                    self._removeExcessiveData(params, dataToAdd);\n                }\n\n                params.data = $.extend({}, params.data, dataToAdd, {'qty': $(self.options.qtyInfo).val()});\n                $(element).data('post', params);\n            });\n        },\n        _arrayDiffByKeys: function(array1, array2) {\n            var result = {};\n            $.each(array1, function(key, value) {\n                if (key.indexOf('option') === -1) {\n                    return;\n                }\n                if (!array2[key])\n                    result[key] = value;\n            });\n            return result;\n        },\n        _getElementData: function(element) {\n            element = $(element);\n            var data = {},\n                elementName = element.data('selector') ? element.data('selector') : element.attr('name'),\n                elementValue = element.val();\n            if (element.is('select[multiple]') && elementValue !== null) {\n                if (elementName.substr(elementName.length - 2) == '[]') {\n                    elementName = elementName.substring(0, elementName.length - 2);\n                }\n                $.each(elementValue, function (key, option) {\n                    data[elementName + '[' + option + ']'] = option;\n                });\n            } else {\n                if (elementValue) {\n                    if (elementName.substr(elementName.length - 2) == '[]') {\n                        elementName = elementName.substring(0, elementName.length - 2);\n                        if (elementValue) {\n                            data[elementName + '[' + elementValue + ']'] = elementValue;\n                        }\n                    } else {\n                        data[elementName] = elementValue;\n                    }\n                }\n            }\n            return data;\n        },\n        _removeExcessiveData: function(params, dataToAdd) {\n            var dataToRemove = this._arrayDiffByKeys(params.data, dataToAdd);\n            $.each(dataToRemove, function(key, value) {\n                delete params.data[key];\n            });\n        },\n        bindFormSubmit: function() {\n            var self = this;\n            $('[data-action=\"add-to-wishlist\"]').on('click', function(event) {\n                event.stopPropagation();\n                event.preventDefault();\n\n                var element = $('input[type=file]' + self.options.customOptionsInfo),\n                    params = $(event.currentTarget).data('post'),\n                    form = $(element).closest('form'),\n                    action = params.action;\n                if (params.data.id) {\n                    $('<input>', {\n                        type: 'hidden',\n                        name: 'id',\n                        value: params.data.id\n                    }).appendTo(form);\n                }\n                if (params.data.uenc) {\n                    action += 'uenc/' + params.data.uenc;\n                }\n\n                $(form).attr('action', action).submit();\n            });\n        }\n    });\n\n    return $.mage.addToWishlist;\n});","Magento_Wishlist/js/view/wishlist.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function (Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        initialize: function () {\n            this._super();\n\n            this.wishlist = customerData.get('wishlist');\n        }\n    });\n});\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/flatrate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'country_id': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/freeshipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'country_id': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_OfflineShipping/js/model/shipping-rates-validation-rules/tablerate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'postcode': {\n                        'required': true\n                    },\n                    'country_id': {\n                        'required': true\n                    },\n                    'region_id': {\n                        'required': true\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_OfflineShipping/js/model/shipping-rates-validator/flatrate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        '../shipping-rates-validation-rules/flatrate',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_OfflineShipping/js/model/shipping-rates-validator/freeshipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        '../shipping-rates-validation-rules/freeshipping',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_OfflineShipping/js/model/shipping-rates-validator/tablerate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        '../shipping-rates-validation-rules/tablerate',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var self = this;\n                this.validationErrors = [];\n                $.each(validationRules.getRules(), function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n                return !Boolean(this.validationErrors.length);\n            }\n        };\n    }\n);\n","Magento_OfflineShipping/js/view/shipping-rates-validation/flatrate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../../model/shipping-rates-validator/flatrate',\n        '../../model/shipping-rates-validation-rules/flatrate'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        flatrateShippingRatesValidator,\n        flatrateShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('flatrate', flatrateShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('flatrate', flatrateShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_OfflineShipping/js/view/shipping-rates-validation/freeshipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../../model/shipping-rates-validator/freeshipping',\n        '../../model/shipping-rates-validation-rules/freeshipping'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        freeshippingShippingRatesValidator,\n        freeshippingShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('freeshipping', freeshippingShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('freeshipping', freeshippingShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_OfflineShipping/js/view/shipping-rates-validation/tablerate.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../../model/shipping-rates-validator/tablerate',\n        '../../model/shipping-rates-validation-rules/tablerate'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        tablerateShippingRatesValidator,\n        tablerateShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('tablerate', tablerateShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('tablerate', tablerateShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_Usps/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function () {\n        \"use strict\";\n        return {\n            getRules: function() {\n                return {\n                    'country_id': {\n                        'required': true\n                    },\n                    'postcode': {\n                        'required': false\n                    }\n                };\n            }\n        };\n    }\n);\n","Magento_Usps/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'mageUtils',\n        './shipping-rates-validation-rules',\n        'mage/translate'\n    ],\n    function ($, utils, validationRules, $t) {\n        \"use strict\";\n        var checkoutConfig = window.checkoutConfig;\n\n        return {\n            validationErrors: [],\n            validate: function(address) {\n                var rules = validationRules.getRules(),\n                    self = this;\n\n                $.each(rules, function(field, rule) {\n                    if (rule.required && utils.isEmpty(address[field])) {\n                        var message = $t('Field ') + field + $t(' is required.');\n                        self.validationErrors.push(message);\n                    }\n                });\n\n                if (!Boolean(this.validationErrors.length)) {\n                    if (address.country_id == checkoutConfig.originCountryCode) {\n                        return !utils.isEmpty(address.postcode);\n                    }\n                    return true;\n                }\n                return false;\n            }\n        };\n    }\n);\n","Magento_Usps/js/view/shipping-rates-validation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-rates-validation-rules',\n        '../model/shipping-rates-validator',\n        '../model/shipping-rates-validation-rules'\n    ],\n    function (\n        Component,\n        defaultShippingRatesValidator,\n        defaultShippingRatesValidationRules,\n        uspsShippingRatesValidator,\n        uspsShippingRatesValidationRules\n    ) {\n        \"use strict\";\n        defaultShippingRatesValidator.registerValidator('usps', uspsShippingRatesValidator);\n        defaultShippingRatesValidationRules.registerRules('usps', uspsShippingRatesValidationRules);\n        return Component;\n    }\n);\n","Magento_SalesRule/js/model/payment/discount-messages.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Ui/js/model/messages'\n    ],\n    function (Messages) {\n        'use strict';\n\n        return new Messages();\n    }\n);\n","Magento_SalesRule/js/action/cancel-coupon.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * Customer store credit(balance) application\n */\n/*global define,alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/resource-url-manager',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_SalesRule/js/model/payment/discount-messages',\n        'mage/storage',\n        'Magento_Checkout/js/action/get-payment-information',\n        'Magento_Checkout/js/model/totals',\n        'mage/translate'\n    ],\n    function ($, quote, urlManager, errorProcessor, messageContainer, storage, getPaymentInformationAction, totals, $t) {\n        'use strict';\n\n        return function (isApplied, isLoading) {\n            var quoteId = quote.getQuoteId(),\n                url = urlManager.getCancelCouponUrl(quoteId),\n                message = $t('Your coupon was successfully removed');\n            messageContainer.clear();\n\n            return storage.delete(\n                url,\n                false\n            ).done(\n                function () {\n                    var deferred = $.Deferred();\n                    totals.isLoading(true);\n                    getPaymentInformationAction(deferred);\n                    $.when(deferred).done(function () {\n                        isApplied(false);\n                        totals.isLoading(false);\n                    });\n                    messageContainer.addSuccessMessage({\n                        'message': message\n                    });\n                }\n            ).fail(\n                function (response) {\n                    totals.isLoading(false);\n                    errorProcessor.process(response, messageContainer);\n                }\n            ).always(\n                function () {\n                    isLoading(false);\n                }\n            );\n        };\n    }\n);\n","Magento_SalesRule/js/action/set-coupon-code.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n * Customer store credit(balance) application\n */\n/*global define,alert*/\ndefine(\n    [\n        'ko',\n        'jquery',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/resource-url-manager',\n        'Magento_Checkout/js/model/payment-service',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_SalesRule/js/model/payment/discount-messages',\n        'mage/storage',\n        'Magento_Checkout/js/action/get-totals',\n        'mage/translate',\n        'Magento_Checkout/js/model/payment/method-list'\n    ],\n    function (\n        ko,\n        $,\n        quote,\n        urlManager,\n        paymentService,\n        errorProcessor,\n        messageContainer,\n        storage,\n        getTotalsAction,\n        $t,\n        paymentMethodList\n    ) {\n        'use strict';\n        return function (couponCode, isApplied, isLoading) {\n            var quoteId = quote.getQuoteId();\n            var url = urlManager.getApplyCouponUrl(couponCode, quoteId);\n            var message = $t('Your coupon was successfully applied');\n            return storage.put(\n                url,\n                {},\n                false\n            ).done(\n                function (response) {\n                    if (response) {\n                        var deferred = $.Deferred();\n                        isLoading(false);\n                        isApplied(true);\n                        getTotalsAction([], deferred);\n                        $.when(deferred).done(function() {\n                            paymentService.setPaymentMethods(\n                                paymentMethodList()\n                            );\n                        });\n                        messageContainer.addSuccessMessage({'message': message});\n                    }\n                }\n            ).fail(\n                function (response) {\n                    isLoading(false);\n                    errorProcessor.process(response, messageContainer);\n                }\n            );\n        };\n    }\n);\n","Magento_SalesRule/js/view/summary/discount.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_SalesRule/summary/discount'\n            },\n            totals: quote.getTotals(),\n            isDisplayed: function() {\n                return this.isFullMode() && this.getPureValue() != 0;\n            },\n            getCouponCode: function() {\n                if (!this.totals()) {\n                    return null;\n                }\n                return this.totals()['coupon_code'];\n            },\n            getPureValue: function() {\n                var price = 0;\n                if (this.totals() && this.totals().discount_amount) {\n                    price = parseFloat(this.totals().discount_amount);\n                }\n                return price;\n            },\n            getValue: function() {\n                return this.getFormattedPrice(this.getPureValue());\n            }\n        });\n    }\n);\n","Magento_SalesRule/js/view/cart/totals/discount.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_SalesRule/js/view/summary/discount'\n    ],\n    function (Component) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_SalesRule/cart/totals/discount'\n            },\n            /**\n             * @override\n             *\n             * @returns {boolean}\n             */\n            isDisplayed: function () {\n                return this.getPureValue() != 0;\n            }\n        });\n    }\n);\n","Magento_SalesRule/js/view/payment/discount.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'ko',\n        'uiComponent',\n        'Magento_Checkout/js/model/quote',\n        'Magento_SalesRule/js/action/set-coupon-code',\n        'Magento_SalesRule/js/action/cancel-coupon'\n    ],\n    function ($, ko, Component, quote, setCouponCodeAction, cancelCouponAction) {\n        'use strict';\n        var totals = quote.getTotals();\n        var couponCode = ko.observable(null);\n        if (totals()) {\n            couponCode(totals()['coupon_code']);\n        }\n        var isApplied = ko.observable(couponCode() != null);\n        var isLoading = ko.observable(false);\n        return Component.extend({\n            defaults: {\n                template: 'Magento_SalesRule/payment/discount'\n            },\n            couponCode: couponCode,\n            /**\n             * Applied flag\n             */\n            isApplied: isApplied,\n            isLoading: isLoading,\n            /**\n             * Coupon code application procedure\n             */\n            apply: function() {\n                if (this.validate()) {\n                    isLoading(true);\n                    setCouponCodeAction(couponCode(), isApplied, isLoading);\n                }\n            },\n            /**\n             * Cancel using coupon\n             */\n            cancel: function() {\n                if (this.validate()) {\n                    isLoading(true);\n                    couponCode('');\n                    cancelCouponAction(isApplied, isLoading);\n                }\n            },\n            /**\n             * Coupon form validation\n             *\n             * @returns {boolean}\n             */\n            validate: function() {\n                var form = '#discount-form';\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","Magento_SalesRule/js/view/payment/discount-messages.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/view/messages',\n    '../../model/payment/discount-messages'\n], function (Component, messageContainer) {\n    'use strict';\n\n    return Component.extend({\n\n\n        initialize: function (config) {\n            return this._super(config, messageContainer);\n        }\n    });\n});\n","Magento_Captcha/captcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.captcha', {\n        options: {\n            refreshClass: 'refreshing',\n            reloadSelector: '.captcha-reload',\n            imageSelector: '.captcha-img',\n            imageLoader: ''\n        },\n\n        /**\n         * Method binds click event to reload image\n         * @private\n         */\n        _create: function() {\n            this.element.on('click', this.options.reloadSelector, $.proxy(this.refresh, this));\n        },\n\n        /**\n         * Method triggeres an AJAX request to refresh the CAPTCHA image\n         * @param e - Event\n         */\n        refresh: function(e) {\n            var imageLoader = this.options.imageLoader;\n\n            if (imageLoader) {\n                this.element.find(this.options.imageSelector).attr('src', imageLoader);\n            }\n            this.element.addClass(this.options.refreshClass);\n\n            $.ajax({\n                url: this.options.url,\n                type: 'post',\n                async: false,\n                dataType: 'json',\n                context: this,\n                data: {\n                    'formId': this.options.type\n                },\n                success: function (response) {\n                    if (response.imgSrc) {\n                        this.element.find(this.options.imageSelector).attr('src', response.imgSrc);\n                    }\n                },\n                complete: function() {\n                    this.element.removeClass(this.options.refreshClass);\n                }\n            });\n        }\n    });\n\n    return $.mage.captcha;\n});\n","Magento_Captcha/onepage.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\"jquery\"], function($){\n    \"use strict\";\n    $(document).on(\"login\",function() {\n        $(\"[data-captcha='guest_checkout'], [data-captcha='register_during_checkout']\").hide();\n        $(\"[role='guest_checkout'], [role='register_during_checkout']\").hide();\n        var type = ($(\"#login\\\\:guest\").is(':checked')) ? 'guest_checkout' : 'register_during_checkout';\n        $(\"[role='\" + type + \"'], [data-captcha='\" + type + \"']\").show();\n    }).on('billingSave', function() {\n            $(\".captcha-reload:visible\").trigger(\"click\");\n        });\n});\n","Magento_Captcha/js/model/captchaList.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(['jquery'], function($) {\n    \"use strict\";\n    var captchaList = [];\n    return {\n        add: function (captcha) {\n            captchaList.push(captcha);\n        },\n        getCaptchaByFormId: function(formId) {\n            var captcha = null;\n            $.each(captchaList, function(key, item) {\n                if (formId === item.formId) {\n                    captcha = item;\n                    return false;\n                }\n            });\n            return captcha;\n        },\n        getCaptchaList: function() {\n            return captchaList;\n        }\n    };\n});\n","Magento_Captcha/js/model/captcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        'Magento_Captcha/js/action/refresh'\n    ],\n    function($, ko, refreshAction) {\n        return function (captchaData) {\n            return {\n                formId: captchaData.formId,\n                imageSource: ko.observable(captchaData.imageSrc),\n                visibility: ko.observable(false),\n                captchaValue: ko.observable(null),\n                isRequired: captchaData.isRequired,\n                isCaseSensitive: captchaData.isCaseSensitive,\n                imageHeight: captchaData.imageHeight,\n                refreshUrl: captchaData.refreshUrl,\n                isLoading: ko.observable(false),\n\n                getFormId: function () {\n                    return this.formId;\n                },\n                setFormId: function (formId) {\n                    this.formId = formId;\n                },\n                getIsVisible: function () {\n                    return this.visibility;\n                },\n                setIsVisible: function (flag) {\n                    this.visibility(flag);\n                },\n                getIsRequired: function () {\n                    return this.isRequired;\n                },\n                setIsRequired: function (flag) {\n                    this.isRequired = flag;\n                },\n                getIsCaseSensitive: function () {\n                    return this.isCaseSensitive;\n                },\n                setIsCaseSensitive: function (flag) {\n                    this.isCaseSensitive = flag;\n                },\n                getImageHeight: function () {\n                    return this.imageHeight;\n                },\n                setImageHeight: function (height) {\n                    this.imageHeight = height;\n                },\n                getImageSource: function () {\n                    return this.imageSource;\n                },\n                setImageSource: function (imageSource) {\n                     this.imageSource(imageSource);\n                },\n                getRefreshUrl: function () {\n                    return this.refreshUrl;\n                },\n                setRefreshUrl: function (url) {\n                    this.refreshUrl = url;\n                },\n                getCaptchaValue: function () {\n                    return this.captchaValue;\n                },\n                setCaptchaValue: function (value) {\n                    this.captchaValue(value);\n                },\n                refresh: function() {\n                    var refresh,\n                        self = this;\n                    this.isLoading(true);\n\n                    refresh = refreshAction(this.getRefreshUrl(), this.getFormId(), this.getImageSource());\n                    $.when(refresh).done(function() {\n                        self.isLoading(false);\n                    });\n                }\n            };\n        }\n    }\n);\n","Magento_Captcha/js/action/refresh.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(\n    ['mage/storage'],\n    function(storage) {\n        \"use strict\";\n        return function(refreshUrl, formId, imageSource) {\n            return storage.post(\n                refreshUrl,\n                JSON.stringify({'formId': formId}),\n                false\n            ).done(\n                function (response) {\n                    if (response.imgSrc) {\n                        imageSource(response.imgSrc);\n                    }\n                }\n            );\n        };\n    }\n);\n","Magento_Captcha/js/view/checkout/loginCaptcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true jquery:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Captcha/js/view/checkout/defaultCaptcha',\n        'Magento_Captcha/js/model/captchaList',\n        'Magento_Customer/js/action/login'\n    ],\n    function (defaultCaptcha, captchaList, loginAction) {\n        'use strict';\n        return defaultCaptcha.extend({\n            initialize: function() {\n                this._super();\n                var currentCaptcha = captchaList.getCaptchaByFormId(this.formId),\n                    self = this;\n\n                if (currentCaptcha != null) {\n                    currentCaptcha.setIsVisible(true);\n                    this.setCurrentCaptcha(currentCaptcha);\n\n                    loginAction.registerLoginCallback(function(loginData) {\n                        if (loginData.captcha_form_id && loginData.captcha_form_id == self.formId) {\n                            self.refresh();\n                        }\n                    });\n                }\n            }\n        });\n    }\n);\n","Magento_Captcha/js/view/checkout/defaultCaptcha.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true jquery:true*/\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'uiComponent',\n        'Magento_Captcha/js/model/captcha',\n        'Magento_Captcha/js/model/captchaList'\n    ],\n    function ($, Component, Captcha, captchaList) {\n        'use strict';\n        var captchaConfig;\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Captcha/checkout/captcha'\n            },\n            dataScope: 'global',\n            currentCaptcha: null,\n            captchaValue: function() {\n                return this.currentCaptcha.getCaptchaValue();\n            },\n            initialize: function() {\n                this._super();\n                captchaConfig = window[this.configSource]['captcha'];\n\n                if (captchaConfig) {\n                    $.each(captchaConfig, function(formId, captchaData) {\n                        captchaData.formId = formId;\n                        captchaList.add(Captcha(captchaData));\n                    });\n                }\n            },\n            getIsLoading: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.isLoading : false;\n            },\n            getCurrentCaptcha: function() {\n                return this.currentCaptcha;\n            },\n            setCurrentCaptcha: function(captcha) {\n                this.currentCaptcha = captcha;\n            },\n            getFormId: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getFormId() : null;\n            },\n            getIsVisible: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getIsVisible() : false;\n            },\n            setIsVisible: function(flag) {\n                this.currentCaptcha.setIsVisible(flag);\n            },\n            isRequired: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getIsRequired() : false;\n            },\n            isCaseSensitive: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getIsCaseSensitive() : false;\n            },\n            imageHeight: function() {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getImageHeight() : null;\n            },\n            getImageSource: function () {\n                return this.currentCaptcha !== null ? this.currentCaptcha.getImageSource() : null;\n            },\n            refresh: function() {\n                this.currentCaptcha.refresh();\n            }\n        });\n    }\n);\n","Magento_Downloadable/downloadable.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true expr:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\",\n    \"Magento_Catalog/js/price-box\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.downloadable', {\n        options: {\n            priceHolderSelector: '.price-box'\n        },\n\n        _create: function() {\n            var self = this;\n\n            this.element.find(this.options.linkElement).on('change', $.proxy(function() {\n                this._reloadPrice();\n            }, this));\n\n            this.element.find(this.options.allElements).on('change', function() {\n                if (this.checked) {\n                    $('label[for=\"' + this.id + '\"] > span').text($(this).attr('data-checked'));\n                    self.element.find(self.options.linkElement + ':not(:checked)').each(function(){\n                        $(this).trigger('click');\n                    });\n                } else {\n                    $('[for=\"' + this.id + '\"] > span').text($(this).attr('data-notchecked'));\n                    self.element.find(self.options.linkElement + ':checked').each(function(){\n                        $(this).trigger('click');\n                    });\n                }\n            });\n        },\n\n        /**\n         * Reload product price with selected link price included\n         * @private\n         */\n        _reloadPrice: function() {\n            var finalPrice = 0;\n            var basePrice = 0;\n            this.element.find(this.options.linkElement + ':checked').each($.proxy(function(index, element) {\n                finalPrice += this.options.config.links[$(element).val()].finalPrice;\n                basePrice += this.options.config.links[$(element).val()].basePrice;\n            }, this));\n\n            $(this.options.priceHolderSelector).trigger('updatePrice', {\n                'prices': {\n                    'finalPrice': { 'amount': finalPrice },\n                    'basePrice': { 'amount': basePrice }\n                }\n            });\n        }\n    });\n    \n    return $.mage.downloadable;\n});\n","Magento_Weee/tax-toggle.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    function onToggle(config, e) {\n        var elem = $(e.currentTarget),\n            expandedClassName = config.expandedClassName || 'cart-tax-total-expanded';\n\n        elem.toggleClass(expandedClassName);\n\n        $(config.itemTaxId).toggle();\n    }\n\n    return function (data, el) {\n        $(el).on('click', onToggle.bind(null, data));\n    };\n});\n","Magento_Weee/js/view/checkout/summary/weee.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/totals',\n        'Magento_Catalog/js/price-utils'\n    ],\n    function (Component, quote, totals) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Weee/checkout/summary/weee'\n            },\n            isIncludedInSubtotal: window.checkoutConfig.isIncludedInSubtotal,\n            totals: totals.totals,\n\n            /**\n             * @returns {Number}\n             */\n            getWeeeTaxSegment: function () {\n                var weee = totals.getSegment('weee_tax') || totals.getSegment('weee');\n\n                if (weee !== null && weee.hasOwnProperty('value')) {\n                    return weee.value;\n                }\n\n                return 0;\n            },\n\n            /**\n             * Get weee value\n             * @returns {String}\n             */\n            getValue: function () {\n                return this.getFormattedPrice(this.getWeeeTaxSegment());\n            },\n\n            /**\n             * Weee display flag\n             * @returns {Boolean}\n             */\n            isDisplayed: function () {\n                return this.isFullMode() && this.getWeeeTaxSegment() > 0;\n            }\n        });\n    }\n);\n","Magento_Weee/js/view/checkout/summary/item/price/row_excl_tax.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Weee/js/view/checkout/summary/item/price/weee'\n    ],\n    function (weee) {\n        \"use strict\";\n        return weee.extend({\n            defaults: {\n                template: 'Magento_Weee/checkout/summary/item/price/row_excl_tax'\n            },\n\n            getFinalRowDisplayPriceExclTax: function(item) {\n                var rowTotalExclTax = parseFloat(item.row_total);\n                if(!window.checkoutConfig.getIncludeWeeeFlag) {\n                    return rowTotalExclTax + parseFloat(item.weee_tax_applied_amount);\n                }\n                return rowTotalExclTax;\n            },\n\n            getRowDisplayPriceExclTax: function(item) {\n                var rowTotalExclTax = parseFloat(item.row_total);\n                return rowTotalExclTax + this.getRowWeeeTaxExclTax(item);\n            },\n\n            getRowWeeeTaxExclTax: function(item) {\n                var totalWeeeTaxExclTaxApplied = 0;\n                if (item.weee_tax_applied) {\n                    var weeeTaxAppliedAmounts = JSON.parse(item.weee_tax_applied);\n                    weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\n                        totalWeeeTaxExclTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount.row_amount, 0));\n                    });\n                }\n                return totalWeeeTaxExclTaxApplied;\n            }\n\n        });\n    }\n);\n","Magento_Weee/js/view/checkout/summary/item/price/weee.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component,quote) {\n        \"use strict\";\n        return Component.extend({\n\n            isDisplayPriceWithWeeeDetails: function(item) {\n                if(!parseFloat(item.weee_tax_applied_amount) || parseFloat(item.weee_tax_applied_amount <= 0)) {\n                    return false;\n                }\n                return window.checkoutConfig.isDisplayPriceWithWeeeDetails;\n            },\n            isDisplayFinalPrice: function(item) {\n                if(!parseFloat(item.weee_tax_applied_amount)) {\n                    return false;\n                }\n                return window.checkoutConfig.isDisplayFinalPrice;\n            },\n            getWeeeTaxApplied: function(item) {\n                if (item.weee_tax_applied) {\n                    return JSON.parse(item.weee_tax_applied)\n                }\n                return [];\n\n            }\n        });\n    }\n);\n","Magento_Weee/js/view/checkout/summary/item/price/row_incl_tax.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Weee/js/view/checkout/summary/item/price/weee'\n    ],\n    function (weee) {\n        \"use strict\";\n        return weee.extend({\n            defaults: {\n                template: 'Magento_Weee/checkout/summary/item/price/row_incl_tax',\n                displayArea: 'row_incl_tax'\n            },\n            getFinalRowDisplayPriceInclTax: function(item) {\n                var rowTotalInclTax = parseFloat(item.row_total_incl_tax);\n                if(!window.checkoutConfig.getIncludeWeeeFlag) {\n\n                    return rowTotalInclTax + this.getRowWeeeTaxInclTax(item);\n                }\n                return rowTotalInclTax;\n            },\n\n            getRowDisplayPriceInclTax: function(item) {\n                var rowTotalInclTax = parseFloat(item.row_total_incl_tax);\n                return rowTotalInclTax + this.getRowWeeeTaxInclTax(item);\n            },\n\n            getRowWeeeTaxInclTax: function(item) {\n                var totalWeeeTaxIncTaxApplied = 0;\n                if (item.weee_tax_applied) {\n                    var weeeTaxAppliedAmounts = JSON.parse(item.weee_tax_applied);\n                    weeeTaxAppliedAmounts.forEach(function (weeeTaxAppliedAmount) {\n                        totalWeeeTaxIncTaxApplied += parseFloat(Math.max(weeeTaxAppliedAmount.row_amount_incl_tax, 0));\n                    });\n                }\n                return totalWeeeTaxIncTaxApplied;\n            }\n\n        });\n    }\n);\n","Magento_Weee/js/view/cart/totals/weee.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Weee/js/view/checkout/summary/weee'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n\n            /**\n             * @override\n             */\n            isFullMode: function () {\n                return true;\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/offline-payments.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/renderer-list'\n    ],\n    function (\n        Component,\n        rendererList\n    ) {\n        'use strict';\n        rendererList.push(\n            {\n                type: 'checkmo',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method'\n            },\n            {\n                type: 'banktransfer',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method'\n            },\n            {\n                type: 'cashondelivery',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method'\n            },\n            {\n                type: 'purchaseorder',\n                component: 'Magento_OfflinePayments/js/view/payment/method-renderer/purchaseorder-method'\n            }\n        );\n        /** Add view logic here if needed */\n        return Component.extend({});\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/cashondelivery-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default'\n    ],\n    function (Component) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/cashondelivery'\n            },\n\n            /** Returns payment method instructions */\n            getInstructions: function() {\n                return window.checkoutConfig.payment.instructions[this.item.method];\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/banktransfer-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/view/payment/default'\n    ],\n    function (ko, Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/banktransfer'\n            },\n            /**\n             * Get value of instruction field.\n             * @returns {String}\n             */\n            getInstructions: function () {\n                return window.checkoutConfig.payment.instructions[this.item.method];\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/purchaseorder-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default',\n        'jquery',\n        \"mage/validation\"\n    ],\n    function (Component, $) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/purchaseorder-form',\n                purchaseOrderNumber: ''\n            },\n            initObservable: function () {\n                this._super()\n                    .observe('purchaseOrderNumber');\n                return this;\n            },\n            getData: function () {\n                return {\n                    \"method\": this.item.method,\n                    'po_number': this.purchaseOrderNumber(),\n                    \"additional_data\": null\n                };\n\n            },\n            validate: function () {\n                var form = 'form[data-role=purchaseorder-form]';\n                return $(form).validation() && $(form).validation('isValid');\n            }\n        });\n    }\n);\n","Magento_OfflinePayments/js/view/payment/method-renderer/checkmo-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/payment/default'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_OfflinePayments/payment/checkmo'\n            },\n\n            /** Returns send check to info */\n            getMailingAddress: function() {\n                return window.checkoutConfig.payment.checkmo.mailingAddress;\n            },\n\n            /** Returns payable to info */\n            getPayableTo: function() {\n                return window.checkoutConfig.payment.checkmo.payableTo;\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/minicart/subtotal/totals.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function (ko, Component, customerData) {\n    'use strict';\n\n    return Component.extend({\n        displaySubtotal: ko.observable(true),\n\n        /**\n         * @override\n         */\n        initialize: function () {\n            this._super();\n            this.cart = customerData.get('cart');\n        }\n    });\n});\n","Magento_Tax/js/view/checkout/summary/tax.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/totals'\n    ],\n    function (ko, Component, quote, totals) {\n        \"use strict\";\n        var isTaxDisplayedInGrandTotal = window.checkoutConfig.includeTaxInGrandTotal;\n        var isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed;\n        var isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed;\n        return Component.extend({\n            defaults: {\n                isTaxDisplayedInGrandTotal: isTaxDisplayedInGrandTotal,\n                notCalculatedMessage: 'Not yet calculated',\n                template: 'Magento_Tax/checkout/summary/tax'\n            },\n            totals: quote.getTotals(),\n            isFullTaxSummaryDisplayed: isFullTaxSummaryDisplayed,\n            ifShowValue: function() {\n                if (this.isFullMode() && this.getPureValue() == 0) {\n                    return isZeroTaxDisplayed;\n                }\n                return true;\n            },\n            ifShowDetails: function() {\n                if (!this.isFullMode()) {\n                    return false;\n                }\n                return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\n            },\n            getPureValue: function() {\n                var amount = 0;\n                if (this.totals()) {\n                    var taxTotal = totals.getSegment('tax');\n                    if (taxTotal) {\n                        amount = taxTotal.value;\n                    }\n                }\n                return amount;\n            },\n            isCalculated: function() {\n                return this.totals() && this.isFullMode() && null != totals.getSegment('tax');\n            },\n            getValue: function() {\n                if (!this.isCalculated()) {\n                    return this.notCalculatedMessage;\n                }\n                var amount = totals.getSegment('tax').value;\n                return this.getFormattedPrice(amount);\n            },\n            formatPrice: function(amount) {\n                return this.getFormattedPrice(amount);\n            },\n            getDetails: function() {\n                var taxSegment = totals.getSegment('tax');\n                if (taxSegment && taxSegment.extension_attributes) {\n                    return taxSegment.extension_attributes.tax_grandtotal_details;\n                }\n                return [];\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/summary/grand-total.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Catalog/js/price-utils',\n        'Magento_Checkout/js/model/totals'\n    ],\n    function (Component, quote, priceUtils, totals) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                isFullTaxSummaryDisplayed: window.checkoutConfig.isFullTaxSummaryDisplayed || false,\n                template: 'Magento_Tax/checkout/summary/grand-total'\n            },\n            totals: quote.getTotals(),\n            isTaxDisplayedInGrandTotal: window.checkoutConfig.includeTaxInGrandTotal || false,\n            isDisplayed: function() {\n                return this.isFullMode();\n            },\n            getValue: function() {\n                var price = 0;\n                if (this.totals()) {\n                    price = totals.getSegment('grand_total').value;\n                }\n                return this.getFormattedPrice(price);\n            },\n            getBaseValue: function() {\n                var price = 0;\n                if (this.totals()) {\n                    price = this.totals().base_grand_total;\n                }\n                return priceUtils.formatPrice(price, quote.getBasePriceFormat());\n            },\n            getGrandTotalExclTax: function() {\n                var totals = this.totals();\n                if (!totals) {\n                    return 0;\n                }\n                return this.getFormattedPrice(totals.grand_total);\n            },\n            isBaseGrandTotalDisplayNeeded: function() {\n                var totals = this.totals();\n                if (!totals) {\n                    return false;\n                }\n                return totals.base_currency_code != totals.quote_currency_code;\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/summary/shipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/view/summary/shipping',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function ($, Component, quote) {\n        var displayMode = window.checkoutConfig.reviewShippingDisplayMode;\n        return Component.extend({\n            defaults: {\n                displayMode: displayMode,\n                template: 'Magento_Tax/checkout/summary/shipping'\n            },\n            isBothPricesDisplayed: function() {\n                return 'both' == this.displayMode\n            },\n            isIncludingDisplayed: function() {\n                return 'including' == this.displayMode;\n            },\n            isExcludingDisplayed: function() {\n                return 'excluding' == this.displayMode;\n            },\n            isCalculated: function() {\n                return this.totals() && this.isFullMode() && null != quote.shippingMethod();\n            },\n            getIncludingValue: function() {\n                if (!this.isCalculated()) {\n                    return this.notCalculatedMessage;\n                }\n                var price =  this.totals().shipping_incl_tax;\n                return this.getFormattedPrice(price);\n            },\n            getExcludingValue: function() {\n                if (!this.isCalculated()) {\n                    return this.notCalculatedMessage;\n                }\n                var price =  this.totals().shipping_amount;\n                return this.getFormattedPrice(price);\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/summary/subtotal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        var displaySubtotalMode = window.checkoutConfig.reviewTotalsDisplayMode;\n        return Component.extend({\n            defaults: {\n                displaySubtotalMode: displaySubtotalMode,\n                template: 'Magento_Tax/checkout/summary/subtotal'\n            },\n            totals: quote.getTotals(),\n            getValue: function () {\n                var price = 0;\n                if (this.totals()) {\n                    price = this.totals().subtotal;\n                }\n                return this.getFormattedPrice(price);\n            },\n            isBothPricesDisplayed: function() {\n                return 'both' == this.displaySubtotalMode;\n            },\n            isIncludingTaxDisplayed: function() {\n                return 'including' == this.displaySubtotalMode;\n            },\n            getValueInclTax: function() {\n                var price = 0;\n                if (this.totals()) {\n                    price = this.totals().subtotal_incl_tax;\n                }\n                return this.getFormattedPrice(price);\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/summary/item/details/subtotal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/item/details/subtotal'\n    ],\n    function (subtotal) {\n        'use strict';\n\n        var displayPriceMode = window.checkoutConfig.reviewItemPriceDisplayMode || 'including';\n\n        return subtotal.extend({\n            defaults: {\n                displayPriceMode: displayPriceMode,\n                template: 'Magento_Tax/checkout/summary/item/details/subtotal'\n            },\n            isPriceInclTaxDisplayed: function () {\n                return 'both' == displayPriceMode || 'including' == displayPriceMode;\n            },\n            isPriceExclTaxDisplayed: function () {\n                return 'both' == displayPriceMode || 'excluding' == displayPriceMode;\n            },\n            getValueInclTax: function (quoteItem) {\n                return this.getFormattedPrice(quoteItem['row_total_incl_tax']);\n            },\n            getValueExclTax: function (quoteItem) {\n                return this.getFormattedPrice(quoteItem['row_total']);\n            }\n\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/shipping_method/price.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Catalog/js/price-utils'\n    ],\n    function (Component,quote, priceUtils) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Tax/checkout/shipping_method/price'\n            },\n\n            isDisplayShippingPriceExclTax: window.checkoutConfig.isDisplayShippingPriceExclTax,\n            isDisplayShippingBothPrices: window.checkoutConfig.isDisplayShippingBothPrices,\n            isPriceEqual: function(item) {\n                return item.price_excl_tax != item.price_incl_tax;\n            },\n            getFormattedPrice: function (price) {\n                //todo add format data\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/cart/totals/tax.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Tax/js/view/checkout/summary/tax',\n        'Magento_Checkout/js/model/totals'\n    ],\n    function (Component, totals) {\n        'use strict';\n\n        var isFullTaxSummaryDisplayed = window.checkoutConfig.isFullTaxSummaryDisplayed,\n            isZeroTaxDisplayed = window.checkoutConfig.isZeroTaxDisplayed;\n\n        return Component.extend({\n\n            /**\n             * @override\n             */\n            ifShowValue: function () {\n                if (this.getPureValue() === 0) {\n                    return isZeroTaxDisplayed;\n                }\n\n                return true;\n            },\n\n            /**\n             * @override\n             */\n            ifShowDetails: function () {\n                return this.getPureValue() > 0 && isFullTaxSummaryDisplayed;\n            },\n\n            /**\n             * @override\n             */\n            isCalculated: function () {\n                return this.totals() && totals.getSegment('tax') !== null;\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/cart/totals/grand-total.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Tax/js/view/checkout/summary/grand-total'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n\n            /**\n             * @override\n             */\n            isDisplayed: function () {\n                return true;\n            }\n        });\n    }\n);\n","Magento_Tax/js/view/checkout/cart/totals/shipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Tax/js/view/checkout/summary/shipping',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        'use strict';\n\n        return Component.extend({\n\n            /**\n             * @override\n             */\n            isCalculated: function () {\n                return !!quote.shippingMethod();\n            },\n\n            /**\n             * @override\n             */\n            getShippingMethodTitle: function () {\n                return '(' + this._super() + ')';\n            }\n        });\n    }\n);\n","Magento_Review/js/process-reviews.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    function processReviews(url, fromPages) {\n        $.ajax({\n            url: url,\n            dataType: 'html'\n        }).done(function (data) {\n            $('#product-review-container').html(data);\n            $('[data-role=\"product-review\"] .pages a').each(function (index, element) {\n                $(element).click(function (event) {\n                    processReviews($(element).attr('href'), true);\n                    event.preventDefault();\n                });\n            });\n        }).complete(function () {\n            if (fromPages == true) {\n                $('html, body').animate({\n                    scrollTop: $('#reviews').offset().top - 50\n                }, 300);\n            }\n        });\n    }\n\n    return function (config, element) {\n        processReviews(config.productReviewUrl);\n        $(function () {\n            $('.product-info-main .reviews-actions a').click(function (event) {\n                event.preventDefault();\n                var acnchor = $(this).attr('href').replace(/^.*?(#|$)/, '');\n                $(\".product.data.items [data-role='content']\").each(function(index){\n                    if (this.id == 'reviews') {\n                        $('.product.data.items').tabs('activate', index);\n                        $('html, body').animate({\n                            scrollTop: $('#' + acnchor).offset().top - 50\n                        }, 300);\n                    }\n                });\n            });\n        });\n    };\n});\n","Magento_Review/js/error-placement.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mage/mage'\n], function ($, mage) {\n    'use strict';\n\n    return function (config, element) {\n        $(element).mage('validation', {\n            errorPlacement: function (error, element) {\n\n                if (element.parents('#product-review-table').length) {\n                    $('#product-review-table').siblings(this.errorElement + '.' + this.errorClass).remove();\n                    $('#product-review-table').after(error);\n                } else {\n                    element.after(error);\n                }\n            }\n        });\n    };\n});\n","Magento_Review/js/view/review.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'Magento_Customer/js/view/customer'\n], function (Component, customerData, customer) {\n    'use strict';\n\n    return Component.extend({\n        initialize: function () {\n            this._super();\n\n            this.review = customerData.get('review').extend({disposableCustomerData: 'review'});\n        },\n        nickname: function() {\n            return this.review().nickname || customerData.get('customer')().firstname;\n        }\n    });\n});\n","Magento_ProductVideo/js/load-player.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/**\n @version 0.0.1\n @requires jQuery & jQuery UI\n */\ndefine(['jquery', 'jquery/ui'], function ($) {\n    'use strict';\n\n    var videoRegister = {\n        _register: {},\n\n        /**\n         * Checks, if api is already registered\n         *\n         * @param {String} api\n         * @returns {bool}\n         */\n        isRegistered: function (api) {\n            return this._register[api] !== undefined;\n        },\n\n        /**\n         * Checks, if api is loaded\n         *\n         * @param {String} api\n         * @returns {bool}\n         */\n        isLoaded: function (api) {\n            return this._register[api] !== undefined && this._register[api] === true;\n        },\n\n        /**\n         * Register new video api\n         * @param {String} api\n         * @param {bool} loaded\n         */\n        register: function (api, loaded) {\n            loaded = loaded || false;\n            this._register[api] = loaded;\n        }\n    };\n\n    $.widget('mage.productVideoLoader', {\n\n        /**\n         * @private\n         */\n        _create: function () {\n            switch (this.element.data('type')) {\n                case 'youtube':\n                    this.element.videoYoutube();\n                    this._player = this.element.data('mageVideoYoutube');\n                    break;\n\n                case 'vimeo':\n                    this.element.videoVimeo();\n                    this._player = this.element.data('mageVideoVimeo');\n                    break;\n                default:\n                    throw {\n                        name: 'Video Error',\n                        message: 'Unknown video type',\n\n                        /**\n                         * join name with message\n                         */\n                        toString: function () {\n                            return this.name + ': ' + this.message;\n                        }\n                    };\n            }\n        },\n\n        /**\n         * Initializes variables\n         * @private\n         */\n        _initialize: function () {\n            this._params = this.element.data('params') || {};\n            this._code = this.element.data('code');\n            this._width = this.element.data('width');\n            this._height = this.element.data('height');\n            this._autoplay = !!this.element.data('autoplay');\n            this._playing = this._autoplay || false;\n            this._loop = this.element.data('loop');\n            this._rel = this.element.data('related');\n\n            this._responsive = this.element.data('responsive') !== false;\n\n            if (this._responsive === true) {\n                this.element.addClass('responsive');\n            }\n\n            this._calculateRatio();\n        },\n\n        /**\n         * Abstract play command\n         */\n        play: function () {\n            this._player.play();\n        },\n\n        /**\n         * Abstract pause command\n         */\n        pause: function () {\n            this._player.pause();\n        },\n\n        /**\n         * Abstract stop command\n         */\n        stop: function () {\n            this._player.stop();\n        },\n\n        /**\n         * Abstract playing command\n         */\n        playing: function () {\n            return this._player.playing();\n        },\n\n        /**\n         * Destroyer\n         */\n        destroy: function () {\n            this._player.destroy();\n        },\n\n        /**\n         * Calculates ratio for responsive videos\n         * @private\n         */\n        _calculateRatio: function () {\n            if (!this._responsive) {\n                return;\n            }\n            this.element.css('paddingBottom', this._height / this._width * 100 + '%');\n        }\n    });\n\n    $.widget('mage.videoYoutube', $.mage.productVideoLoader, {\n\n        /**\n         * Initialization of the Youtube widget\n         * @private\n         */\n        _create: function () {\n            var self = this;\n\n            this._initialize();\n\n            this.element.append('<div/>');\n\n            this._on(window, {\n\n                /**\n                 * Handle event\n                 */\n                'youtubeapiready': function () {\n                    if (self._player !== undefined) {\n                        return;\n                    }\n                    self._autoplay = true;\n\n                    if (self._autoplay) {\n                        self._params.autoplay = 1;\n                    }\n\n                    if (!self._rel) {\n                        self._params.rel = 0;\n                    }\n\n                    self._player = new window.YT.Player(self.element.children(':first')[0], {\n                        height: self._height,\n                        width: self._width,\n                        videoId: self._code,\n                        playerVars: self._params,\n                        events: {\n\n                            /**\n                             * Get duration\n                             */\n                            'onReady': function onPlayerReady() {\n                                self._player.getDuration();\n                            },\n\n                            /**\n                             * Event observer\n                             */\n                            onStateChange: function (data) {\n                                switch (window.parseInt(data.data, 10)) {\n                                    case 1:\n                                        self._playing = true;\n                                        break;\n                                    default:\n                                        self._playing = false;\n                                        break;\n                                }\n\n                                self._trigger('statechange', {}, data);\n\n                                if (data.data === window.YT.PlayerState.ENDED && self._loop) {\n                                    self._player.playVideo();\n                                }\n                            }\n                        }\n\n                    });\n                }\n            });\n\n            this._loadApi();\n        },\n\n        /**\n         * Loads Youtube API and triggers event, when loaded\n         * @private\n         */\n        _loadApi: function () {\n            var element,\n                scriptTag;\n\n            if (videoRegister.isRegistered('youtube')) {\n                if (videoRegister.isLoaded('youtube')) {\n                    $(window).trigger('youtubeapiready');\n                }\n\n                return;\n            }\n            videoRegister.register('youtube');\n\n            element = document.createElement('script');\n            scriptTag = document.getElementsByTagName('script')[0];\n\n            element.async = true;\n            element.src = 'https://www.youtube.com/iframe_api';\n            scriptTag.parentNode.insertBefore(element, scriptTag);\n\n            /**\n             * Event observe and handle\n             */\n            window.onYouTubeIframeAPIReady = function () {\n                $(window).trigger('youtubeapiready');\n                videoRegister.register('youtube', true);\n            };\n        },\n\n        /**\n         * Play command for Youtube\n         */\n        play: function () {\n            this._player.playVideo();\n            this._playing = true;\n        },\n\n        /**\n         * Pause command for Youtube\n         */\n        pause: function () {\n            this._player.pauseVideo();\n            this._playing = false;\n        },\n\n        /**\n         * Stop command for Youtube\n         */\n        stop: function () {\n            this._player.stopVideo();\n            this._playing = false;\n        },\n\n        /**\n         * Playing command for Youtube\n         */\n        playing: function () {\n            return this._playing;\n        },\n\n        /**\n         * stops and unloads player\n         * @private\n         */\n        destroy: function () {\n            this.stop();\n            this._player.destroy();\n        }\n    });\n\n    $.widget('mage.videoVimeo', $.mage.productVideoLoader, {\n\n        /**\n         * Initialize the Vimeo widget\n         * @private\n         */\n        _create: function () {\n            var timestamp,\n                additionalParams = '',\n                src;\n\n            this._initialize();\n            timestamp = new Date().getTime();\n            this._autoplay = true;\n\n            if (this._autoplay) {\n                additionalParams += '&autoplay=1';\n            }\n\n            if (this._loop) {\n                additionalParams += '&loop=1';\n            }\n            src = 'http://player.vimeo.com/video/' +\n                this._code + '?api=1&player_id=vimeo' +\n                this._code +\n                timestamp +\n                additionalParams;\n            this.element.append(\n                $('<iframe/>')\n                    .attr('frameborder', 0)\n                    .attr('id', 'vimeo' + this._code + timestamp)\n                    .attr('width', this._width)\n                    .attr('height', this._height)\n                    .attr('src', src)\n                    .attr('webkitallowfullscreen', '')\n                    .attr('mozallowfullscreen', '')\n                    .attr('allowfullscreen', '')\n            );\n            this._player = window.$f(this.element.children(':first')[0]);\n\n            // Froogaloop throws error without a registered ready event\n            this._player.addEvent('ready', function () {\n            });\n        },\n\n        /**\n         * Play command for Vimeo\n         */\n        play: function () {\n            this._player.api('play');\n            this._playing = true;\n        },\n\n        /**\n         * Pause command for Vimeo\n         */\n        pause: function () {\n            this._player.api('pause');\n            this._playing = false;\n        },\n\n        /**\n         * Stop command for Vimeo\n         */\n        stop: function () {\n            this._player.api('unload');\n            this._playing = false;\n        },\n\n        /**\n         * Playing command for Vimeo\n         */\n        playing: function () {\n            return this._playing;\n        }\n    });\n});\n","Magento_ProductVideo/js/fotorama-add-video-events.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'jquery/ui',\n    'catalogGallery',\n    'Magento_ProductVideo/js/load-player'\n], function ($) {\n    'use strict';\n\n    /**\n     * @private\n     */\n    var allowBase = true; //global var is needed because fotorama always fully reloads events in case of fullscreen\n\n    /**\n     * @private\n     */\n    function parseHref(href) {\n        var a = document.createElement('a');\n\n        a.href = href;\n\n        return a;\n    }\n\n    /**\n     * @private\n     */\n    function parseURL(href, forceVideo) {\n        var id,\n            type,\n            ampersandPosition,\n            vimeoRegex;\n\n        /**\n         * Get youtube ID\n         * @param {String} srcid\n         * @returns {{}}\n         */\n        function _getYoutubeId(srcid) {\n            if (srcid) {\n                ampersandPosition = srcid.indexOf('&');\n\n                if (ampersandPosition === -1) {\n                    return srcid;\n                }\n\n                srcid = srcid.substring(0, ampersandPosition);\n            }\n\n            return srcid;\n        }\n\n        if (typeof href !== 'string') {\n            return href;\n        }\n\n        href = parseHref(href);\n\n        if (href.host.match(/youtube\\.com/) && href.search) {\n            id = href.search.split('v=')[1];\n\n            if (id) {\n                id = _getYoutubeId(id);\n                type = 'youtube';\n            }\n        } else if (href.host.match(/youtube\\.com|youtu\\.be/)) {\n            id = href.pathname.replace(/^\\/(embed\\/|v\\/)?/, '').replace(/\\/.*/, '');\n            type = 'youtube';\n        } else if (href.host.match(/vimeo\\.com/)) {\n            type = 'vimeo';\n            vimeoRegex = new RegExp(['https?:\\\\/\\\\/(?:www\\\\.|player\\\\.)?vimeo.com\\\\/(?:channels\\\\/(?:\\\\w+\\\\/)',\n                '?|groups\\\\/([^\\\\/]*)\\\\/videos\\\\/|album\\\\/(\\\\d+)\\\\/video\\\\/|video\\\\/|)(\\\\d+)(?:$|\\\\/|\\\\?)'\n            ].join(''));\n            id = href.href.match(vimeoRegex)[3];\n        }\n\n        if ((!id || !type) && forceVideo) {\n            id = href.href;\n            type = 'custom';\n        }\n\n        return id ? {\n            id: id, type: type, s: href.search.replace(/^\\?/, '')\n        } : false;\n    }\n\n    //create AddFotoramaVideoEvents widget\n    $.widget('mage.AddFotoramaVideoEvents', {\n        options: {\n            VideoData: '',\n            VideoSettings: ''\n        },\n\n        PV: 'product-video', // [CONST]\n        VID: 'video', // [CONST]\n        VI: 'vimeo', // [CONST]\n        FTVC: 'fotorama__video-close',\n        FTAR: 'fotorama__arr',\n        isFullscreen: 0,\n        inFullscreen: false,\n        Base: 0, //on check for video is base this setting become true if there is any video with base role\n        MobileMaxWidth: 767,\n        GP: 'gallery-placeholder', //gallery placeholder class is needed to find and erase <script> tag\n\n        /**\n         *\n         * @private\n         */\n        _init: function () {\n            if (this._checkForVideoExist()) {\n                this._checkFullscreen();\n                this._listenForFullscreen();\n                this._checkForVimeo();\n                this._isVideoBase();\n                this._initFotoramaVideo();\n                this._attachFotoramaEvents();\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _checkFullscreen: function () {\n            if ($(this.element).find('.fotorama__fullscreen-icon')) {\n                this.isFullscreen = true;\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _listenForFullscreen: function () {\n            $(this.element).on('fotorama:fullscreenenter', $.proxy(function () {\n                this.inFullscreen = true;\n            }, this));\n            $(this.element).on('fotorama:fullscreenexit', $.proxy(function () {\n                this.inFullscreen = false;\n                $(this.element).find('.' + this.PV).parent().find('img:not(\".fotorama__img--full\")').show();\n            }, this));\n        },\n\n        /**\n         *\n         * @param {Object} inputData\n         * @param {bool} isJSON\n         * @returns {{}}\n         * @private\n         */\n        _createVideoData: function (inputData, isJSON) {\n            var videoData = [],\n                dataUrl,\n                tmpVideoData,\n                tmpInputData,\n                i;\n\n            if (isJSON) {\n                inputData = $.parseJSON(inputData);\n            }\n\n            for (i = 0; i < inputData.length; i++) {\n                tmpInputData = inputData[i];\n                dataUrl = '';\n                tmpVideoData = {\n                    mediaType: '',\n                    isBase: '',\n                    id: '',\n                    provider: ''\n                };\n                tmpVideoData.mediaType = this.VID;\n\n                if (tmpInputData.mediaType !== 'external-video') {\n                    tmpVideoData.mediaType = tmpInputData.mediaType;\n                }\n\n                tmpVideoData.isBase = tmpInputData.isBase;\n\n                if (tmpInputData.videoUrl != null) {\n                    dataUrl = tmpInputData.videoUrl;\n                    dataUrl = parseURL(dataUrl);\n                    tmpVideoData.id = dataUrl.id;\n                    tmpVideoData.provider = dataUrl.type;\n                }\n\n                if (tmpVideoData.isBase) {\n                    videoData.unshift(tmpVideoData);\n                } else {\n                    videoData.push(tmpVideoData);\n                }\n            }\n\n            return videoData;\n        },\n\n        /**\n         *\n         * @param {Object} fotorama\n         * @param {bool} isBase\n         * @private\n         */\n        _createCloseVideo: function (fotorama, isBase) {\n            var closeVideo;\n\n            $(this.element).find('.' + this.FTVC).remove();\n            $(this.element).append('<div class=\"' + this.FTVC + '\"></div>');\n            $(this.element).css('position', 'relative');\n            closeVideo = $(this.element).find('.' + this.FTVC);\n            this._closeVideoSetEvents(closeVideo, fotorama);\n\n            if (\n                isBase &&\n                this.options.VideoData[fotorama.activeIndex].isBase &&\n                $(window).width() > this.MobileMaxWidth) {\n                this._showCloseVideo();\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _hideCloseVideo: function () {\n            $(this.element).find('.' + this.FTVC).css({\n                opacity: 0,\n                transform: 'translate3d(95px, -95px, 0)',\n                display: 'none'\n            });\n            $('.' + this.FTAR).removeClass('hidden-video');\n        },\n\n        /**\n         *\n         * @private\n         */\n        _showCloseVideo: function () {\n            $(this.element).find('.' + this.FTVC).css({\n                opacity: 1,\n                transform: 'translate3d(0px, 0px, 0)',\n                display: 'block'\n            });\n            $('.' + this.FTAR).addClass('hidden-video');\n        },\n\n        /**\n         *\n         * @param {jQuery} $closeVideo\n         * @param {jQuery} fotorama\n         * @private\n         */\n        _closeVideoSetEvents: function ($closeVideo, fotorama) {\n            $closeVideo.on('click', $.proxy(function () {\n                this._unloadVideoPlayer(fotorama.activeFrame.$stageFrame.parent(), fotorama, true);\n                this._hideCloseVideo();\n            }, this));\n        },\n\n        /**\n         *\n         * @returns {Boolean}\n         * @private\n         */\n        _checkForVideoExist: function () {\n            var key, result, checker, videoSettings;\n\n            if (!this.options.VideoData) {\n                return false;\n            }\n\n            if (!this.options.VideoSettings) {\n                return false;\n            }\n            result = this._createVideoData(this.options.VideoData, false),\n                checker = false;\n            videoSettings = this.options.VideoSettings[0];\n            videoSettings.playIfBase = parseInt(videoSettings.playIfBase, 10);\n            videoSettings.showRelated = parseInt(videoSettings.showRelated, 10);\n            videoSettings.videoAutoRestart = parseInt(videoSettings.videoAutoRestart, 10);\n\n            for (key in result) {\n                if (result[key].mediaType === this.VID) {\n                    checker = true;\n                }\n            }\n\n            if (checker) {\n                this.options.VideoData = result;\n            }\n\n            return checker;\n        },\n\n        /**\n         *\n         * @private\n         */\n        _checkForVimeo: function () {\n            var allVideoData = this.options.VideoData,\n                videoItem;\n\n            for (videoItem in allVideoData) {\n                if (allVideoData[videoItem].provider === this.VI) {\n                    this._loadVimeoJSFramework();\n                }\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _isVideoBase: function () {\n            var allVideoData = this.options.VideoData,\n                videoItem,\n                allVideoDataKeys,\n                key,\n                i;\n\n            allVideoDataKeys = Object.keys(allVideoData);\n\n            for (i = 0; i < allVideoDataKeys.length; i++) {\n                key = allVideoDataKeys[i];\n                videoItem = allVideoData[key];\n\n                if (\n                    videoItem.mediaType === this.VID && videoItem.isBase &&\n                    this.options.VideoSettings[0].playIfBase && allowBase\n                ) {\n                    this.Base = true;\n                    allowBase = false;\n                }\n            }\n\n            if (!this.isFullscreen) {\n                this._createCloseVideo($(this.element).data('fotorama'), this.Base);\n            }\n        },\n\n        /**\n         *\n         * @private\n         */\n        _loadVimeoJSFramework: function () {\n            var element = document.createElement('script'),\n                scriptTag = document.getElementsByTagName('script')[0];\n\n            element.async = true;\n            element.src = 'https://secure-a.vimeocdn.com/js/froogaloop2.min.js';\n            scriptTag.parentNode.insertBefore(element, scriptTag);\n        },\n\n        /**\n         *\n         * @param {Event} e\n         * @private\n         */\n        _initFotoramaVideo: function (e) {\n            var fotorama = $(this.element).data('fotorama'),\n                thumbsParent,\n                thumbs,\n                t,\n                tmpVideoData,\n                currentItem,\n                iconClass = 'video-thumb-icon';\n\n            if (!fotorama.activeFrame.$navThumbFrame) {\n                $(this.element).on('fotorama:showend', $.proxy(function (evt, fotoramaData) {\n                    $(fotoramaData.activeFrame.$stageFrame).removeAttr('href');\n                }, this));\n\n                this._startPrepareForPlayer(e, fotorama);\n\n                return null;\n            }\n\n            thumbsParent = fotorama.activeFrame.$navThumbFrame.parent();\n            thumbs = thumbsParent.find('.fotorama__nav__frame:visible');\n\n            for (t = 0; t < thumbs.length; t++) {\n                tmpVideoData = this.options.VideoData[t];\n                currentItem = thumbs.eq(t);\n\n                if (fotorama.options.nav === 'dots' && currentItem.hasClass(iconClass)) {\n                    currentItem.removeClass(iconClass);\n                }\n\n                if (tmpVideoData.mediaType === this.VID && fotorama.options.nav === 'thumbs') {\n                    currentItem.addClass(iconClass);\n                }\n            }\n            $(this.element).on('fotorama:showend', $.proxy(function (evt, fotoramaData) {\n                $(fotoramaData.activeFrame.$stageFrame).removeAttr('href');\n            }, this));\n\n            this._startPrepareForPlayer(e, fotorama);\n        },\n\n        /**\n         * Attach\n         *\n         * @private\n         */\n        _attachFotoramaEvents: function () {\n            $(this.element).on('fotorama:showend', $.proxy(function (e, fotorama) {\n                this._startPrepareForPlayer(e, fotorama);\n            }, this));\n\n            $(this.element).on('fotorama:fullscreenexit', $.proxy(function (e, fotorama) {\n                fotorama.activeFrame.$stageFrame.parent().find('.' + this.PV).remove();\n                this._startPrepareForPlayer(e, fotorama);\n            }, this));\n        },\n\n        /**\n         * Start prepare for player\n         *\n         * @param {Event} e\n         * @param {jQuery} fotorama\n         * @private\n         */\n        _startPrepareForPlayer: function (e, fotorama) {\n            this._unloadVideoPlayer(fotorama.activeFrame.$stageFrame.parent(), fotorama, false);\n            this._checkForVideo(e, fotorama, -1);\n            this._checkForVideo(e, fotorama, 0);\n            this._checkForVideo(e, fotorama, 1);\n        },\n\n        /**\n         * Check for video\n         *\n         * @param {Event} e\n         * @param {jQuery} fotorama\n         * @param {Number} number\n         * @private\n         */\n        _checkForVideo: function (e, fotorama, number) {\n            var frameNumber = parseInt(fotorama.activeFrame.i, 10),\n                videoData = this.options.VideoData[frameNumber - 1 + number],\n                $image = fotorama.data[frameNumber - 1 + number];\n\n            if ($image) {\n                $image = $image.$stageFrame;\n            }\n\n            if ($image && videoData && videoData.mediaType === this.VID) {\n                $(fotorama.activeFrame.$stageFrame).removeAttr('href');\n                this._prepareForVideoContainer($image, videoData, fotorama, number);\n                $('.fotorama-video-container').addClass('video-unplayed');\n            }\n        },\n\n        /**\n         * Prepare for video container\n         *\n         * @param {jQuery} $image\n         * @param {Object} videoData\n         * @param {Object} fotorama\n         * @param {Number} number\n         * @private\n         */\n        _prepareForVideoContainer: function ($image, videoData, fotorama, number) {\n            if (!$image.hasClass('fotorama-video-container')) {\n                $image.addClass('fotorama-video-container').addClass('video-unplayed');\n            }\n\n            this._createVideoContainer(videoData, $image);\n            this._setVideoEvent($image, this.PV, fotorama, number);\n        },\n\n        /**\n         * Create video container\n         *\n         * @param {Object} videoData\n         * @param {jQuery} $image\n         * @private\n         */\n        _createVideoContainer: function (videoData, $image) {\n            var videoSettings;\n\n            if ($image.find('.' + this.PV).length !== 0) {\n                return;\n            }\n\n            videoSettings = this.options.VideoSettings[0];\n            $image.append(\n                '<div class=\"' +\n                this.PV +\n                '\" data-related=\"' +\n                videoSettings.showRelated +\n                '\" data-loop=\"' +\n                videoSettings.videoAutoRestart +\n                '\" data-type=\"' +\n                videoData.provider +\n                '\" data-code=\"' +\n                videoData.id +\n                '\" data-width=\"100%\" data-height=\"100%\"></div>'\n            );\n        },\n\n        /**\n         *\n         * @param {Object} $image\n         * @param {Object} PV\n         * @param {Object} fotorama\n         * @param {Number} number\n         * @private\n         */\n        _setVideoEvent: function ($image, PV, fotorama, number) {\n            var self = this;\n\n            $image.find('.magnify-lens').remove();\n            $image.on('click tap', function () {\n                if ($(this).hasClass('video-unplayed') && $(this).find('iframe').length === 0) {\n                    $('.fotorama__arr--next').hide();\n                    $('.fotorama__arr--prev').hide();\n\n                    $(this).removeClass('video-unplayed');\n                    $(this).find('.' + PV).productVideoLoader();\n                    $(this).find('img').hide();\n\n                    if (!self.isFullscreen) {\n                        self._showCloseVideo();\n                    }\n                    $('.' + self.FTAR).addClass('hidden-video');\n                }\n            });\n\n            if (this.inFullscreen) {\n                $(this.element).data('fotorama').activeFrame.$stageFrame[0].click();\n            }\n            $(this.element).on('fotorama:fullscreenenter', $.proxy(function () {\n                $(this.element).data('fotorama').activeFrame.$stageFrame[0].click();\n            }, this));\n            this._handleBaseVideo(fotorama, number); //check for video is it base and handle it if it's base\n        },\n\n        /**\n         * Handle base video\n         * @param {Object} fotorama\n         * @param {Number} srcNumber\n         * @private\n         */\n        _handleBaseVideo: function (fotorama, srcNumber) {\n            var waitForFroogaloop,\n                videoData = this.options.VideoData,\n                activeIndex = fotorama.activeIndex,\n                number = parseInt(srcNumber, 10),\n                activeIndexIsBase = videoData[activeIndex];\n\n            if (!this.Base) {\n                return;\n            }\n\n            if (activeIndexIsBase && number === 0 && $(window).width() > this.MobileMaxWidth) {\n                if (this.options.VideoData[fotorama.activeIndex].provider === this.VI) {\n                    waitForFroogaloop = setInterval($.proxy(function () {\n                        if (window.Froogaloop) {\n                            clearInterval(waitForFroogaloop);\n                            fotorama.requestFullScreen();\n                            $(this.element).data('fotorama').activeFrame.$stageFrame[0].click();\n                            $('.fotorama__fullscreen-icon').css({\n                                opacity: '1',\n                                visibility: 'visible',\n                                display: 'block'\n                            });\n                            this.Base = false;\n                        }\n                    }, this), 50);\n                } else { //if not a vimeo - play it immediately with a little lag in case for fotorama fullscreen\n                    setTimeout($.proxy(function () {\n                        fotorama.requestFullScreen();\n                        $(this.element).data('fotorama').activeFrame.$stageFrame[0].click();\n                        $('.fotorama__fullscreen-icon').css({\n                            opacity: '1',\n                            visibility: 'visible',\n                            display: 'block'\n                        });\n                        this.Base = false;\n                    }, this), 50);\n                }\n            }\n        },\n\n        /**\n         * Destroy video player\n         * @param {jQuery} $wrapper\n         * @param {jQuery} current\n         * @param {bool} close\n         * @private\n         */\n        _unloadVideoPlayer: function ($wrapper, current, close) {\n            var self = this;\n\n            $wrapper.find('.' + this.PV).each(function () {\n                var $item = $(this).parent(),\n                    cloneVideoDiv,\n                    iframeElement = $(this).find('iframe'),\n                    currentIndex,\n                    itemIndex,\n                    videoPreview = $item.find('img').not('.fotorama__img--full');\n\n                if (iframeElement.length === 0) {\n                    return;\n                }\n\n                if (!videoPreview.is(':visible') && !self.inFullscreen) {\n                    videoPreview.show();\n                }\n\n                currentIndex = current.activeFrame.$stageFrame.index();\n                itemIndex = $item.index();\n\n                if (currentIndex === itemIndex && !close) {\n                    return;\n                }\n\n                if (currentIndex !== itemIndex && close) {\n                    return;\n                }\n\n                iframeElement.remove();\n                cloneVideoDiv = $(this).clone();\n                $(this).remove();\n                $item.append(cloneVideoDiv);\n                $item.addClass('video-unplayed');\n                $('.fotorama__arr--next').show();\n                $('.fotorama__arr--prev').show();\n                self._hideCloseVideo();\n\n            });\n\n            $('.' + this.FTAR).removeClass('hidden-video');\n        }\n    });\n\n    return function (config, element) {\n        $('.gallery-placeholder').on('fotorama:ready', function () {\n            $(element).find('.fotorama').AddFotoramaVideoEvents({\n                VideoData: config.fotoramaVideoData || [],\n                VideoSettings: config.fotoramaVideoSettings || {}\n            });\n        });\n    };\n});\n","Magento_Checkout/js/discount-codes.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.discountCode', {\n        options: {\n        },\n        _create: function () {\n            this.couponCode = $(this.options.couponCodeSelector);\n            this.removeCoupon = $(this.options.removeCouponSelector);\n\n            $(this.options.applyButton).on('click', $.proxy(function () {\n                this.couponCode.attr('data-validate', '{required:true}');\n                this.removeCoupon.attr('value', '0');\n                $(this.element).validation().submit();\n            }, this));\n\n            $(this.options.cancelButton).on('click', $.proxy(function () {\n                this.couponCode.removeAttr('data-validate');\n                this.removeCoupon.attr('value', '1');\n                this.element.submit();\n            }, this));\n        }\n    });\n\n    return $.mage.discountCode;\n});\n","Magento_Checkout/js/checkout-data.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global alert*/\n/**\n * Checkout adapter for customer data storage\n */\ndefine([\n    'jquery',\n    'Magento_Customer/js/customer-data'\n], function ($, storage) {\n    'use strict';\n\n    var cacheKey = 'checkout-data';\n\n    var getData = function () {\n        return storage.get(cacheKey)();\n    };\n\n    var saveData = function (checkoutData) {\n        storage.set(cacheKey, checkoutData);\n    };\n\n    if ($.isEmptyObject(getData())) {\n        var checkoutData = {\n            'selectedShippingAddress': null,\n            'shippingAddressFromData' : null,\n            'newCustomerShippingAddress' : null,\n            'selectedShippingRate' : null,\n            'selectedPaymentMethod' : null,\n            'selectedBillingAddress' : null,\n            'billingAddressFormData' : null,\n            'newCustomerBillingAddress' : null\n        };\n        saveData(checkoutData);\n    }\n\n    return {\n        setSelectedShippingAddress: function (data) {\n            var obj = getData();\n            obj.selectedShippingAddress = data;\n            saveData(obj);\n        },\n\n        getSelectedShippingAddress: function () {\n            return getData().selectedShippingAddress;\n        },\n\n        setShippingAddressFromData: function (data) {\n            var obj = getData();\n            obj.shippingAddressFromData = data;\n            saveData(obj);\n        },\n\n        getShippingAddressFromData: function () {\n            return getData().shippingAddressFromData;\n        },\n\n        setNewCustomerShippingAddress: function (data) {\n            var obj = getData();\n            obj.newCustomerShippingAddress = data;\n            saveData(obj);\n        },\n\n        getNewCustomerShippingAddress: function () {\n            return getData().newCustomerShippingAddress;\n        },\n\n        setSelectedShippingRate: function (data) {\n            var obj = getData();\n            obj.selectedShippingRate = data;\n            saveData(obj);\n        },\n\n        getSelectedShippingRate: function() {\n            return getData().selectedShippingRate;\n        },\n\n        setSelectedPaymentMethod: function (data) {\n            var obj = getData();\n            obj.selectedPaymentMethod = data;\n            saveData(obj);\n        },\n\n        getSelectedPaymentMethod: function() {\n            return getData().selectedPaymentMethod;\n        },\n\n        setSelectedBillingAddress: function (data) {\n            var obj = getData();\n            obj.selectedBillingAddress = data;\n            saveData(obj);\n        },\n\n        getSelectedBillingAddress: function () {\n            return getData().selectedBillingAddress;\n        },\n\n        setBillingAddressFromData: function (data) {\n            var obj = getData();\n            obj.billingAddressFromData = data;\n            saveData(obj);\n        },\n\n        getBillingAddressFromData: function () {\n            return getData().billingAddressFromData;\n        },\n\n        setNewCustomerBillingAddress: function (data) {\n            var obj = getData();\n            obj.newCustomerBillingAddress = data;\n            saveData(obj);\n        },\n\n        getNewCustomerBillingAddress: function () {\n            return getData().newCustomerBillingAddress;\n        },\n\n        getValidatedEmailValue: function () {\n            var obj = getData();\n            return (obj.validatedEmailValue) ? obj.validatedEmailValue : '';\n        },\n\n        setValidatedEmailValue: function (email) {\n            var obj = getData();\n            obj.validatedEmailValue = email;\n            saveData(obj);\n        },\n\n        getInputFieldEmailValue: function () {\n            var obj = getData();\n            return (obj.inputFieldEmailValue) ? obj.inputFieldEmailValue : '';\n        },\n\n        setInputFieldEmailValue: function (email) {\n            var obj = getData();\n            obj.inputFieldEmailValue = email;\n            saveData(obj);\n        }\n    }\n});\n","Magento_Checkout/js/sidebar.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global confirm:true*/\ndefine([\n    \"jquery\",\n    'Magento_Customer/js/model/authentication-popup',\n    'Magento_Customer/js/customer-data',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/modal/confirm',\n    \"jquery/ui\",\n    \"mage/decorate\",\n    'mage/cookies'\n], function($, authenticationPopup, customerData, alert, confirm){\n\n    $.widget('mage.sidebar', {\n        options: {\n            isRecursive: true,\n            minicart: {\n                maxItemsVisible: 3\n            }\n        },\n        scrollHeight: 0,\n\n        /**\n         * Create sidebar.\n         * @private\n         */\n        _create: function () {\n            this._initContent();\n        },\n\n        /**\n         * Update sidebar block.\n         */\n        update: function () {\n            $(this.options.targetElement).trigger('contentUpdated');\n            this._calcHeight();\n            this._isOverflowed();\n        },\n\n        _initContent: function() {\n            var self = this,\n                events = {};\n\n            this.element.decorate('list', this.options.isRecursive);\n\n            events['click ' + this.options.button.close] = function(event) {\n                event.stopPropagation();\n                $(self.options.targetElement).dropdownDialog(\"close\");\n            };\n            events['click ' + this.options.button.checkout] = $.proxy(function() {\n                var cart = customerData.get('cart'),\n                    customer = customerData.get('customer');\n\n                if (!customer().firstname && !cart().isGuestCheckoutAllowed) {\n                    // set URL for redirect on successful login/registration. It's postprocessed on backend.\n                    $.cookie('login_redirect', this.options.url.checkout);\n                    if (this.options.url.isRedirectRequired) {\n                        location.href = this.options.url.loginUrl;\n                    } else {\n                        authenticationPopup.showModal();\n                    }\n\n                    return false;\n                }\n                location.href = this.options.url.checkout;\n            }, this);\n            events['click ' + this.options.button.remove] =  function(event) {\n                event.stopPropagation();\n                confirm({\n                    content: self.options.confirmMessage,\n                    actions: {\n                        confirm: function () {\n                            self._removeItem($(event.currentTarget));\n                        },\n                        always: function (event) {\n                            event.stopImmediatePropagation();\n                        }\n                    }\n                });\n            };\n            events['keyup ' + this.options.item.qty] = function(event) {\n                self._showItemButton($(event.target));\n            };\n            events['click ' + this.options.item.button] = function(event) {\n                event.stopPropagation();\n                self._updateItemQty($(event.currentTarget));\n            };\n            events['focusout ' + this.options.item.qty] = function(event) {\n                self._validateQty($(event.currentTarget));\n            };\n\n            this._on(this.element, events);\n            this._calcHeight();\n            this._isOverflowed();\n        },\n\n        /**\n         * Add 'overflowed' class to minicart items wrapper element\n         *\n         * @private\n         */\n        _isOverflowed: function() {\n            var list = $(this.options.minicart.list),\n                cssOverflowClass = 'overflowed';\n\n            if (this.scrollHeight > list.innerHeight()) {\n                list.parent().addClass(cssOverflowClass);\n            } else {\n                list.parent().removeClass(cssOverflowClass);\n            }\n        },\n\n        _showItemButton: function(elem) {\n            var itemId = elem.data('cart-item');\n            var itemQty = elem.data('item-qty');\n            if (this._isValidQty(itemQty, elem.val())) {\n                $('#update-cart-item-' + itemId).show('fade', 300);\n            } else if (elem.val() == 0) {\n                this._hideItemButton(elem);\n            } else {\n                this._hideItemButton(elem);\n            }\n        },\n\n        /**\n         * @param origin - origin qty. 'data-item-qty' attribute.\n         * @param changed - new qty.\n         * @returns {boolean}\n         * @private\n         */\n        _isValidQty: function(origin, changed) {\n            return (origin != changed)\n                && (changed.length > 0)\n                && (changed - 0 == changed)\n                && (changed - 0 > 0);\n        },\n\n        /**\n         * @param {Object} elem\n         * @private\n         */\n        _validateQty: function(elem) {\n            var itemQty = elem.data('item-qty');\n\n            if (!this._isValidQty(itemQty, elem.val())) {\n                elem.val(itemQty);\n            }\n        },\n\n        _hideItemButton: function(elem) {\n            var itemId = elem.data('cart-item');\n            $('#update-cart-item-' + itemId).hide('fade', 300);\n        },\n\n        _updateItemQty: function(elem) {\n            var itemId = elem.data('cart-item');\n            this._ajax(this.options.url.update, {\n                item_id: itemId,\n                item_qty: $('#cart-item-' + itemId + '-qty').val()\n            }, elem, this._updateItemQtyAfter);\n        },\n\n        /**\n         * Update content after update qty\n         *\n         * @param elem\n         */\n        _updateItemQtyAfter: function(elem) {\n            this._hideItemButton(elem);\n        },\n\n        _removeItem: function(elem) {\n            var itemId = elem.data('cart-item');\n            this._ajax(this.options.url.remove, {\n                item_id: itemId\n            }, elem, this._removeItemAfter);\n        },\n\n        /**\n         * Update content after item remove\n         *\n         * @param elem\n         * @param response\n         * @private\n         */\n        _removeItemAfter: function(elem, response) {\n        },\n        /**\n         * @param url - ajax url\n         * @param data - post data for ajax call\n         * @param elem - element that initiated the event\n         * @param callback - callback method to execute after AJAX success\n         */\n        _ajax: function(url, data, elem, callback) {\n            $.extend(data, {\n                'form_key': $.mage.cookies.get('form_key')\n            });\n            $.ajax({\n                url: url,\n                data: data,\n                type: 'post',\n                dataType: 'json',\n                context: this,\n                beforeSend: function() {\n                    elem.attr('disabled', 'disabled');\n                },\n                complete: function() {\n                    elem.attr('disabled', null);\n                }\n            })\n                .done(function(response) {\n                    if (response.success) {\n                        callback.call(this, elem, response);\n                    } else {\n                        var msg = response.error_message;\n                        if (msg) {\n                            alert({\n                                content: msg\n                            });\n                        }\n                    }\n                })\n                .fail(function(error) {\n                    console.log(JSON.stringify(error));\n                });\n        },\n\n        /**\n         * Calculate height of minicart list\n         *\n         * @private\n         */\n        _calcHeight: function() {\n            var self = this,\n                height = 0,\n                counter = this.options.minicart.maxItemsVisible,\n                target = $(this.options.minicart.list);\n\n            self.scrollHeight = 0;\n            target.children().each(function () {\n                var outerHeight = $(this).outerHeight();\n\n                if (counter-- > 0) {\n                    height += outerHeight;\n                }\n                self.scrollHeight += outerHeight;\n            });\n\n            target.parent().height(height);\n        }\n    });\n\n    return $.mage.sidebar;\n});\n","Magento_Checkout/js/region-updater.js":"/**\n * @category    frontend Checkout region-updater\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true expr:true*/\ndefine([\n    'jquery',\n    'mage/template',\n    'underscore',\n    'jquery/ui',\n    'mage/validation'\n], function ($, mageTemplate, _) {\n    'use strict';\n\n    $.widget('mage.regionUpdater', {\n        options: {\n            regionTemplate:\n                '<option value=\"<%- data.value %>\" <% if (data.isSelected) { %>selected=\"selected\"<% } %>>' +\n                    '<%- data.title %>' +\n                '</option>',\n            isRegionRequired: true,\n            isZipRequired: true,\n            isCountryRequired: true,\n            currentRegion: null,\n            isMultipleCountriesAllowed: true\n        },\n\n        /**\n         *\n         * @private\n         */\n        _create: function () {\n            this._initCountryElement();\n\n            this.currentRegionOption = this.options.currentRegion;\n            this.regionTmpl = mageTemplate(this.options.regionTemplate);\n\n            this._updateRegion(this.element.find('option:selected').val());\n\n            $(this.options.regionListId).on('change', $.proxy(function (e) {\n                this.setOption = false;\n                this.currentRegionOption = $(e.target).val();\n            }, this));\n\n            $(this.options.regionInputId).on('focusout', $.proxy(function () {\n                this.setOption = true;\n            }, this));\n        },\n\n        /**\n         *\n         * @private\n         */\n        _initCountryElement: function () {\n\n            if (this.options.isMultipleCountriesAllowed) {\n                this.element.parents('div.field').show();\n                this.element.on('change', $.proxy(function (e) {\n                    this._updateRegion($(e.target).val());\n                }, this));\n\n                if (this.options.isCountryRequired) {\n                    this.element.addClass('required-entry');\n                    this.element.parents('div.field').addClass('required');\n                }\n            } else {\n                this.element.parents('div.field').hide();\n            }\n        },\n\n        /**\n         * Remove options from dropdown list\n         *\n         * @param {Object} selectElement - jQuery object for dropdown list\n         * @private\n         */\n        _removeSelectOptions: function (selectElement) {\n            selectElement.find('option').each(function (index) {\n                if (index) {\n                    $(this).remove();\n                }\n            });\n        },\n\n        /**\n         * Render dropdown list\n         * @param {Object} selectElement - jQuery object for dropdown list\n         * @param {String} key - region code\n         * @param {Object} value - region object\n         * @private\n         */\n        _renderSelectOption: function (selectElement, key, value) {\n            selectElement.append($.proxy(function () {\n                var name = value.name.replace(/[!\"#$%&'()*+,.\\/:;<=>?@[\\\\\\]^`{|}~]/g, '\\\\$&'),\n                    tmplData,\n                    tmpl;\n\n                if (value.code && $(name).is('span')) {\n                    key = value.code;\n                    value.name = $(name).text();\n                }\n\n                tmplData = {\n                    value: key,\n                    title: value.name,\n                    isSelected: false\n                };\n\n                if (this.options.defaultRegion === key) {\n                    tmplData.isSelected = true;\n                }\n\n                tmpl = this.regionTmpl({\n                    data: tmplData\n                });\n\n                return $(tmpl);\n            }, this));\n        },\n\n        /**\n         * Takes clearError callback function as first option\n         * If no form is passed as option, look up the closest form and call clearError method.\n         * @private\n         */\n        _clearError: function () {\n            var args = ['clearError', this.options.regionListId, this.options.regionInputId, this.options.postcodeId];\n\n            if (this.options.clearError && typeof this.options.clearError === 'function') {\n                this.options.clearError.call(this);\n            } else {\n                if (!this.options.form) {\n                    this.options.form = this.element.closest('form').length ? $(this.element.closest('form')[0]) : null;\n                }\n\n                this.options.form = $(this.options.form);\n\n                this.options.form && this.options.form.data('validator') &&\n                    this.options.form.validation.apply(this.options.form, _.compact(args));\n\n                // Clean up errors on region & zip fix\n                $(this.options.regionInputId).removeClass('mage-error').parent().find('[generated]').remove();\n                $(this.options.regionListId).removeClass('mage-error').parent().find('[generated]').remove();\n                $(this.options.postcodeId).removeClass('mage-error').parent().find('[generated]').remove();\n            }\n        },\n\n        /**\n         * Update dropdown list based on the country selected\n         *\n         * @param {String} country - 2 uppercase letter for country code\n         * @private\n         */\n        _updateRegion: function (country) {\n            // Clear validation error messages\n            var regionList = $(this.options.regionListId),\n                regionInput = $(this.options.regionInputId),\n                postcode = $(this.options.postcodeId),\n                label = regionList.parent().siblings('label'),\n                requiredLabel = regionList.parents('div.field');\n\n            this._clearError();\n            this._checkRegionRequired(country);\n\n            // Populate state/province dropdown list if available or use input box\n            if (this.options.regionJson[country]) {\n                this._removeSelectOptions(regionList);\n                $.each(this.options.regionJson[country], $.proxy(function (key, value) {\n                    this._renderSelectOption(regionList, key, value);\n                }, this));\n\n                if (this.currentRegionOption) {\n                    regionList.val(this.currentRegionOption);\n                }\n\n                if (this.setOption) {\n                    regionList.find('option').filter(function () {\n                        return this.text === regionInput.val();\n                    }).attr('selected', true);\n                }\n\n                if (this.options.isRegionRequired) {\n                    regionList.addClass('required-entry').removeAttr('disabled');\n                    requiredLabel.addClass('required');\n                } else {\n                    regionList.removeClass('required-entry validate-select').removeAttr('data-validate');\n                    requiredLabel.removeClass('required');\n\n                    if (!this.options.optionalRegionAllowed) {\n                        regionList.attr('disabled', 'disabled');\n                    }\n                }\n\n                regionList.show();\n                regionInput.hide();\n                label.attr('for', regionList.attr('id'));\n            } else {\n                if (this.options.isRegionRequired) {\n                    regionInput.addClass('required-entry').removeAttr('disabled');\n                    requiredLabel.addClass('required');\n                } else {\n                    if (!this.options.optionalRegionAllowed) {\n                        regionInput.attr('disabled', 'disabled');\n                    }\n                    requiredLabel.removeClass('required');\n                    regionInput.removeClass('required-entry');\n                }\n\n                regionList.removeClass('required-entry').hide();\n                regionInput.show();\n                label.attr('for', regionInput.attr('id'));\n            }\n\n            // If country is in optionalzip list, make postcode input not required\n            if (this.options.isZipRequired) {\n                $.inArray(country, this.options.countriesWithOptionalZip) >= 0 ?\n                    postcode.removeClass('required-entry').closest('.field').removeClass('required') :\n                    postcode.addClass('required-entry').closest('.field').addClass('required');\n            }\n\n            // Add defaultvalue attribute to state/province select element\n            regionList.attr('defaultvalue', this.options.defaultRegion);\n        },\n\n        /**\n         * Check if the selected country has a mandatory region selection\n         *\n         * @param {String} country - Code of the country - 2 uppercase letter for country code\n         * @private\n         */\n        _checkRegionRequired: function (country) {\n            var self = this;\n\n            this.options.isRegionRequired = false;\n            $.each(this.options.regionJson.config.regions_required, function (index, elem) {\n                if (elem === country) {\n                    self.options.isRegionRequired = true;\n                }\n            });\n        }\n    });\n\n    return $.mage.regionUpdater;\n});\n","Magento_Checkout/js/proceed-to-checkout.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n        'jquery',\n        'Magento_Customer/js/model/authentication-popup',\n        'Magento_Customer/js/customer-data'\n    ],\n    function ($, authenticationPopup, customerData) {\n        'use strict';\n\n        return function (config, element) {\n            $(element).click(function (event) {\n                var cart = customerData.get('cart'),\n                    customer = customerData.get('customer');\n\n                event.preventDefault();\n\n                if (!customer().firstname && !cart().isGuestCheckoutAllowed) {\n                    authenticationPopup.showModal();\n\n                    return false;\n                }\n                location.href = config.checkoutUrl;\n            });\n\n        };\n    }\n);\n","Magento_Checkout/js/shopping-cart.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    \"jquery\",\n    \"jquery/ui\"\n], function($){\n    \"use strict\";\n    \n    $.widget('mage.shoppingCart', {\n        _create: function() {\n            $(this.options.emptyCartButton).on('click', $.proxy(function() {\n                $(this.options.emptyCartButton).attr('name', 'update_cart_action_temp');\n                $(this.options.updateCartActionContainer)\n                    .attr('name', 'update_cart_action').attr('value', 'empty_cart');\n            }, this));\n            var items = $.find(\"[data-role='cart-item-qty']\");\n            for (var i = 0; i < items.length; i++) {\n                $(items[i]).on('keypress', $.proxy(function(event) {\n                    var keyCode = (event.keyCode ? event.keyCode : event.which);\n                    if(keyCode == 13) {\n                        $(this.options.emptyCartButton).attr('name', 'update_cart_action_temp');\n                        $(this.options.updateCartActionContainer)\n                            .attr('name', 'update_cart_action').attr('value', 'update_qty');\n\n                    }\n                }, this));\n            }\n            $(this.options.continueShoppingButton).on('click', $.proxy(function() {\n                location.href = this.options.continueShoppingUrl;\n            }, this));\n        }\n    });\n\n    return $.mage.shoppingCart;\n});\n","Magento_Checkout/js/checkout-loader.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jslint browser: true*/\n(function () {\n    'use strict';\n\n    var checkInterval;\n\n    checkInterval = setInterval(function () {\n        var checkoutContainer = document.getElementById('checkoutSteps'),\n            steps,\n            loaderContainer;\n\n        //Return if checkout steps container not loaded\n        if (!checkoutContainer) {\n            return;\n        }\n\n        //Checkout steps\n        steps = checkoutContainer.getElementsByTagName('li');\n\n        //Remove loader and clear update interval if content loaded\n        if (steps && steps.length > 0) {\n            clearInterval(checkInterval);\n            loaderContainer = document.getElementById('checkout-loader');\n\n            if (loaderContainer && loaderContainer.parentNode) {\n                loaderContainer.parentNode.removeChild(loaderContainer);\n            }\n        }\n\n    }, 100);\n})();\n","Magento_Checkout/js/model/postcode-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(['mageUtils'], function (utils) {\n    'use strict';\n    return {\n        validatedPostCodeExample: [],\n        validate: function(postCode, countryId) {\n            var patterns = window.checkoutConfig.postCodes[countryId];\n            this.validatedPostCodeExample = [];\n\n            if (!utils.isEmpty(postCode) && !utils.isEmpty(patterns)) {\n                for (var pattern in patterns) {\n                    if (patterns.hasOwnProperty(pattern)) {\n                        this.validatedPostCodeExample.push(patterns[pattern]['example']);\n                        var regex = new RegExp(patterns[pattern]['pattern']);\n                        if (regex.test(postCode)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }\n            return true;\n        }\n    }\n});\n","Magento_Checkout/js/model/shipping-rates-validation-rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    ['jquery'],\n    function ($) {\n        \"use strict\";\n        var ratesRules = {};\n        var checkoutConfig = window.checkoutConfig;\n        return {\n            registerRules: function(carrier, rules) {\n                if (checkoutConfig.activeCarriers.indexOf(carrier) != -1) {\n                    ratesRules[carrier] = rules.getRules();\n                }\n            },\n            getRules: function() {\n                return ratesRules;\n            },\n            getObservableFields: function() {\n                var self = this;\n                var observableFields = [];\n                $.each(self.getRules(), function(carrier, fields) {\n                    $.each(fields, function(field, rules) {\n                        if (observableFields.indexOf(field) == -1) {\n                            observableFields.push(field);\n                        }\n                    });\n                });\n                return observableFields;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-rates-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        'ko',\n        './shipping-rates-validation-rules',\n        '../model/address-converter',\n        '../action/select-shipping-address',\n        './postcode-validator',\n        'mage/translate',\n        'uiRegistry',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (\n        $,\n        ko,\n        shippingRatesValidationRules,\n        addressConverter,\n        selectShippingAddress,\n        postcodeValidator,\n        $t,\n        uiRegistry,\n        quote\n    ) {\n        'use strict';\n\n        var checkoutConfig = window.checkoutConfig,\n            validators = [],\n            observedElements = [],\n            postcodeElement = null,\n            postcodeElementName = 'postcode';\n\n        return {\n            validateAddressTimeout: 0,\n            validateDelay: 2000,\n\n            /**\n             * @param {String} carrier\n             * @param {Object} validator\n             */\n            registerValidator: function (carrier, validator) {\n                if (checkoutConfig.activeCarriers.indexOf(carrier) !== -1) {\n                    validators.push(validator);\n                }\n            },\n\n            /**\n             * @param {Object} address\n             * @return {Boolean}\n             */\n            validateAddressData: function (address) {\n                return validators.some(function(validator) {\n                    return validator.validate(address);\n                });\n            },\n\n            /**\n             * Perform postponed binding for fieldset elements\n             *\n             * @param {String} formPath\n             */\n            initFields: function (formPath) {\n                var self = this,\n                    elements = shippingRatesValidationRules.getObservableFields();\n\n                if ($.inArray(postcodeElementName, elements) === -1) {\n                    // Add postcode field to observables if not exist for zip code validation support\n                    elements.push(postcodeElementName);\n                }\n\n                $.each(elements, function (index, field) {\n                    uiRegistry.async(formPath + '.' + field)(self.doElementBinding.bind(self));\n                });\n            },\n\n            /**\n             * Bind shipping rates request to form element\n             *\n             * @param {Object} element\n             * @param {Boolean} force\n             * @param {Number} delay\n             */\n            doElementBinding: function (element, force, delay) {\n                var observableFields = shippingRatesValidationRules.getObservableFields();\n\n                if (element && (observableFields.indexOf(element.index) !== -1 || force)) {\n                    if (element.index !== postcodeElementName) {\n                        this.bindHandler(element, delay);\n                    }\n                }\n\n                if (element.index === postcodeElementName) {\n                    this.bindHandler(element, delay);\n                    postcodeElement = element;\n                }\n            },\n\n            /**\n             * @param {*} elements\n             * @param {Boolean} force\n             * @param {Number} delay\n             */\n            bindChangeHandlers: function (elements, force, delay) {\n                var self = this;\n\n                $.each(elements, function (index, elem) {\n                    self.doElementBinding(elem, force, delay);\n                });\n            },\n\n            /**\n             * @param {Object} element\n             * @param {Number} delay\n             */\n            bindHandler: function (element, delay) {\n                var self = this;\n\n                delay = typeof delay === \"undefined\" ? self.validateDelay : delay;\n\n                if (element.component.indexOf('/group') !== -1) {\n                    $.each(element.elems(), function (index, elem) {\n                        self.bindHandler(elem);\n                    });\n                } else {\n                    element.on('value', function () {\n                        clearTimeout(self.validateAddressTimeout);\n                        self.validateAddressTimeout = setTimeout(function () {\n                            if (self.postcodeValidation()) {\n                                self.validateFields();\n                            }\n                        }, delay);\n                    });\n                    observedElements.push(element);\n                }\n            },\n\n            /**\n             * @return {*}\n             */\n            postcodeValidation: function () {\n                var countryId = $('select[name=\"country_id\"]').val(),\n                    validationResult = postcodeValidator.validate(postcodeElement.value(), countryId),\n                    warnMessage;\n\n                if (postcodeElement == null || postcodeElement.value() == null) {\n                    return true;\n                }\n\n                postcodeElement.warn(null);\n\n                if (!validationResult) {\n                    warnMessage = $t('Provided Zip/Postal Code seems to be invalid.');\n                    if (postcodeValidator.validatedPostCodeExample.length) {\n                        warnMessage += $t(' Example: ') + postcodeValidator.validatedPostCodeExample.join('; ') + '. ';\n                    }\n                    warnMessage += $t('If you believe it is the right one you can ignore this notice.');\n                    postcodeElement.warn(warnMessage);\n                }\n\n                return validationResult;\n            },\n\n            /**\n             * Convert form data to quote address and validate fields for shipping rates\n             */\n            validateFields: function () {\n                var addressFlat = addressConverter.formDataProviderToFlatData(\n                        this.collectObservedData(),\n                        'shippingAddress'\n                    ),\n                    address;\n\n                if (this.validateAddressData(addressFlat)) {\n                    addressFlat = $.extend(true, {}, quote.shippingAddress(), addressFlat);\n                    address = addressConverter.formAddressDataToQuoteAddress(addressFlat);\n                    selectShippingAddress(address);\n                }\n            },\n\n            /**\n             * Collect observed fields data to object\n             *\n             * @returns {*}\n             */\n            collectObservedData: function () {\n                var observedValues = {};\n\n                $.each(observedElements, function (index, field) {\n                    observedValues[field.dataScope] = field.value();\n                });\n\n                return observedValues;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/totals.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (ko, quote) {\n        'use strict';\n\n        var quoteItems = ko.observable(quote.totals().items);\n\n        quote.totals.subscribe(function (newValue) {\n            quoteItems(newValue.items);\n        });\n\n        return {\n            totals: quote.totals,\n            isLoading: ko.observable(false),\n\n            /**\n             * @return {Function}\n             */\n            getItems: function () {\n                return quoteItems;\n            },\n\n            /**\n             * @param code\n             * @return {*}\n             */\n            getSegment: function (code) {\n                if (!this.totals()) {\n                    return null;\n                }\n\n                for (var i in this.totals().total_segments) {\n                    var total = this.totals().total_segments[i];\n\n                    if (total.code == code) {\n                        return total;\n                    }\n                }\n\n                return null;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-rate-registry.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [],\n    function() {\n        \"use strict\";\n        var cache = [];\n        return {\n            get: function(addressKey) {\n                if (cache[addressKey]) {\n                    return cache[addressKey];\n                }\n                return false;\n            },\n            set: function(addressKey, data) {\n                cache[addressKey] = data;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/resource-url-manager.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/model/url-builder',\n        'mageUtils'\n    ],\n    function(customer, urlBuilder, utils) {\n        \"use strict\";\n        return {\n            getUrlForTotalsEstimationForNewAddress: function(quote) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {cartId: quote.getQuoteId()} : {};\n                var urls = {\n                    'guest': '/guest-carts/:cartId/totals-information',\n                    'customer': '/carts/mine/totals-information'\n                };\n                return this.getUrl(urls, params);\n            },\n\n            getUrlForEstimationShippingMethodsForNewAddress: function(quote) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quote.getQuoteId()} : {};\n                var urls = {\n                    'guest': '/guest-carts/:quoteId/estimate-shipping-methods',\n                    'customer': '/carts/mine/estimate-shipping-methods'\n                };\n                return this.getUrl(urls, params);\n            },\n\n            getUrlForEstimationShippingMethodsByAddressId: function(quote) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quote.getQuoteId()} : {};\n                var urls = {\n                    'default': '/carts/mine/estimate-shipping-methods-by-address-id'\n                };\n                return this.getUrl(urls, params);\n            },\n\n            getApplyCouponUrl: function(couponCode, quoteId) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quoteId} : {};\n                var urls = {\n                    'guest': '/guest-carts/' + quoteId + '/coupons/' + couponCode,\n                    'customer': '/carts/mine/coupons/' + couponCode\n                };\n                return this.getUrl(urls, params);\n            },\n\n            getCancelCouponUrl: function(quoteId) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quoteId} : {};\n                var urls = {\n                    'guest': '/guest-carts/' + quoteId + '/coupons/',\n                    'customer': '/carts/mine/coupons/'\n                };\n                return this.getUrl(urls, params);\n            },\n\n            getUrlForCartTotals: function(quote) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {quoteId: quote.getQuoteId()} : {};\n                var urls = {\n                    'guest': '/guest-carts/:quoteId/totals',\n                    'customer': '/carts/mine/totals'\n                };\n                return this.getUrl(urls, params);\n            },\n\n            getUrlForSetShippingInformation: function(quote) {\n                var params = (this.getCheckoutMethod() == 'guest') ? {cartId: quote.getQuoteId()} : {};\n                var urls = {\n                    'guest': '/guest-carts/:cartId/shipping-information',\n                    'customer': '/carts/mine/shipping-information'\n                };\n                return this.getUrl(urls, params);\n            },\n\n            /** Get url for service */\n            getUrl: function(urls, urlParams) {\n                var url;\n\n                if (utils.isEmpty(urls)) {\n                    return 'Provided service call does not exist.';\n                }\n\n                if (!utils.isEmpty(urls['default'])) {\n                    url = urls['default'];\n                } else {\n                    url = urls[this.getCheckoutMethod()];\n                }\n                return urlBuilder.createUrl(url, urlParams);\n            },\n\n            getCheckoutMethod: function() {\n                return customer.isLoggedIn() ? 'customer' : 'guest';\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/error-processor.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'mage/url',\n        'Magento_Ui/js/model/messageList'\n    ],\n    function (url, globalMessageList) {\n        'use strict';\n\n        return {\n            process: function (response, messageContainer) {\n                messageContainer = messageContainer || globalMessageList;\n                if (response.status == 401) {\n                    window.location.replace(url.build('customer/account/login/'));\n                } else {\n                    var error = JSON.parse(response.responseText);\n                    messageContainer.addErrorMessage(error);\n                }\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/address-converter.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/model/new-customer-address',\n        'Magento_Customer/js/customer-data',\n        'mage/utils/objects'\n    ],\n    function($, address, customerData, mageUtils) {\n        'use strict';\n        var countryData = customerData.get('directory-data');\n\n        return {\n            /**\n             * Convert address form data to Address object\n             * @param {Object} formData\n             * @returns {Object}\n             */\n            formAddressDataToQuoteAddress: function(formData) {\n                // clone address form data to new object\n                var addressData = $.extend(true, {}, formData),\n                    region,\n                    regionName = addressData.region;\n                if (mageUtils.isObject(addressData.street)) {\n                    addressData.street = this.objectToArray(addressData.street);\n                }\n\n                addressData.region = {\n                    region_id: addressData.region_id,\n                    region_code: addressData.region_code,\n                    region: regionName\n                };\n\n                if (addressData.region_id\n                    && countryData()[addressData.country_id]\n                    && countryData()[addressData.country_id]['regions']\n                ) {\n                    region = countryData()[addressData.country_id]['regions'][addressData.region_id];\n                    if (region) {\n                        addressData.region.region_id = addressData['region_id'];\n                        addressData.region.region_code = region['code'];\n                        addressData.region.region = region['name'];\n                    }\n                }\n                delete addressData.region_id;\n\n                return address(addressData);\n            },\n\n            /**\n             * Convert Address object to address form data\n             * @param {Object} address\n             * @returns {Object}\n             */\n            quoteAddressToFormAddressData: function (address) {\n                var self = this;\n                var output = {};\n\n                if ($.isArray(address.street)) {\n                    var streetObject = {};\n                    address.street.forEach(function(value, index) {\n                        streetObject[index] = value;\n                    });\n                    address.street = streetObject;\n                }\n\n                $.each(address, function (key) {\n                    if (address.hasOwnProperty(key) && !$.isFunction(address[key])) {\n                        output[self.toUnderscore(key)] = address[key];\n                    }\n                });\n                return output;\n            },\n\n            toUnderscore: function (string) {\n                return string.replace(/([A-Z])/g, function($1){return \"_\"+$1.toLowerCase();});\n            },\n\n            formDataProviderToFlatData: function(formProviderData, formIndex) {\n                var addressData = {};\n                $.each(formProviderData, function(path, value) {\n                    var pathComponents = path.split('.');\n                    pathComponents.splice(pathComponents.indexOf(formIndex), 1);\n                    pathComponents.reverse();\n                    var dataObject = {};\n                    $.each(pathComponents, function(index, pathPart) {\n                        if (index == 0) {\n                            dataObject[pathPart] = value;\n                        } else {\n                            var parent = {};\n                            parent[pathPart] = dataObject;\n                            dataObject = parent;\n                        }\n                    });\n                    $.extend(true, addressData, dataObject);\n                });\n                return addressData;\n            },\n\n            /**\n             * Convert object to array\n             * @param {Object} object\n             * @returns {Array}\n             */\n            objectToArray: function (object) {\n                var convertedArray = [];\n                $.each(object, function (key) {\n                    return object[key].length ? convertedArray.push(object[key]) : false;\n                });\n\n                return convertedArray.slice(0);\n            },\n\n            addressToEstimationAddress: function (address) {\n                var estimatedAddressData = {\n                    'street': address.street,\n                    'city': address.city,\n                    'region_id': address.regionId,\n                    'region': address.region,\n                    'country_id': address.countryId,\n                    'postcode': address.postcode,\n                    'email': address.email,\n                    'customer_id': address.customerId,\n                    'firstname': address.firstname,\n                    'lastname': address.lastname,\n                    'middlename': address.middlename,\n                    'prefix': address.prefix,\n                    'suffix': address.suffix,\n                    'vat_id': address.vatId,\n                    'company': address.company,\n                    'telephone': address.telephone,\n                    'fax': address.fax,\n                    'custom_attributes': address.customAttributes\n\n                };\n               return this.formAddressDataToQuoteAddress(estimatedAddressData);\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-service.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/model/checkout-data-resolver'\n    ],\n    function (ko, checkoutDataResolver) {\n        \"use strict\";\n        var shippingRates = ko.observableArray([]);\n        return {\n            isLoading: ko.observable(false),\n            /**\n             * Set shipping rates\n             *\n             * @param ratesData\n             */\n            setShippingRates: function(ratesData) {\n                shippingRates(ratesData);\n                shippingRates.valueHasMutated();\n                checkoutDataResolver.resolveShippingRates(ratesData);\n            },\n\n            /**\n             * Get shipping rates\n             *\n             * @returns {*}\n             */\n            getShippingRates: function() {\n                return shippingRates;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-rate-service.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/shipping-rate-processor/new-address',\n        'Magento_Checkout/js/model/shipping-rate-processor/customer-address'\n    ],\n    function(quote, defaultProcessor, customerAddressProcessor) {\n        \"use strict\";\n        var processors = [];\n        processors['default'] =  defaultProcessor;\n        processors['customer-address'] = customerAddressProcessor;\n\n        quote.shippingAddress.subscribe(function () {\n            var type = quote.shippingAddress().getType();\n            if (processors[type]) {\n                processors[type].getRates(quote.shippingAddress());\n            } else {\n                processors['default'].getRates(quote.shippingAddress());\n            }\n        });\n\n        return {\n            registerProcessor: function(type, processor) {\n                processors[type] = processor;\n            }\n        }\n    }\n);\n","Magento_Checkout/js/model/sidebar.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [],\n    function() {\n        'use strict';\n        return {\n            popUp: false,\n            setPopup: function(popUp) {\n                this.popUp = popUp;\n            },\n            show: function() {\n                if (this.popUp) {\n                    this.popUp.modal('openModal');\n                }\n            },\n            hide: function() {\n                if (this.popUp) {\n                    this.popUp.modal('closeModal');\n                }\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/payment-service.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'underscore',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/payment/method-list',\n        'Magento_Checkout/js/action/select-payment-method'\n    ],\n    function (_, quote, methodList, selectPaymentMethod) {\n        'use strict';\n        var freeMethodCode = 'free';\n\n        return {\n            isFreeAvailable: false,\n            /**\n             * Populate the list of payment methods\n             * @param {Array} methods\n             */\n            setPaymentMethods: function (methods) {\n                var self = this,\n                    freeMethod,\n                    filteredMethods,\n                    methodIsAvailable;\n\n                freeMethod = _.find(methods, function (method) {\n                    return method.method === freeMethodCode;\n                });\n                this.isFreeAvailable = freeMethod ? true : false;\n\n                if (self.isFreeAvailable && freeMethod && quote.totals().grand_total <= 0) {\n                    methods.splice(0, methods.length, freeMethod);\n                    selectPaymentMethod(freeMethod);\n                }\n                filteredMethods = _.without(methods, freeMethod);\n\n                if (filteredMethods.length === 1) {\n                    selectPaymentMethod(filteredMethods[0]);\n                } else if (quote.paymentMethod()) {\n                    methodIsAvailable = methods.some(function (item) {\n                        return item.method === quote.paymentMethod().method;\n                    });\n                    //Unset selected payment method if not available\n                    if (!methodIsAvailable) {\n                        selectPaymentMethod(null);\n                    }\n                }\n                methodList(methods);\n            },\n            /**\n             * Get the list of available payment methods.\n             * @returns {Array}\n             */\n            getAvailablePaymentMethods: function () {\n                var methods = [],\n                    self = this;\n                _.each(methodList(), function (method) {\n                    if (self.isFreeAvailable && (\n                        quote.totals().grand_total <= 0 && method.method === freeMethodCode ||\n                        quote.totals().grand_total > 0 && method.method !== freeMethodCode\n                        ) || !self.isFreeAvailable\n                    ) {\n                        methods.push(method);\n                    }\n                });\n\n                return methods;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/authentication-messages.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'Magento_Ui/js/model/messages'\n], function (ko, Messages) {\n    'use strict';\n\n    return new Messages();\n});\n\n","Magento_Checkout/js/model/step-navigator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'ko'\n    ],\n    function($, ko) {\n        var steps = ko.observableArray();\n        return {\n            steps: steps,\n            stepCodes: [],\n            validCodes: [],\n\n            handleHash: function () {\n                var hashString = window.location.hash.replace('#', '');\n                if (hashString == '') {\n                    return false;\n                }\n\n                if (-1 == $.inArray(hashString, this.validCodes)) {\n                    window.location.href = window.checkoutConfig.pageNotFoundUrl;\n                    return false;\n                }\n\n                var isRequestedStepVisible = steps.sort(this.sortItems).some(function(element) {\n                    return (element.code == hashString || element.alias == hashString) && element.isVisible();\n                });\n\n                //if requested step is visible, then we don't need to load step data from server\n                if (isRequestedStepVisible) {\n                    return false;\n                }\n\n                steps.sort(this.sortItems).forEach(function(element) {\n                    if (element.code == hashString || element.alias == hashString) {\n                        element.navigate();\n                    } else {\n                        element.isVisible(false);\n                    }\n\n                });\n                return false;\n            },\n\n            registerStep: function(code, alias, title, isVisible, navigate, sortOrder) {\n                if (-1 != $.inArray(code, this.validCodes)) {\n                    throw new DOMException('Step code [' + code + '] already registered in step navigator');\n                }\n                if (alias != null) {\n                    if (-1 != $.inArray(alias, this.validCodes)) {\n                        throw new DOMException('Step code [' + alias + '] already registered in step navigator');\n                    }\n                    this.validCodes.push(alias);\n                }\n                this.validCodes.push(code);\n                steps.push({\n                    code: code,\n                    alias: alias != null ? alias : code,\n                    title : title,\n                    isVisible: isVisible,\n                    navigate: navigate,\n                    sortOrder: sortOrder\n                });\n                this.stepCodes.push(code);\n                var hash = window.location.hash.replace('#', '');\n                if (hash != '' && hash != code) {\n                    //Force hiding of not active step\n                    isVisible(false);\n                }\n            },\n\n            sortItems: function(itemOne, itemTwo) {\n                return itemOne.sortOrder > itemTwo.sortOrder ? 1 : -1\n            },\n\n            getActiveItemIndex: function() {\n                var activeIndex = 0;\n                steps.sort(this.sortItems).forEach(function(element, index) {\n                    if (element.isVisible()) {\n                        activeIndex = index;\n                    }\n                });\n                return activeIndex;\n            },\n\n            isProcessed: function(code) {\n                var activeItemIndex = this.getActiveItemIndex();\n                var sortedItems = steps.sort(this.sortItems);\n                var requestedItemIndex = -1;\n                sortedItems.forEach(function(element, index) {\n                    if (element.code == code) {\n                        requestedItemIndex = index;\n                    }\n                });\n                return activeItemIndex > requestedItemIndex;\n            },\n\n            navigateTo: function(code, scrollToElementId) {\n                var sortedItems = steps.sort(this.sortItems);\n                var bodyElem = $.browser.safari || $.browser.chrome ? $(\"body\") : $(\"html\");\n                scrollToElementId = scrollToElementId || null;\n\n                if (!this.isProcessed(code)) {\n                    return;\n                }\n                sortedItems.forEach(function(element) {\n                    if (element.code == code) {\n                        element.isVisible(true);\n                        bodyElem.animate({scrollTop: $('#' + code).offset().top}, 0, function () {\n                            window.location = window.checkoutConfig.checkoutUrl + \"#\" + code;\n                        });\n                        if (scrollToElementId && $('#' + scrollToElementId).length) {\n                            bodyElem.animate({scrollTop: $('#' + scrollToElementId).offset().top}, 0);\n                        }\n                    } else {\n                        element.isVisible(false);\n                    }\n\n                });\n            },\n\n            next: function() {\n                var activeIndex = 0;\n                steps.sort(this.sortItems).forEach(function(element, index) {\n                    if (element.isVisible()) {\n                        element.isVisible(false);\n                        activeIndex = index;\n                    }\n                });\n                if (steps().length > activeIndex + 1) {\n                    var code = steps()[activeIndex + 1].code;\n                    steps()[activeIndex + 1].isVisible(true);\n                    window.location = window.checkoutConfig.checkoutUrl + \"#\" + code;\n                    document.body.scrollTop = document.documentElement.scrollTop = 0;\n                }\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/full-screen-loader.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    ['jquery'],\n    function ($) {\n        'use strict';\n\n        var containerId = '#checkout';\n\n        return {\n\n            /**\n             * Start full page loader action\n             */\n            startLoader: function () {\n                $(containerId).trigger('processStart');\n            },\n\n            /**\n             * Stop full page loader action\n             */\n            stopLoader: function () {\n                $(containerId).trigger('processStop');\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-save-processor.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/model/shipping-save-processor/default'\n    ],\n    function(defaultProcessor) {\n        'use strict';\n        var processors = [];\n        processors['default'] =  defaultProcessor;\n\n        return {\n            registerProcessor: function(type, processor) {\n                processors[type] = processor;\n            },\n            saveShippingInformation: function (type) {\n                var rates = [];\n                if (processors[type]) {\n                    rates = processors[type].saveShippingInformation();\n                } else {\n                    rates = processors['default'].saveShippingInformation();\n                }\n                return rates;\n            }\n        }\n    }\n);\n","Magento_Checkout/js/model/checkout-data-resolver.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global alert*/\n/**\n * Checkout adapter for customer data storage\n */\ndefine([\n    'Magento_Customer/js/model/address-list',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/action/create-shipping-address',\n    'Magento_Checkout/js/action/select-shipping-address',\n    'Magento_Checkout/js/action/select-shipping-method',\n    'Magento_Checkout/js/model/payment-service',\n    'Magento_Checkout/js/action/select-payment-method',\n    'Magento_Checkout/js/model/address-converter',\n    'Magento_Checkout/js/action/select-billing-address',\n    'Magento_Checkout/js/action/create-billing-address',\n    'underscore'\n], function (\n    addressList,\n    quote,\n    checkoutData,\n    createShippingAddress,\n    selectShippingAddress,\n    selectShippingMethodAction,\n    paymentService,\n    selectPaymentMethodAction,\n    addressConverter,\n    selectBillingAddress,\n    createBillingAddress,\n    _\n) {\n    'use strict';\n\n    return {\n        resolveEstimationAddress: function () {\n            if (checkoutData.getShippingAddressFromData()) {\n                var address = addressConverter.formAddressDataToQuoteAddress(checkoutData.getShippingAddressFromData());\n                selectShippingAddress(address);\n            } else {\n                this.resolveShippingAddress();\n            }\n            if (quote.isVirtual()) {\n               if  (checkoutData.getBillingAddressFromData()) {\n                    address = addressConverter.formAddressDataToQuoteAddress(checkoutData.getBillingAddressFromData());\n                    selectBillingAddress(address);\n                } else {\n                   this.resolveBillingAddress();\n               }\n            }\n\n        },\n\n        resolveShippingAddress: function () {\n            var newCustomerShippingAddress = checkoutData.getNewCustomerShippingAddress();\n            if (newCustomerShippingAddress) {\n                createShippingAddress(newCustomerShippingAddress);\n            }\n            this.applyShippingAddress();\n        },\n\n        applyShippingAddress: function (isEstimatedAddress) {\n            if (addressList().length == 0) {\n                var address = addressConverter.formAddressDataToQuoteAddress(checkoutData.getShippingAddressFromData());\n                selectShippingAddress(address);\n            }\n            var shippingAddress = quote.shippingAddress(),\n                isConvertAddress = isEstimatedAddress || false,\n                addressData;\n            if (!shippingAddress) {\n                var isShippingAddressInitialized = addressList.some(function (address) {\n                    if (checkoutData.getSelectedShippingAddress() == address.getKey()) {\n                        addressData = isConvertAddress\n                            ? addressConverter.addressToEstimationAddress(address)\n                            : address;\n                        selectShippingAddress(addressData);\n                        return true;\n                    }\n                    return false;\n                });\n\n                if (!isShippingAddressInitialized) {\n                    isShippingAddressInitialized = addressList.some(function (address) {\n                        if (address.isDefaultShipping()) {\n                            addressData = isConvertAddress\n                                ? addressConverter.addressToEstimationAddress(address)\n                                : address;\n                            selectShippingAddress(addressData);\n                            return true;\n                        }\n                        return false;\n                    });\n                }\n                if (!isShippingAddressInitialized && addressList().length == 1) {\n                    addressData = isConvertAddress\n                        ? addressConverter.addressToEstimationAddress(addressList()[0])\n                        : addressList()[0];\n                    selectShippingAddress(addressData);\n                }\n            }\n        },\n\n        resolveShippingRates: function (ratesData) {\n            var selectedShippingRate = checkoutData.getSelectedShippingRate();\n            var availableRate = false;\n\n            if (ratesData.length == 1) {\n                //set shipping rate if we have only one available shipping rate\n                selectShippingMethodAction(ratesData[0]);\n                return;\n            }\n\n            if (quote.shippingMethod()) {\n                availableRate = _.find(ratesData, function (rate) {\n                    return rate.carrier_code == quote.shippingMethod().carrier_code\n                        && rate.method_code == quote.shippingMethod().method_code;\n                });\n            }\n\n            if (!availableRate && selectedShippingRate) {\n                availableRate = _.find(ratesData, function (rate) {\n                    return rate.carrier_code + \"_\" + rate.method_code === selectedShippingRate;\n                });\n            }\n\n            if (!availableRate && window.checkoutConfig.selectedShippingMethod) {\n                availableRate = window.checkoutConfig.selectedShippingMethod;\n                selectShippingMethodAction(window.checkoutConfig.selectedShippingMethod);\n            }\n\n            //Unset selected shipping method if not available\n            if (!availableRate) {\n                selectShippingMethodAction(null);\n            } else {\n                selectShippingMethodAction(availableRate);\n            }\n        },\n\n        resolvePaymentMethod: function () {\n            var availablePaymentMethods = paymentService.getAvailablePaymentMethods();\n            var selectedPaymentMethod = checkoutData.getSelectedPaymentMethod();\n            if (selectedPaymentMethod) {\n                availablePaymentMethods.some(function (payment) {\n                    if (payment.method == selectedPaymentMethod) {\n                        selectPaymentMethodAction(payment);\n                    }\n                });\n            }\n        },\n\n        resolveBillingAddress: function () {\n            var selectedBillingAddress = checkoutData.getSelectedBillingAddress(),\n                newCustomerBillingAddressData = checkoutData.getNewCustomerBillingAddress(),\n                shippingAddress = quote.shippingAddress();\n\n            if (selectedBillingAddress) {\n                if (selectedBillingAddress == 'new-customer-address' && newCustomerBillingAddressData) {\n                    selectBillingAddress(createBillingAddress(newCustomerBillingAddressData));\n                } else {\n                    addressList.some(function (address) {\n                        if (selectedBillingAddress == address.getKey()) {\n                            selectBillingAddress(address);\n                        }\n                    });\n                }\n            } else {\n                this.applyBillingAddress()\n            }\n        },\n        applyBillingAddress: function () {\n            if (quote.billingAddress()) {\n                selectBillingAddress(quote.billingAddress());\n                return;\n            }\n            var shippingAddress = quote.shippingAddress();\n            if (shippingAddress\n                && shippingAddress.canUseForBilling()\n                && (shippingAddress.isDefaultShipping() || !quote.isVirtual())) {\n                //set billing address same as shipping by default if it is not empty\n                selectBillingAddress(quote.shippingAddress());\n            }\n        }\n    }\n});\n","Magento_Checkout/js/model/customer-email-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Customer/js/model/customer',\n        'mage/validation'\n    ],\n    function ($, customer) {\n        'use strict';\n\n        return {\n\n            /**\n             * Validate checkout agreements\n             *\n             * @returns {Boolean}\n             */\n            validate: function () {\n                var emailValidationResult = customer.isLoggedIn(),\n                    loginFormSelector = 'form[data-role=email-with-possible-login]';\n\n                if (!customer.isLoggedIn()) {\n                    $(loginFormSelector).validation();\n                    emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());\n                }\n\n                return emailValidationResult;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/quote.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    ['ko'],\n    function (ko) {\n        'use strict';\n        var billingAddress = ko.observable(null);\n        var shippingAddress = ko.observable(null);\n        var shippingMethod = ko.observable(null);\n        var paymentMethod = ko.observable(null);\n        var quoteData = window.checkoutConfig.quoteData;\n        var basePriceFormat = window.checkoutConfig.basePriceFormat;\n        var priceFormat = window.checkoutConfig.priceFormat;\n        var storeCode = window.checkoutConfig.storeCode;\n        var totalsData = window.checkoutConfig.totalsData;\n        var totals = ko.observable(totalsData);\n        var collectedTotals = ko.observable({});\n        return {\n            totals: totals,\n            shippingAddress: shippingAddress,\n            shippingMethod: shippingMethod,\n            billingAddress: billingAddress,\n            paymentMethod: paymentMethod,\n            guestEmail: null,\n\n            getQuoteId: function() {\n                return quoteData.entity_id;\n            },\n            isVirtual: function() {\n                return !!Number(quoteData.is_virtual);\n            },\n            getPriceFormat: function() {\n                return priceFormat;\n            },\n            getBasePriceFormat: function() {\n                return basePriceFormat;\n            },\n            getItems: function() {\n                return window.checkoutConfig.quoteItemData;\n            },\n            getTotals: function() {\n                return totals;\n            },\n            setTotals: function(totalsData) {\n                if (_.isObject(totalsData.extension_attributes)) {\n                    _.each(totalsData.extension_attributes, function(element, index) {\n                        totalsData[index] = element;\n                    });\n                }\n                totals(totalsData);\n                this.setCollectedTotals('subtotal_with_discount', parseFloat(totalsData.subtotal_with_discount));\n            },\n            setPaymentMethod: function(paymentMethodCode) {\n                paymentMethod(paymentMethodCode);\n            },\n            getPaymentMethod: function() {\n                return paymentMethod;\n            },\n            getStoreCode: function() {\n                return storeCode;\n            },\n            setCollectedTotals: function(code, value) {\n                var totals = collectedTotals();\n                totals[code] = value;\n                collectedTotals(totals);\n            },\n            getCalculatedTotal: function() {\n                var total = 0.;\n                _.each(collectedTotals(), function(value) {\n                    total += value;\n                });\n                return total;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/new-customer-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine([], function () {\n    /**\n     * @param {Object} addressData\n     * Returns new address object\n     */\n    return function (addressData) {\n        var identifier = Date.now();\n\n        return {\n            email: addressData.email,\n            countryId: addressData['country_id'] || addressData.countryId || window.checkoutConfig.defaultCountryId,\n            regionId: (addressData.region && addressData.region.region_id) ?\n                addressData.region.region_id\n                : window.checkoutConfig.defaultRegionId,\n            regionCode: (addressData.region) ? addressData.region.region_code : null,\n            region: (addressData.region) ? addressData.region.region : null,\n            customerId: addressData.customer_id,\n            street: addressData.street,\n            company: addressData.company,\n            telephone: addressData.telephone,\n            fax: addressData.fax,\n            postcode: addressData.postcode ? addressData.postcode : window.checkoutConfig.defaultPostcode,\n            city: addressData.city,\n            firstname: addressData.firstname,\n            lastname: addressData.lastname,\n            middlename: addressData.middlename,\n            prefix: addressData.prefix,\n            suffix: addressData.suffix,\n            vatId: addressData.vat_id,\n            saveInAddressBook: addressData.save_in_address_book,\n            customAttributes: addressData.custom_attributes,\n            isDefaultShipping: function () {\n                return addressData.default_shipping;\n            },\n            isDefaultBilling: function () {\n                return addressData.default_billing;\n            },\n            getType: function () {\n                return 'new-customer-address';\n            },\n            getKey: function () {\n                return this.getType();\n            },\n            getCacheKey: function () {\n                return this.getType() + identifier;\n            },\n            isEditable: function () {\n                return true;\n            },\n            canUseForBilling: function () {\n                return true;\n            }\n        }\n    }\n});\n","Magento_Checkout/js/model/url-builder.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    ['jquery'],\n    function($) {\n        return {\n            method: \"rest\",\n            storeCode: window.checkoutConfig.storeCode,\n            version: 'V1',\n            serviceUrl: ':method/:storeCode/:version',\n\n            createUrl: function(url, params) {\n                var completeUrl = this.serviceUrl + url;\n                return this.bindParams(completeUrl, params);\n            },\n            bindParams: function(url, params) {\n                params.method = this.method;\n                params.storeCode = this.storeCode;\n                params.version = this.version;\n\n                var urlParts = url.split(\"/\");\n                urlParts = urlParts.filter(Boolean);\n\n                $.each(urlParts, function(key, part) {\n                    part = part.replace(':', '');\n                    if (params[part] != undefined) {\n                        urlParts[key] = params[part];\n                    }\n                });\n                return urlParts.join('/');\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-address/form-popup-state.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'ko'\n    ],\n    function(ko) {\n        'use strict';\n        return {\n            isVisible: ko.observable(false)\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-rate-processor/customer-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/model/resource-url-manager',\n        'Magento_Checkout/js/model/quote',\n        'mage/storage',\n        'Magento_Checkout/js/model/shipping-service',\n        'Magento_Checkout/js/model/shipping-rate-registry',\n        'Magento_Checkout/js/model/error-processor'\n    ],\n    function (resourceUrlManager, quote, storage, shippingService, rateRegistry, errorProcessor) {\n        \"use strict\";\n        return {\n            getRates: function(address) {\n                shippingService.isLoading(true);\n                var cache = rateRegistry.get(address.getKey());\n                if (cache) {\n                    shippingService.setShippingRates(cache);\n                    shippingService.isLoading(false);\n                } else {\n                    storage.post(\n                        resourceUrlManager.getUrlForEstimationShippingMethodsByAddressId(),\n                        JSON.stringify({\n                            addressId: address.customerAddressId\n                        }),\n                        false\n                    ).done(\n                        function(result) {\n                            rateRegistry.set(address.getKey(), result);\n                            shippingService.setShippingRates(result);\n                        }\n\n                    ).fail(\n                        function(response) {\n                            shippingService.setShippingRates([]);\n                            errorProcessor.process(response);\n                        }\n                    ).always(\n                        function () {\n                            shippingService.isLoading(false);\n                        }\n                    );\n                }\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/shipping-rate-processor/new-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Checkout/js/model/resource-url-manager',\n        'Magento_Checkout/js/model/quote',\n        'mage/storage',\n        'Magento_Checkout/js/model/shipping-service',\n        'Magento_Checkout/js/model/shipping-rate-registry',\n        'Magento_Checkout/js/model/error-processor'\n    ],\n    function (resourceUrlManager, quote, storage, shippingService, rateRegistry, errorProcessor) {\n        'use strict';\n\n        return {\n            /**\n             * Get shipping rates for specified address.\n             * @param {Object} address\n             */\n            getRates: function (address) {\n                shippingService.isLoading(true);\n                var cache = rateRegistry.get(address.getCacheKey()),\n                    serviceUrl = resourceUrlManager.getUrlForEstimationShippingMethodsForNewAddress(quote),\n                    payload = JSON.stringify({\n                            address: {\n                                'street': address.street,\n                                'city': address.city,\n                                'region_id': address.regionId,\n                                'region': address.region,\n                                'country_id': address.countryId,\n                                'postcode': address.postcode,\n                                'email': address.email,\n                                'customer_id': address.customerId,\n                                'firstname': address.firstname,\n                                'lastname': address.lastname,\n                                'middlename': address.middlename,\n                                'prefix': address.prefix,\n                                'suffix': address.suffix,\n                                'vat_id': address.vatId,\n                                'company': address.company,\n                                'telephone': address.telephone,\n                                'fax': address.fax,\n                                'custom_attributes': address.customAttributes,\n                                'save_in_address_book': address.saveInAddressBook\n                            }\n                        }\n                    );\n\n                if (cache) {\n                    shippingService.setShippingRates(cache);\n                    shippingService.isLoading(false);\n                } else {\n                    storage.post(\n                        serviceUrl, payload, false\n                    ).done(\n                        function (result) {\n                            rateRegistry.set(address.getCacheKey(), result);\n                            shippingService.setShippingRates(result);\n                        }\n                    ).fail(\n                        function (response) {\n                            shippingService.setShippingRates([]);\n                            errorProcessor.process(response);\n                        }\n                    ).always(\n                        function () {\n                            shippingService.isLoading(false);\n                        }\n                    );\n                }\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/cart/estimate-service.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/shipping-rate-processor/new-address',\n        'Magento_Checkout/js/model/cart/totals-processor/default'\n    ],\n    function (quote, defaultProcessor, totalsDefaultProvider) {\n        'use strict';\n\n        var rateProcessors = [],\n            totalsProcessors = [];\n\n        quote.shippingAddress.subscribe(function () {\n            var type = quote.shippingAddress().getType();\n            if (quote.isVirtual()) {\n                // update totals block when estimated address was set\n                totalsProcessors['default'] = totalsDefaultProvider;\n                totalsProcessors[type]\n                    ? totalsProcessors[type].estimateTotals(quote.shippingAddress())\n                    : totalsProcessors['default'].estimateTotals(quote.shippingAddress());\n            } else {\n                // update rates list when estimated address was set\n                rateProcessors['default'] = defaultProcessor;\n                rateProcessors[type]\n                    ? rateProcessors[type].getRates(quote.shippingAddress())\n                    : rateProcessors['default'].getRates(quote.shippingAddress());\n\n            }\n        });\n        quote.shippingMethod.subscribe(function () {\n            totalsDefaultProvider.estimateTotals(quote.shippingAddress());\n        });\n        quote.billingAddress.subscribe(function () {\n            var type = quote.billingAddress().getType();\n            if (quote.isVirtual()) {\n                // update totals block when estimated address was set\n                totalsProcessors['default'] = totalsDefaultProvider;\n                totalsProcessors[type]\n                    ? totalsProcessors[type].estimateTotals(quote.billingAddress())\n                    : totalsProcessors['default'].estimateTotals(quote.billingAddress());\n            }\n        });\n    }\n);\n","Magento_Checkout/js/model/cart/totals-processor/default.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'underscore',\n        'Magento_Checkout/js/model/resource-url-manager',\n        'Magento_Checkout/js/model/quote',\n        'mage/storage',\n        'Magento_Checkout/js/model/totals',\n        'Magento_Checkout/js/model/error-processor'\n    ],\n    function (_, resourceUrlManager, quote, storage, totalsService, errorProcessor) {\n        'use strict';\n\n        return {\n            requiredFields: ['countryId', 'region', 'regionId', 'postcode'],\n\n            /**\n             * Get shipping rates for specified address.\n             */\n            estimateTotals: function (address) {\n                var serviceUrl, payload;\n                totalsService.isLoading(true);\n                serviceUrl = resourceUrlManager.getUrlForTotalsEstimationForNewAddress(quote),\n                    payload = {\n                        addressInformation: {\n                            address: _.pick(address, this.requiredFields)\n                        }\n                    };\n\n                if (quote.shippingMethod() && quote.shippingMethod()['method_code']) {\n                    payload.addressInformation['shipping_method_code'] = quote.shippingMethod()['method_code'];\n                    payload.addressInformation['shipping_carrier_code'] = quote.shippingMethod()['carrier_code'];\n                }\n\n                storage.post(\n                    serviceUrl, JSON.stringify(payload), false\n                ).done(\n                    function (result) {\n                        quote.setTotals(result);\n                    }\n                ).fail(\n                    function (response) {\n                        errorProcessor.process(response);\n                    }\n                ).always(\n                    function () {\n                        totalsService.isLoading(false);\n                    }\n                );\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/payment/method-converter.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'underscore'\n    ],\n    function (_) {\n        'use strict';\n\n        return function (methods) {\n            _.each(methods, function(method) {\n                if (method.hasOwnProperty('code')) {\n                    method.method = method.code;\n                    delete method.code;\n                }\n            });\n\n            return methods;\n        };\n    }\n);\n","Magento_Checkout/js/model/payment/renderer-list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'ko'\n    ],\n    function(ko) {\n        'use strict';\n        return ko.observableArray([]);\n    }\n);\n","Magento_Checkout/js/model/payment/additional-validators.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [],\n    function() {\n        'use strict';\n        var validators = [];\n        return {\n            /**\n             * Register unique validator\n             *\n             * @param validator\n             */\n            registerValidator: function(validator) {\n                validators.push(validator);\n            },\n\n            /**\n             * Returns array of registered validators\n             *\n             * @returns {Array}\n             */\n            getValidators: function() {\n                return validators;\n            },\n\n            /**\n             * Process validators\n             *\n             * @returns {boolean}\n             */\n            validate: function() {\n                var validationResult = true;\n\n                if (validators.length <= 0) {\n                    return validationResult;\n                }\n\n                validators.forEach(function(item) {\n                    if (item.validate() == false) {\n                        validationResult = false;\n                        return false;\n                    }\n                });\n                return validationResult;\n            }\n        };\n    }\n);\n","Magento_Checkout/js/model/payment/method-list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko'\n    ],\n    function(ko) {\n        'use strict';\n        return ko.observableArray([]);\n    }\n);\n","Magento_Checkout/js/model/shipping-save-processor/default.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define,alert*/\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/resource-url-manager',\n        'mage/storage',\n        'Magento_Checkout/js/model/payment-service',\n        'Magento_Checkout/js/model/payment/method-converter',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/action/select-billing-address'\n    ],\n    function (\n        ko,\n        quote,\n        resourceUrlManager,\n        storage,\n        paymentService,\n        methodConverter,\n        errorProcessor,\n        fullScreenLoader,\n        selectBillingAddressAction\n    ) {\n        'use strict';\n\n        return {\n            saveShippingInformation: function () {\n                var payload;\n\n                if (!quote.billingAddress()) {\n                    selectBillingAddressAction(quote.shippingAddress());\n                }\n\n                payload = {\n                    addressInformation: {\n                        shipping_address: quote.shippingAddress(),\n                        billing_address: quote.billingAddress(),\n                        shipping_method_code: quote.shippingMethod().method_code,\n                        shipping_carrier_code: quote.shippingMethod().carrier_code\n                    }\n                };\n\n                fullScreenLoader.startLoader();\n\n                return storage.post(\n                    resourceUrlManager.getUrlForSetShippingInformation(quote),\n                    JSON.stringify(payload)\n                ).done(\n                    function (response) {\n                        quote.setTotals(response.totals);\n                        paymentService.setPaymentMethods(methodConverter(response.payment_methods));\n                        fullScreenLoader.stopLoader();\n                    }\n                ).fail(\n                    function (response) {\n                        errorProcessor.process(response);\n                        fullScreenLoader.stopLoader();\n                    }\n                );\n            }\n        };\n    }\n);\n","Magento_Checkout/js/action/get-totals.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\n/*global define,alert*/\ndefine(\n    [\n        'jquery',\n        '../model/quote',\n        'Magento_Checkout/js/model/resource-url-manager',\n        'Magento_Checkout/js/model/error-processor',\n        'mage/storage',\n        'Magento_Checkout/js/model/totals'\n    ],\n    function ($, quote, resourceUrlManager, errorProcessor, storage, totals) {\n        \"use strict\";\n        return function (callbacks, deferred) {\n            deferred = deferred || $.Deferred();\n            totals.isLoading(true);\n            return storage.get(\n                resourceUrlManager.getUrlForCartTotals(quote),\n                false\n            ).done(\n                function (response) {\n                    totals.isLoading(false);\n                    var proceed = true;\n                    $.each(callbacks, function(index, callback) {\n                        proceed = proceed && callback();\n                    });\n                    if (proceed) {\n                        quote.setTotals(response);\n                        deferred.resolve();\n                    }\n                }\n            ).error(\n                function (response) {\n                    totals.isLoading(false);\n                    deferred.reject();\n                    errorProcessor.process(response);\n                }\n            ).always(\n                function () {\n                    totals.isLoading(false);\n                }\n            );\n\n        };\n    }\n);\n","Magento_Checkout/js/action/create-shipping-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Customer/js/model/address-list',\n        'Magento_Checkout/js/model/address-converter'\n    ],\n    function(addressList, addressConverter) {\n        \"use strict\";\n        return function(addressData) {\n            var address = addressConverter.formAddressDataToQuoteAddress(addressData);\n            var isAddressUpdated = addressList().some(function(currentAddress, index, addresses) {\n                if (currentAddress.getKey() == address.getKey()) {\n                    addresses[index] = address;\n                    return true;\n                }\n                return false;\n            });\n            if (!isAddressUpdated) {\n                addressList.push(address);\n            } else {\n                addressList.valueHasMutated();\n            }\n            return address;\n        };\n    }\n);\n","Magento_Checkout/js/action/create-billing-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/model/address-converter'\n    ],\n    function(addressConverter) {\n        \"use strict\";\n        return function(addressData) {\n            return addressConverter.formAddressDataToQuoteAddress(addressData);\n        };\n    }\n);\n","Magento_Checkout/js/action/select-payment-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        '../model/quote'\n    ],\n    function(quote) {\n        'use strict';\n        return function (paymentMethod) {\n            quote.paymentMethod(paymentMethod);\n        }\n    }\n);\n","Magento_Checkout/js/action/set-billing-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/url-builder',\n        'mage/storage',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/model/full-screen-loader',\n        'Magento_Checkout/js/action/get-payment-information'\n    ],\n    function ($,\n              quote,\n              urlBuilder,\n              storage,\n              errorProcessor,\n              customer,\n              fullScreenLoader,\n              getPaymentInformationAction\n    ) {\n        'use strict';\n\n        return function (messageContainer) {\n            var serviceUrl,\n                payload;\n\n            /**\n             * Checkout for guest and registered customer.\n             */\n            if (!customer.isLoggedIn()) {\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/billing-address', {\n                    cartId: quote.getQuoteId()\n                });\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    address: quote.billingAddress()\n                };\n            } else {\n                serviceUrl = urlBuilder.createUrl('/carts/mine/billing-address', {});\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    address: quote.billingAddress()\n                };\n            }\n\n            fullScreenLoader.startLoader();\n\n            return storage.post(\n                serviceUrl, JSON.stringify(payload)\n            ).done(\n                function () {\n                    var deferred = $.Deferred();\n\n                    getPaymentInformationAction(deferred);\n                    $.when(deferred).done(function () {\n                        fullScreenLoader.stopLoader();\n                    });\n                }\n            ).fail(\n                function (response) {\n                    errorProcessor.process(response, messageContainer);\n                    fullScreenLoader.stopLoader();\n                }\n            );\n        };\n    }\n);\n","Magento_Checkout/js/action/set-shipping-information.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define,alert*/\ndefine(\n    [\n        '../model/quote',\n        'Magento_Checkout/js/model/shipping-save-processor'\n    ],\n    function (quote, shippingSaveProcessor) {\n        'use strict';\n        return function () {\n            return shippingSaveProcessor.saveShippingInformation(quote.shippingAddress().getType());\n        }\n    }\n);\n","Magento_Checkout/js/action/get-payment-information.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/url-builder',\n        'mage/storage',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/model/payment/method-converter',\n        'Magento_Checkout/js/model/payment-service'\n    ],\n    function ($, quote, urlBuilder, storage, errorProcessor, customer, methodConverter, paymentService) {\n        'use strict';\n\n        return function (deferred, messageContainer) {\n            var serviceUrl;\n\n            deferred = deferred || $.Deferred();\n            /**\n             * Checkout for guest and registered customer.\n             */\n            if (!customer.isLoggedIn()) {\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/payment-information', {\n                    cartId: quote.getQuoteId()\n                });\n            } else {\n                serviceUrl = urlBuilder.createUrl('/carts/mine/payment-information', {});\n            }\n\n            return storage.get(\n                serviceUrl, false\n            ).done(\n                function (response) {\n                    quote.setTotals(response.totals);\n                    paymentService.setPaymentMethods(methodConverter(response.payment_methods));\n                    deferred.resolve();\n                }\n            ).fail(\n                function (response) {\n                    errorProcessor.process(response, messageContainer);\n                    deferred.reject();\n                }\n            );\n        };\n    }\n);\n","Magento_Checkout/js/action/place-order.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/url-builder',\n        'mage/storage',\n        'mage/url',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function (quote, urlBuilder, storage, url, errorProcessor, customer, fullScreenLoader) {\n        'use strict';\n\n        return function (paymentData, redirectOnSuccess, messageContainer) {\n            var serviceUrl,\n                payload;\n\n            redirectOnSuccess = redirectOnSuccess !== false;\n\n            /** Checkout for guest and registered customer. */\n            if (!customer.isLoggedIn()) {\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:quoteId/payment-information', {\n                    quoteId: quote.getQuoteId()\n                });\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    email: quote.guestEmail,\n                    paymentMethod: paymentData,\n                    billingAddress: quote.billingAddress()\n                };\n            } else {\n                serviceUrl = urlBuilder.createUrl('/carts/mine/payment-information', {});\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    paymentMethod: paymentData,\n                    billingAddress: quote.billingAddress()\n                };\n            }\n\n            fullScreenLoader.startLoader();\n\n            return storage.post(\n                serviceUrl, JSON.stringify(payload)\n            ).done(\n                function () {\n                    if (redirectOnSuccess) {\n                        window.location.replace(url.build('checkout/onepage/success/'));\n                    }\n                }\n            ).fail(\n                function (response) {\n                    errorProcessor.process(response, messageContainer);\n                    fullScreenLoader.stopLoader();\n                }\n            );\n        };\n    }\n);\n","Magento_Checkout/js/action/select-shipping-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/model/quote'\n    ],\n    function(quote) {\n        'use strict';\n        return function(shippingAddress) {\n            quote.shippingAddress(shippingAddress);\n        };\n    }\n);\n","Magento_Checkout/js/action/select-billing-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        '../model/quote'\n    ],\n    function ($, quote) {\n        'use strict';\n\n        return function (billingAddress) {\n            var address = null;\n\n            if (quote.shippingAddress() && billingAddress.getCacheKey() == quote.shippingAddress().getCacheKey()) {\n                address = $.extend({}, billingAddress);\n                address.saveInAddressBook = false;\n            } else {\n                address = billingAddress;\n            }\n            quote.billingAddress(address);\n        };\n    }\n);\n","Magento_Checkout/js/action/select-shipping-method.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define,alert*/\ndefine(\n    [\n        '../model/quote'\n    ],\n    function (quote) {\n        \"use strict\";\n        return function (shippingMethod) {\n            quote.shippingMethod(shippingMethod)\n        }\n    }\n);\n","Magento_Checkout/js/action/set-payment-information.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/url-builder',\n        'mage/storage',\n        'Magento_Checkout/js/model/error-processor',\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/action/get-totals',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function (quote, urlBuilder, storage, errorProcessor, customer, getTotalsAction, fullScreenLoader) {\n        'use strict';\n\n        return function (messageContainer, paymentData) {\n            var serviceUrl,\n                payload;\n\n            /**\n             * Checkout for guest and registered customer.\n             */\n            if (!customer.isLoggedIn()) {\n                serviceUrl = urlBuilder.createUrl('/guest-carts/:cartId/set-payment-information', {\n                    cartId: quote.getQuoteId()\n                });\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    email: quote.guestEmail,\n                    paymentMethod: paymentData,\n                    billingAddress: quote.billingAddress()\n                };\n            } else {\n                serviceUrl = urlBuilder.createUrl('/carts/mine/set-payment-information', {});\n                payload = {\n                    cartId: quote.getQuoteId(),\n                    paymentMethod: paymentData,\n                    billingAddress: quote.billingAddress()\n                };\n            }\n\n            fullScreenLoader.startLoader();\n\n            return storage.post(\n                serviceUrl, JSON.stringify(payload)\n            ).fail(\n                function (response) {\n                    errorProcessor.process(response, messageContainer);\n                }\n            ).always(\n                function () {\n                    fullScreenLoader.stopLoader();\n                }\n            );\n        };\n    }\n);\n","Magento_Checkout/js/view/registration.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    ['jquery', 'uiComponent'],\n    function ($, Component) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/registration',\n                accountCreated: false,\n                creationStarted: false\n            },\n            /** Initialize observable properties */\n            initObservable: function () {\n                this._super()\n                    .observe('accountCreated')\n                    .observe('creationStarted');\n                return this;\n            },\n            getEmailAddress: function() {\n                return this.email;\n            },\n            createAccount: function() {\n                this.creationStarted(true);\n                $.post(this.registrationUrl).done(\n                    function() {\n                        this.accountCreated(true)\n                    }.bind(this)\n                );\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/estimation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Catalog/js/price-utils',\n        'Magento_Checkout/js/model/totals',\n        'Magento_Checkout/js/model/sidebar'\n    ],\n    function (Component, quote, priceUtils, totals, sidebarModel) {\n        'use strict';\n        return Component.extend({\n            isLoading: totals.isLoading,\n            getQuantity: function() {\n                if (totals.totals()) {\n                    return parseFloat(totals.totals().items_qty);\n                }\n                return 0;\n            },\n            getPureValue: function() {\n                if (totals.totals()) {\n                    return parseFloat(totals.getSegment('grand_total').value);\n                }\n                return 0;\n            },\n            showSidebar: function() {\n                sidebarModel.show();\n            },\n            getFormattedPrice: function (price) {\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\n            },\n            getValue: function () {\n                return this.getFormattedPrice(this.getPureValue());\n            }\n        });\n    }\n);\n\n","Magento_Checkout/js/view/progress-bar.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        \"underscore\",\n        'ko',\n        'uiComponent',\n        'Magento_Checkout/js/model/step-navigator',\n        'jquery/jquery.hashchange'\n    ],\n    function ($, _, ko, Component, stepNavigator) {\n        var steps = stepNavigator.steps;\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/progress-bar',\n                visible: true\n            },\n            steps: steps,\n\n            initialize: function() {\n                this._super();\n                $(window).hashchange(_.bind(stepNavigator.handleHash, stepNavigator));\n                stepNavigator.handleHash();\n            },\n\n            sortItems: function(itemOne, itemTwo) {\n                return stepNavigator.sortItems(itemOne, itemTwo);\n            },\n\n            navigateTo: function(step) {\n                stepNavigator.navigateTo(step.code);\n            },\n\n            isProcessed: function(item) {\n                return stepNavigator.isProcessed(item.code);\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/authentication.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Ui/js/form/form',\n        'Magento_Customer/js/action/login',\n        'Magento_Customer/js/model/customer',\n        'mage/validation',\n        'Magento_Checkout/js/model/authentication-messages',\n        'Magento_Checkout/js/model/full-screen-loader'\n    ],\n    function($, Component, loginAction, customer, validation, messageContainer, fullScreenLoader) {\n        'use strict';\n        var checkoutConfig = window.checkoutConfig;\n\n        return Component.extend({\n            isGuestCheckoutAllowed: checkoutConfig.isGuestCheckoutAllowed,\n            isCustomerLoginRequired: checkoutConfig.isCustomerLoginRequired,\n            registerUrl: checkoutConfig.registerUrl,\n            forgotPasswordUrl: checkoutConfig.forgotPasswordUrl,\n            autocomplete: checkoutConfig.autocomplete,\n            defaults: {\n                template: 'Magento_Checkout/authentication'\n            },\n\n            /** Is login form enabled for current customer */\n            isActive: function() {\n                return !customer.isLoggedIn();\n            },\n\n            /** Provide login action */\n            login: function(loginForm) {\n                var loginData = {},\n                    formDataArray = $(loginForm).serializeArray();\n\n                formDataArray.forEach(function (entry) {\n                    loginData[entry.name] = entry.value;\n                });\n\n                if($(loginForm).validation()\n                    && $(loginForm).validation('isValid')\n                ) {\n                    fullScreenLoader.startLoader();\n                    loginAction(loginData, checkoutConfig.checkoutUrl, undefined, messageContainer).always(function() {\n                        fullScreenLoader.stopLoader();\n                    });\n                }\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/shipping-information.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'uiComponent',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/step-navigator',\n        'Magento_Checkout/js/model/sidebar'\n    ],\n    function($, Component, quote, stepNavigator, sidebarModel) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/shipping-information'\n            },\n\n            isVisible: function() {\n                return !quote.isVirtual() && stepNavigator.isProcessed('shipping');\n            },\n\n            getShippingMethodTitle: function() {\n                var shippingMethod = quote.shippingMethod();\n                return shippingMethod ? shippingMethod.carrier_title + \" - \" + shippingMethod.method_title : '';\n            },\n\n            back: function() {\n                sidebarModel.hide();\n                stepNavigator.navigateTo('shipping');\n            },\n\n            backToShippingMethod: function() {\n                sidebarModel.hide();\n                stepNavigator.navigateTo('shipping', 'opc-shipping_method');\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/payment.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        \"underscore\",\n        'uiComponent',\n        'ko',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/step-navigator',\n        'Magento_Checkout/js/model/payment-service',\n        'Magento_Checkout/js/model/payment/method-converter',\n        'Magento_Checkout/js/action/get-payment-information',\n        'Magento_Checkout/js/model/checkout-data-resolver',\n        'mage/translate',\n    ],\n    function (\n        $,\n        _,\n        Component,\n        ko,\n        quote,\n        stepNavigator,\n        paymentService,\n        methodConverter,\n        getPaymentInformation,\n        checkoutDataResolver,\n        $t\n    ) {\n        'use strict';\n\n        /** Set payment methods to collection */\n        paymentService.setPaymentMethods(methodConverter(window.checkoutConfig.paymentMethods));\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/payment',\n                activeMethod: ''\n            },\n            isVisible: ko.observable(quote.isVirtual()),\n            quoteIsVirtual: quote.isVirtual(),\n            isPaymentMethodsAvailable: ko.computed(function () {\n                return paymentService.getAvailablePaymentMethods().length > 0;\n            }),\n\n            initialize: function () {\n                this._super();\n                checkoutDataResolver.resolvePaymentMethod();\n                stepNavigator.registerStep(\n                    'payment',\n                    null,\n                    $t('Review & Payments'),\n                    this.isVisible,\n                    _.bind(this.navigate, this),\n                    20\n                );\n                return this;\n            },\n\n            navigate: function () {\n                var self = this;\n                getPaymentInformation().done(function () {\n                    self.isVisible(true);\n                });\n            },\n\n            getFormKey: function() {\n                return window.checkoutConfig.formKey;\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/minicart.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data',\n    'jquery',\n    'ko',\n    'sidebar',\n    'mage/translate'\n], function (Component, customerData, $, ko) {\n    'use strict';\n\n    var sidebarInitialized = false,\n        addToCartCalls = 0,\n        miniCart;\n\n    miniCart = $('[data-block=\\'minicart\\']');\n    miniCart.on('dropdowndialogopen', function () {\n        initSidebar();\n    });\n\n    /**\n     * @return {Boolean}\n     */\n    function initSidebar() {\n        if (miniCart.data('mageSidebar')) {\n            miniCart.sidebar('update');\n        }\n\n        if (!$('[data-role=product-item]').length) {\n            return false;\n        }\n        miniCart.trigger('contentUpdated');\n\n        if (sidebarInitialized) {\n            return false;\n        }\n        sidebarInitialized = true;\n        miniCart.sidebar({\n            'targetElement': 'div.block.block-minicart',\n            'url': {\n                'checkout': window.checkout.checkoutUrl,\n                'update': window.checkout.updateItemQtyUrl,\n                'remove': window.checkout.removeItemUrl,\n                'loginUrl': window.checkout.customerLoginUrl,\n                'isRedirectRequired': window.checkout.isRedirectRequired\n            },\n            'button': {\n                'checkout': '#top-cart-btn-checkout',\n                'remove': '#mini-cart a.action.delete',\n                'close': '#btn-minicart-close'\n            },\n            'showcart': {\n                'parent': 'span.counter',\n                'qty': 'span.counter-number',\n                'label': 'span.counter-label'\n            },\n            'minicart': {\n                'list': '#mini-cart',\n                'content': '#minicart-content-wrapper',\n                'qty': 'div.items-total',\n                'subtotal': 'div.subtotal span.price',\n                'maxItemsVisible': window.checkout.minicartMaxItemsVisible\n            },\n            'item': {\n                'qty': ':input.cart-item-qty',\n                'button': ':button.update-cart-item'\n            },\n            'confirmMessage': $.mage.__('Are you sure you would like to remove this item from the shopping cart?')\n        });\n    }\n\n    return Component.extend({\n        shoppingCartUrl: window.checkout.shoppingCartUrl,\n        cart: {},\n\n        /**\n         * @override\n         */\n        initialize: function () {\n            var self = this,\n                cartData = customerData.get('cart');\n\n            this.update(cartData());\n            cartData.subscribe(function (updatedCart) {\n                addToCartCalls--;\n                this.isLoading(addToCartCalls > 0);\n                sidebarInitialized = false;\n                this.update(updatedCart);\n                initSidebar();\n            }, this);\n            $('[data-block=\"minicart\"]').on('contentLoading', function (event) {\n                addToCartCalls++;\n                self.isLoading(true);\n            });\n\n            if (cartData.website_id !== window.checkout.websiteId) {\n                customerData.reload(['cart'], false);\n            }\n\n            return this._super();\n        },\n        isLoading: ko.observable(false),\n        initSidebar: initSidebar,\n\n        /**\n         * Close mini shopping cart.\n         */\n        closeMinicart: function () {\n            $('[data-block=\"minicart\"]').find('[data-role=\"dropdownDialog\"]').dropdownDialog('close');\n        },\n\n        /**\n         * @return {Boolean}\n         */\n        closeSidebar: function () {\n            var minicart = $('[data-block=\"minicart\"]');\n            minicart.on('click', '[data-action=\"close\"]', function (event) {\n                event.stopPropagation();\n                minicart.find('[data-role=\"dropdownDialog\"]').dropdownDialog('close');\n            });\n\n            return true;\n        },\n\n        /**\n         * @param {String} productType\n         * @return {*|String}\n         */\n        getItemRenderer: function (productType) {\n            return this.itemRenderer[productType] || 'defaultRenderer';\n        },\n\n        /**\n         * Update mini shopping cart content.\n         *\n         * @param {Object} updatedCart\n         * @returns void\n         */\n        update: function (updatedCart) {\n            _.each(updatedCart, function (value, key) {\n                if (!this.cart.hasOwnProperty(key)) {\n                    this.cart[key] = ko.observable();\n                }\n                this.cart[key](value);\n            }, this);\n        },\n\n        /**\n         * Get cart param by name.\n         * @param {String} name\n         * @returns {*}\n         */\n        getCartParam: function (name) {\n            if (!_.isUndefined(name)) {\n                if (!this.cart.hasOwnProperty(name)) {\n                    this.cart[name] = ko.observable();\n                }\n            }\n\n            return this.cart[name]();\n        }\n    });\n});\n","Magento_Checkout/js/view/beforePlaceOrder.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    ['uiComponent'],\n    function (Component) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                displayArea: 'beforePlaceOrder'\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/sidebar.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'ko',\n        'jquery',\n        'Magento_Checkout/js/model/sidebar'\n    ],\n    function(Component, ko, $, sidebarModel) {\n        'use strict';\n        return Component.extend({\n            setModalElement: function(element) {\n                sidebarModel.setPopup($(element));\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/authentication-messages.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/view/messages',\n    'Magento_Checkout/js/model/authentication-messages'\n], function (Component, messageContainer) {\n    'use strict';\n\n    return Component.extend({\n\n        initialize: function (config) {\n            return this._super(config, messageContainer);\n        }\n    });\n});\n","Magento_Checkout/js/view/billing-address.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true*/\n/*global define*/\ndefine(\n    [\n        'ko',\n        'underscore',\n        'Magento_Ui/js/form/form',\n        'Magento_Customer/js/model/customer',\n        'Magento_Customer/js/model/address-list',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/action/create-billing-address',\n        'Magento_Checkout/js/action/select-billing-address',\n        'Magento_Checkout/js/checkout-data',\n        'Magento_Checkout/js/model/checkout-data-resolver',\n        'Magento_Customer/js/customer-data',\n        'Magento_Checkout/js/action/set-billing-address',\n        'Magento_Ui/js/model/messageList',\n        'mage/translate'\n    ],\n    function (\n        ko,\n        _,\n        Component,\n        customer,\n        addressList,\n        quote,\n        createBillingAddress,\n        selectBillingAddress,\n        checkoutData,\n        checkoutDataResolver,\n        customerData,\n        setBillingAddressAction,\n        globalMessageList,\n        $t\n    ) {\n        'use strict';\n\n        var lastSelectedBillingAddress = null,\n            newAddressOption = {\n                /**\n                 * Get new address label\n                 * @returns {String}\n                 */\n                getAddressInline: function () {\n                    return $t('New Address');\n                },\n                customerAddressId: null\n            },\n            countryData = customerData.get('directory-data'),\n            addressOptions = addressList().filter(function (address) {\n                return address.getType() == 'customer-address';\n            });\n\n        addressOptions.push(newAddressOption);\n\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/billing-address'\n            },\n            currentBillingAddress: quote.billingAddress,\n            addressOptions: addressOptions,\n            customerHasAddresses: addressOptions.length > 1,\n\n            /**\n             * Init component\n             */\n            initialize: function () {\n                this._super();\n                quote.paymentMethod.subscribe(function () {\n                    checkoutDataResolver.resolveBillingAddress();\n                }, this);\n            },\n\n            /**\n             * @return {exports.initObservable}\n             */\n            initObservable: function () {\n                this._super()\n                    .observe({\n                        selectedAddress: null,\n                        isAddressDetailsVisible: quote.billingAddress() != null,\n                        isAddressFormVisible: !customer.isLoggedIn() || addressOptions.length == 1,\n                        isAddressSameAsShipping: false,\n                        saveInAddressBook: 1\n                    });\n\n                quote.billingAddress.subscribe(function (newAddress) {\n                    if (quote.isVirtual()) {\n                        this.isAddressSameAsShipping(false);\n                    } else {\n                        this.isAddressSameAsShipping(\n                            newAddress != null &&\n                            newAddress.getCacheKey() == quote.shippingAddress().getCacheKey()\n                        );\n                    }\n\n                    if (newAddress != null && newAddress.saveInAddressBook !== undefined) {\n                        this.saveInAddressBook(newAddress.saveInAddressBook);\n                    } else {\n                        this.saveInAddressBook(1);\n                    }\n                    this.isAddressDetailsVisible(true);\n                }, this);\n\n                return this;\n            },\n\n            canUseShippingAddress: ko.computed(function () {\n                return !quote.isVirtual() && quote.shippingAddress() && quote.shippingAddress().canUseForBilling();\n            }),\n\n            /**\n             * @param {Object} address\n             * @return {*}\n             */\n            addressOptionsText: function (address) {\n                return address.getAddressInline();\n            },\n\n            /**\n             * @return {Boolean}\n             */\n            useShippingAddress: function () {\n                if (this.isAddressSameAsShipping()) {\n                    selectBillingAddress(quote.shippingAddress());\n\n                    this.updateAddresses();\n                    this.isAddressDetailsVisible(true);\n                } else {\n                    lastSelectedBillingAddress = quote.billingAddress();\n                    quote.billingAddress(null);\n                    this.isAddressDetailsVisible(false);\n                }\n                checkoutData.setSelectedBillingAddress(null);\n\n                return true;\n            },\n\n            /**\n             * Update address action\n             */\n            updateAddress: function () {\n                if (this.selectedAddress() && this.selectedAddress() != newAddressOption) {\n                    selectBillingAddress(this.selectedAddress());\n                    checkoutData.setSelectedBillingAddress(this.selectedAddress().getKey());\n                } else {\n                    this.source.set('params.invalid', false);\n                    this.source.trigger(this.dataScopePrefix + '.data.validate');\n\n                    if (this.source.get(this.dataScopePrefix + '.custom_attributes')) {\n                        this.source.trigger(this.dataScopePrefix + '.custom_attributes.data.validate');\n                    }\n\n                    if (!this.source.get('params.invalid')) {\n                        var addressData = this.source.get(this.dataScopePrefix),\n                            newBillingAddress;\n\n                        if (customer.isLoggedIn() && !this.customerHasAddresses) {\n                            this.saveInAddressBook(1);\n                        }\n                        addressData['save_in_address_book'] = this.saveInAddressBook() ? 1 : 0;\n                        newBillingAddress = createBillingAddress(addressData);\n\n                        // New address must be selected as a billing address\n                        selectBillingAddress(newBillingAddress);\n                        checkoutData.setSelectedBillingAddress(newBillingAddress.getKey());\n                        checkoutData.setNewCustomerBillingAddress(addressData);\n                    }\n                }\n                this.updateAddresses();\n            },\n\n            /**\n             * Edit address action\n             */\n            editAddress: function () {\n                lastSelectedBillingAddress = quote.billingAddress();\n                quote.billingAddress(null);\n                this.isAddressDetailsVisible(false);\n            },\n\n            /**\n             * Cancel address edit action\n             */\n            cancelAddressEdit: function () {\n                this.restoreBillingAddress();\n\n                if (quote.billingAddress()) {\n                    // restore 'Same As Shipping' checkbox state\n                    this.isAddressSameAsShipping(\n                        quote.billingAddress() != null &&\n                        quote.billingAddress().getCacheKey() == quote.shippingAddress().getCacheKey() &&\n                        !quote.isVirtual()\n                    );\n                    this.isAddressDetailsVisible(true);\n                }\n            },\n\n            /**\n             * Restore billing address\n             */\n            restoreBillingAddress: function () {\n                if (lastSelectedBillingAddress != null) {\n                    selectBillingAddress(lastSelectedBillingAddress);\n                }\n            },\n\n            /**\n             * @param {Object} address\n             */\n            onAddressChange: function (address) {\n                this.isAddressFormVisible(address == newAddressOption);\n            },\n\n            /**\n             * @param {int} countryId\n             * @return {*}\n             */\n            getCountryName: function (countryId) {\n                return countryData()[countryId] != undefined ? countryData()[countryId].name : '';\n            },\n\n            /**\n             * Trigger action to update shipping and billing addresses\n             */\n            updateAddresses: function () {\n                if (window.checkoutConfig.reloadOnBillingAddress ||\n                    !window.checkoutConfig.displayBillingOnPaymentMethod\n                ) {\n                    setBillingAddressAction(globalMessageList);\n                }\n            },\n\n            /**\n             * Get code\n             * @param {Object} parent\n             * @returns {String}\n             */\n            getCode: function (parent) {\n                return _.isFunction(parent.getCode) ? parent.getCode() : 'shared';\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/shipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'jquery',\n        \"underscore\",\n        'Magento_Ui/js/form/form',\n        'ko',\n        'Magento_Customer/js/model/customer',\n        'Magento_Customer/js/model/address-list',\n        'Magento_Checkout/js/model/address-converter',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/action/create-shipping-address',\n        'Magento_Checkout/js/action/select-shipping-address',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'Magento_Checkout/js/model/shipping-address/form-popup-state',\n        'Magento_Checkout/js/model/shipping-service',\n        'Magento_Checkout/js/action/select-shipping-method',\n        'Magento_Checkout/js/model/shipping-rate-registry',\n        'Magento_Checkout/js/action/set-shipping-information',\n        'Magento_Checkout/js/model/step-navigator',\n        'Magento_Ui/js/modal/modal',\n        'Magento_Checkout/js/model/checkout-data-resolver',\n        'Magento_Checkout/js/checkout-data',\n        'uiRegistry',\n        'mage/translate',\n        'Magento_Checkout/js/model/shipping-rate-service'\n    ],\n    function(\n        $,\n        _,\n        Component,\n        ko,\n        customer,\n        addressList,\n        addressConverter,\n        quote,\n        createShippingAddress,\n        selectShippingAddress,\n        shippingRatesValidator,\n        formPopUpState,\n        shippingService,\n        selectShippingMethodAction,\n        rateRegistry,\n        setShippingInformationAction,\n        stepNavigator,\n        modal,\n        checkoutDataResolver,\n        checkoutData,\n        registry,\n        $t\n    ) {\n        'use strict';\n        var popUp = null;\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/shipping'\n            },\n            visible: ko.observable(!quote.isVirtual()),\n            errorValidationMessage: ko.observable(false),\n            isCustomerLoggedIn: customer.isLoggedIn,\n            isFormPopUpVisible: formPopUpState.isVisible,\n            isFormInline: addressList().length == 0,\n            isNewAddressAdded: ko.observable(false),\n            saveInAddressBook: true,\n            quoteIsVirtual: quote.isVirtual(),\n\n            initialize: function () {\n                var self = this,\n                    hasNewAddress,\n                    fieldsetName = 'checkout.steps.shipping-step.shippingAddress.shipping-address-fieldset';\n\n                this._super();\n                shippingRatesValidator.initFields(fieldsetName);\n\n                if (!quote.isVirtual()) {\n                    stepNavigator.registerStep(\n                        'shipping',\n                        '',\n                        $t('Shipping'),\n                        this.visible, _.bind(this.navigate, this),\n                        10\n                    );\n                }\n                checkoutDataResolver.resolveShippingAddress();\n\n                hasNewAddress = addressList.some(function (address) {\n                    return address.getType() == 'new-customer-address';\n                });\n\n                this.isNewAddressAdded(hasNewAddress);\n\n                this.isFormPopUpVisible.subscribe(function (value) {\n                    if (value) {\n                        self.getPopUp().openModal();\n                    }\n                });\n\n                quote.shippingMethod.subscribe(function () {\n                    self.errorValidationMessage(false);\n                });\n\n                registry.async('checkoutProvider')(function (checkoutProvider) {\n                    var shippingAddressData = checkoutData.getShippingAddressFromData();\n                    if (shippingAddressData) {\n                        checkoutProvider.set(\n                            'shippingAddress',\n                            $.extend({}, checkoutProvider.get('shippingAddress'), shippingAddressData)\n                        );\n                    }\n                    checkoutProvider.on('shippingAddress', function (shippingAddressData) {\n                        checkoutData.setShippingAddressFromData(shippingAddressData);\n                    });\n                });\n\n                return this;\n            },\n\n            navigate: function () {\n                //load data from server for shipping step\n            },\n\n            getPopUp: function () {\n                var self = this;\n                if (!popUp) {\n                    var buttons = this.popUpForm.options.buttons;\n                    this.popUpForm.options.buttons = [\n                        {\n                            text: buttons.save.text ? buttons.save.text : $t('Save Address'),\n                            class: buttons.save.class ? buttons.save.class : 'action primary action-save-address',\n                            click: self.saveNewAddress.bind(self)\n                        },\n                        {\n                            text: buttons.cancel.text ? buttons.cancel.text: $t('Cancel'),\n                            class: buttons.cancel.class ? buttons.cancel.class : 'action secondary action-hide-popup',\n                            click: function() {\n                                this.closeModal();\n                            }\n                        }\n                    ];\n                    this.popUpForm.options.closed = function() {\n                        self.isFormPopUpVisible(false);\n                    };\n                    popUp = modal(this.popUpForm.options, $(this.popUpForm.element));\n                }\n                return popUp;\n            },\n\n            /** Show address form popup */\n            showFormPopUp: function() {\n                this.isFormPopUpVisible(true);\n            },\n\n\n            /** Save new shipping address */\n            saveNewAddress: function() {\n                this.source.set('params.invalid', false);\n                this.source.trigger('shippingAddress.data.validate');\n\n                if (!this.source.get('params.invalid')) {\n                    var addressData = this.source.get('shippingAddress');\n                    addressData.save_in_address_book = this.saveInAddressBook;\n\n                    // New address must be selected as a shipping address\n                    var newShippingAddress = createShippingAddress(addressData);\n                    selectShippingAddress(newShippingAddress);\n                    checkoutData.setSelectedShippingAddress(newShippingAddress.getKey());\n                    checkoutData.setNewCustomerShippingAddress(addressData);\n                    this.getPopUp().closeModal();\n                    this.isNewAddressAdded(true);\n                }\n            },\n\n            /** Shipping Method View **/\n            rates: shippingService.getShippingRates(),\n            isLoading: shippingService.isLoading,\n            isSelected: ko.computed(function () {\n                    return quote.shippingMethod()\n                        ? quote.shippingMethod().carrier_code + '_' + quote.shippingMethod().method_code\n                        : null;\n                }\n            ),\n\n            selectShippingMethod: function(shippingMethod) {\n                selectShippingMethodAction(shippingMethod);\n                checkoutData.setSelectedShippingRate(shippingMethod.carrier_code + '_' + shippingMethod.method_code);\n                return true;\n            },\n\n            setShippingInformation: function () {\n                if (this.validateShippingInformation()) {\n                    setShippingInformationAction().done(\n                        function() {\n                            stepNavigator.next();\n                        }\n                    );\n                }\n            },\n\n            validateShippingInformation: function () {\n                var shippingAddress,\n                    addressData,\n                    loginFormSelector = 'form[data-role=email-with-possible-login]',\n                    emailValidationResult = customer.isLoggedIn();\n\n                if (!quote.shippingMethod()) {\n                    this.errorValidationMessage('Please specify a shipping method');\n                    return false;\n                }\n\n                if (!customer.isLoggedIn()) {\n                    $(loginFormSelector).validation();\n                    emailValidationResult = Boolean($(loginFormSelector + ' input[name=username]').valid());\n                }\n\n                if (!emailValidationResult) {\n                    $(loginFormSelector + ' input[name=username]').focus();\n                }\n\n                if (this.isFormInline) {\n                    this.source.set('params.invalid', false);\n                    this.source.trigger('shippingAddress.data.validate');\n                    if (this.source.get('shippingAddress.custom_attributes')) {\n                        this.source.trigger('shippingAddress.custom_attributes.data.validate');\n                    };\n                    if (this.source.get('params.invalid')\n                        || !quote.shippingMethod().method_code\n                        || !quote.shippingMethod().carrier_code\n                        || !emailValidationResult\n                    ) {\n                        return false;\n                    }\n                    shippingAddress = quote.shippingAddress();\n                    addressData = addressConverter.formAddressDataToQuoteAddress(\n                        this.source.get('shippingAddress')\n                    );\n\n                    //Copy form data to quote shipping address object\n                    for (var field in addressData) {\n                        if (addressData.hasOwnProperty(field)\n                            && shippingAddress.hasOwnProperty(field)\n                            && typeof addressData[field] != 'function'\n                        ) {\n                            shippingAddress[field] = addressData[field];\n                        }\n                    }\n\n                    if (customer.isLoggedIn()) {\n                        shippingAddress.save_in_address_book = true;\n                    }\n                    selectShippingAddress(shippingAddress);\n                }\n                return true;\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/totals'\n    ],\n    function(Component, totals) {\n        'use strict';\n        return Component.extend({\n            isLoading: totals.isLoading\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/totals.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total'\n    ],\n    function (Component) {\n        'use strict';\n\n        return Component.extend({\n\n            /**\n             * @return {*}\n             */\n            isDisplayed: function () {\n                return this.isFullMode();\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/grand-total.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/summary/grand-total'\n            },\n            isDisplayed: function() {\n                return this.isFullMode();\n            },\n            getPureValue: function() {\n                var totals = quote.getTotals()();\n                if (totals) {\n                    return totals.grand_total;\n                }\n                return quote.grand_total;\n            },\n            getValue: function() {\n                return this.getFormattedPrice(this.getPureValue());\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/shipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function ($, Component, quote) {\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/summary/shipping'\n            },\n            quoteIsVirtual: quote.isVirtual(),\n            totals: quote.getTotals(),\n            getShippingMethodTitle: function() {\n                if (!this.isCalculated()) {\n                    return '';\n                }\n                var shippingMethod = quote.shippingMethod();\n                return shippingMethod ? shippingMethod.carrier_title + \" - \" + shippingMethod.method_title : '';\n            },\n            isCalculated: function() {\n                return this.totals() && this.isFullMode() && null != quote.shippingMethod();\n            },\n            getValue: function() {\n                if (!this.isCalculated()) {\n                    return this.notCalculatedMessage;\n                }\n                var price =  this.totals().shipping_amount;\n                return this.getFormattedPrice(price);\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/subtotal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/summary/subtotal'\n            },\n            getPureValue: function() {\n                var totals = quote.getTotals()();\n                if (totals) {\n                    return totals.subtotal;\n                }\n                return quote.subtotal;\n            },\n            getValue: function () {\n                return this.getFormattedPrice(this.getPureValue());\n            }\n\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/cart-items.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'ko',\n        'Magento_Checkout/js/model/totals',\n        'uiComponent',\n        'Magento_Checkout/js/model/step-navigator',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (ko, totals, Component, stepNavigator, quote) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/summary/cart-items'\n            },\n            totals: totals.totals(),\n            getItems: totals.getItems(),\n            getItemsQty: function() {\n                return parseFloat(this.totals.items_qty);\n            },\n            isItemsBlockExpanded: function () {\n                return quote.isVirtual() || stepNavigator.isProcessed('shipping');\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/abstract-total.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Catalog/js/price-utils',\n        'Magento_Checkout/js/model/totals',\n        'Magento_Checkout/js/model/step-navigator'\n    ],\n    function (Component, quote, priceUtils, totals, stepNavigator) {\n        \"use strict\";\n        return Component.extend({\n            getFormattedPrice: function (price) {\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\n            },\n            getTotals: function() {\n                return totals.totals();\n            },\n            isFullMode: function() {\n                if (!this.getTotals()) {\n                    return false;\n                }\n                return stepNavigator.isProcessed('shipping');\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/item/details.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'uiComponent'\n    ],\n    function (Component) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/summary/item/details'\n            },\n            getValue: function(quoteItem) {\n                return quoteItem.name;\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/item/details/subtotal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/abstract-total'\n    ],\n    function (viewModel) {\n        \"use strict\";\n        return viewModel.extend({\n            defaults: {\n                displayArea: 'after_details',\n                template: 'Magento_Checkout/summary/item/details/subtotal'\n            },\n            getValue: function(quoteItem) {\n                return this.getFormattedPrice(quoteItem.row_total);\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/summary/item/details/thumbnail.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'uiComponent'\n    ],\n    function (Component) {\n        \"use strict\";\n        var imageData = window.checkoutConfig.imageData;\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/summary/item/details/thumbnail'\n            },\n            displayArea: 'before_details',\n            imageData: imageData,\n            getImageItem: function(item) {\n                if (this.imageData[item.item_id]) {\n                    return this.imageData[item.item_id];\n                }\n                return [];\n            },\n            getSrc: function(item) {\n                if (this.imageData[item.item_id]) {\n                    return this.imageData[item.item_id]['src'];\n                }\n                return null;\n            },\n            getWidth: function(item) {\n                if (this.imageData[item.item_id]) {\n                    return this.imageData[item.item_id]['width'];\n                }\n                return null;\n            },\n            getHeight: function(item) {\n                if (this.imageData[item.item_id]) {\n                    return this.imageData[item.item_id]['height'];\n                }\n                return null;\n            },\n            getAlt: function(item) {\n                if (this.imageData[item.item_id]) {\n                    return this.imageData[item.item_id]['alt'];\n                }\n                return null;\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/shipping-address/list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine([\n    'underscore',\n    'ko',\n    'mageUtils',\n    'uiComponent',\n    'uiLayout',\n    'Magento_Customer/js/model/address-list'\n], function (_, ko, utils, Component, layout, addressList) {\n    'use strict';\n    var defaultRendererTemplate = {\n        parent: '${ $.$data.parentName }',\n        name: '${ $.$data.name }',\n        component: 'Magento_Checkout/js/view/shipping-address/address-renderer/default'\n    };\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/shipping-address/list',\n            visible: addressList().length > 0,\n            rendererTemplates: []\n        },\n\n        initialize: function () {\n            this._super()\n                .initChildren();\n\n            addressList.subscribe(\n                function(changes) {\n                    var self = this;\n                    changes.forEach(function(change) {\n                        if (change.status === 'added') {\n                           self.createRendererComponent(change.value, change.index);\n                        }\n                    });\n                },\n                this,\n                'arrayChange'\n            );\n            return this;\n        },\n\n        initConfig: function () {\n            this._super();\n            // the list of child components that are responsible for address rendering\n            this.rendererComponents = [];\n            return this;\n        },\n\n        initChildren: function () {\n            _.each(addressList(), this.createRendererComponent, this);\n            return this;\n        },\n\n        /**\n         * Create new component that will render given address in the address list\n         *\n         * @param address\n         * @param index\n         */\n        createRendererComponent: function (address, index) {\n            if (index in this.rendererComponents) {\n                this.rendererComponents[index].address(address);\n            } else {\n                // rendererTemplates are provided via layout\n                var rendererTemplate = (address.getType() != undefined && this.rendererTemplates[address.getType()] != undefined)\n                    ? utils.extend({}, defaultRendererTemplate, this.rendererTemplates[address.getType()])\n                    : defaultRendererTemplate;\n                var templateData = {\n                    parentName: this.name,\n                    name: index\n                };\n                var rendererComponent = utils.template(rendererTemplate, templateData);\n                utils.extend(rendererComponent, {address: ko.observable(address)});\n                layout([rendererComponent]);\n                this.rendererComponents[index] = rendererComponent;\n            }\n        }\n    });\n});\n","Magento_Checkout/js/view/shipping-address/address-renderer/default.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine([\n    'jquery',\n    'ko',\n    'uiComponent',\n    'Magento_Checkout/js/action/select-shipping-address',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/model/shipping-address/form-popup-state',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Customer/js/customer-data'\n], function($, ko, Component, selectShippingAddressAction, quote, formPopUpState, checkoutData, customerData) {\n    'use strict';\n    var countryData = customerData.get('directory-data');\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/shipping-address/address-renderer/default'\n        },\n\n        initObservable: function () {\n            this._super();\n            this.isSelected = ko.computed(function() {\n                var isSelected = false;\n                var shippingAddress = quote.shippingAddress();\n                if (shippingAddress) {\n                    isSelected = shippingAddress.getKey() == this.address().getKey();\n                }\n                return isSelected;\n            }, this);\n\n            return this;\n        },\n\n        getCountryName: function(countryId) {\n            return (countryData()[countryId] != undefined) ? countryData()[countryId].name : \"\";\n        },\n\n        /** Set selected customer shipping address  */\n        selectAddress: function() {\n            selectShippingAddressAction(this.address());\n            checkoutData.setSelectedShippingAddress(this.address().getKey());\n        },\n\n        editAddress: function() {\n            formPopUpState.isVisible(true);\n            this.showPopup();\n\n        },\n        showPopup: function() {\n            $('[data-open-modal=\"opc-new-shipping-address\"]').trigger('click');\n        }\n    });\n});\n","Magento_Checkout/js/view/form/element/email.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine([\n    'jquery',\n    'uiComponent',\n    'ko',\n    'Magento_Customer/js/model/customer',\n    'Magento_Customer/js/action/check-email-availability',\n    'Magento_Customer/js/action/login',\n    'Magento_Checkout/js/model/quote',\n    'Magento_Checkout/js/checkout-data',\n    'Magento_Checkout/js/model/full-screen-loader',\n    'mage/validation'\n], function ($, Component, ko, customer, checkEmailAvailability, loginAction, quote, checkoutData, fullScreenLoader) {\n    'use strict';\n\n    var validatedEmail = checkoutData.getValidatedEmailValue();\n\n    if (validatedEmail && !customer.isLoggedIn()) {\n        quote.guestEmail = validatedEmail;\n    }\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/form/element/email',\n            email: checkoutData.getInputFieldEmailValue(),\n            emailFocused: false,\n            isLoading: false,\n            isPasswordVisible: false,\n            listens: {\n                email: 'emailHasChanged',\n                emailFocused: 'validateEmail'\n            }\n        },\n        checkDelay: 2000,\n        checkRequest: null,\n        isEmailCheckComplete: null,\n        isCustomerLoggedIn: customer.isLoggedIn,\n        forgotPasswordUrl: window.checkoutConfig.forgotPasswordUrl,\n        emailCheckTimeout: 0,\n\n        /**\n         * Initializes observable properties of instance\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe(['email', 'emailFocused', 'isLoading', 'isPasswordVisible']);\n\n            return this;\n        },\n\n        /**\n         * Callback on changing email property\n         */\n        emailHasChanged: function () {\n            var self = this;\n\n            clearTimeout(this.emailCheckTimeout);\n\n            if (self.validateEmail()) {\n                quote.guestEmail = self.email();\n                checkoutData.setValidatedEmailValue(self.email());\n            }\n            this.emailCheckTimeout = setTimeout(function () {\n                if (self.validateEmail()) {\n                    self.checkEmailAvailability();\n                } else {\n                    self.isPasswordVisible(false);\n                }\n            }, self.checkDelay);\n\n            checkoutData.setInputFieldEmailValue(self.email());\n        },\n\n        /**\n         * Check email existing.\n         */\n        checkEmailAvailability: function () {\n            var self = this;\n            this.validateRequest();\n            this.isEmailCheckComplete = $.Deferred();\n            this.isLoading(true);\n            this.checkRequest = checkEmailAvailability(this.isEmailCheckComplete, this.email());\n\n            $.when(this.isEmailCheckComplete).done(function () {\n                self.isPasswordVisible(false);\n            }).fail(function () {\n                self.isPasswordVisible(true);\n            }).always(function () {\n                self.isLoading(false);\n            });\n        },\n\n        /**\n         * If request has been sent -> abort it.\n         * ReadyStates for request aborting:\n         * 1 - The request has been set up\n         * 2 - The request has been sent\n         * 3 - The request is in process\n         */\n        validateRequest: function () {\n            if (this.checkRequest != null && $.inArray(this.checkRequest.readyState, [1, 2, 3])) {\n                this.checkRequest.abort();\n                this.checkRequest = null;\n            }\n        },\n\n        /**\n         * Local email validation.\n         *\n         * @param {Boolean} focused - input focus.\n         * @returns {Boolean} - validation result.\n         */\n        validateEmail: function (focused) {\n            var loginFormSelector = 'form[data-role=email-with-possible-login]',\n                usernameSelector = loginFormSelector + ' input[name=username]',\n                loginForm = $(loginFormSelector),\n                validator;\n\n            loginForm.validation();\n\n            if (focused === false) {\n                return !!$(usernameSelector).valid();\n            }\n\n            validator = loginForm.validate();\n\n            return validator.check(usernameSelector);\n        },\n\n        /**\n         * Log in form submitting callback.\n         *\n         * @param {HTMLElement} loginForm - form element.\n         */\n        login: function (loginForm) {\n            var loginData = {},\n                formDataArray = $(loginForm).serializeArray();\n\n            formDataArray.forEach(function (entry) {\n                loginData[entry.name] = entry.value;\n            });\n\n            if (this.isPasswordVisible() && $(loginForm).validation() && $(loginForm).validation('isValid')) {\n                fullScreenLoader.startLoader();\n                loginAction(loginData).always(function() {\n                    fullScreenLoader.stopLoader();\n                });\n            }\n        }\n    });\n});\n","Magento_Checkout/js/view/cart/shipping-estimation.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'jquery',\n        'Magento_Ui/js/form/form',\n        'Magento_Checkout/js/action/select-shipping-address',\n        'Magento_Checkout/js/model/address-converter',\n        'Magento_Checkout/js/model/cart/estimate-service',\n        'Magento_Checkout/js/checkout-data',\n        'Magento_Checkout/js/model/shipping-rates-validator',\n        'uiRegistry',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/model/checkout-data-resolver',\n        'mage/validation'\n    ],\n    function(\n        $,\n        Component,\n        selectShippingAddress,\n        addressConverter,\n        estimateService,\n        checkoutData,\n        shippingRatesValidator,\n        registry,\n        quote,\n        checkoutDataResolver\n    ) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/cart/shipping-estimation'\n            },\n            isVirtual: quote.isVirtual(),\n\n            /**\n             * @override\n             */\n            initialize: function () {\n                this._super();\n                registry.async('checkoutProvider')(function (checkoutProvider) {\n                    checkoutDataResolver.resolveEstimationAddress();\n                    var address = quote.isVirtual() ? quote.billingAddress() : quote.shippingAddress(),\n                        estimatedAddress;\n                    if (address) {\n                        estimatedAddress = address.isEditable()\n                            ? addressConverter.quoteAddressToFormAddressData(address)\n                            : addressConverter.quoteAddressToFormAddressData(addressConverter.addressToEstimationAddress(address));\n                        checkoutProvider.set(\n                            'shippingAddress',\n                            $.extend({}, checkoutProvider.get('shippingAddress'), estimatedAddress)\n                        );\n                    }\n                    if (!quote.isVirtual()) {\n                        checkoutProvider.on('shippingAddress', function (shippingAddressData) {\n                            checkoutData.setShippingAddressFromData(shippingAddressData);\n                        });\n                    } else {\n                        checkoutProvider.on('shippingAddress', function (shippingAddressData) {\n                            checkoutData.setBillingAddressFromData(shippingAddressData);\n                        });\n                    }\n                });\n            },\n\n\n            /**\n             * @override\n             */\n            initElement: function(element) {\n                if (element.index === 'address-fieldsets') {\n                    shippingRatesValidator.bindChangeHandlers(element.elems(), true, 500);\n                }\n            },\n\n            /**\n             * Returns shipping rates for address\n             * @returns void\n             */\n            getEstimationInfo: function () {\n                var addressData = null;\n                this.source.set('params.invalid', false);\n                this.source.trigger('shippingAddress.data.validate');\n\n                if (!this.source.get('params.invalid')) {\n                    addressData = this.source.get('shippingAddress');\n                    selectShippingAddress(addressConverter.formAddressDataToQuoteAddress(addressData));\n                }\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/cart/totals.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/totals'\n    ],\n    function (Component, totalsService) {\n        'use strict';\n\n        return Component.extend({\n\n            isLoading: totalsService.isLoading\n        });\n    }\n);\n","Magento_Checkout/js/view/cart/shipping-rates.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'underscore',\n        'uiComponent',\n        'Magento_Checkout/js/model/shipping-service',\n        'Magento_Catalog/js/price-utils',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Checkout/js/action/select-shipping-method',\n        'Magento_Checkout/js/checkout-data'\n    ],\n    function (\n        ko,\n        _,\n        Component,\n        shippingService,\n        priceUtils,\n        quote,\n        selectShippingMethodAction,\n        checkoutData\n    ) {\n        'use strict';\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/cart/shipping-rates'\n            },\n            isVisible: ko.observable(!quote.isVirtual()),\n            isLoading: shippingService.isLoading,\n            shippingRates: shippingService.getShippingRates(),\n            shippingRateGroups: ko.observableArray([]),\n            selectedShippingMethod: ko.computed(function () {\n                    return quote.shippingMethod() ?\n                        quote.shippingMethod()['carrier_code'] + '_' + quote.shippingMethod()['method_code'] :\n                        null;\n                }\n            ),\n\n            /**\n             * @override\n             */\n            initObservable: function () {\n                var self = this;\n                this._super();\n\n                this.shippingRates.subscribe(function (rates) {\n                    self.shippingRateGroups([]);\n                    _.each(rates, function (rate) {\n                        var carrierTitle = rate['carrier_title'];\n\n                        if (self.shippingRateGroups.indexOf(carrierTitle) === -1) {\n                            self.shippingRateGroups.push(carrierTitle);\n                        }\n                    });\n                });\n\n                return this;\n            },\n\n            /**\n             * Get shipping rates for specific group based on title.\n             * @returns Array\n             */\n            getRatesForGroup: function (shippingRateGroupTitle) {\n                return _.filter(this.shippingRates(), function (rate) {\n                    return shippingRateGroupTitle === rate['carrier_title'];\n                });\n            },\n\n            /**\n             * Format shipping price.\n             * @returns {String}\n             */\n            getFormattedPrice: function (price) {\n                return priceUtils.formatPrice(price, quote.getPriceFormat());\n            },\n\n            /**\n             * Set shipping method.\n             * @param {String} methodData\n             * @returns bool\n             */\n            selectShippingMethod: function (methodData) {\n                selectShippingMethodAction(methodData);\n                checkoutData.setSelectedShippingRate(methodData['carrier_code'] + '_' + methodData['method_code']);\n                return true;\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/cart/totals/shipping.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'Magento_Checkout/js/view/summary/shipping',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        'use strict';\n\n        return Component.extend({\n\n            /**\n             * @override\n             */\n            isCalculated: function () {\n                return !!quote.shippingMethod();\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/shipping-information/list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine([\n    'jquery',\n    'ko',\n    'mageUtils',\n    'uiComponent',\n    'uiLayout',\n    'Magento_Checkout/js/model/quote'\n], function ($, ko, utils, Component, layout, quote) {\n    'use strict';\n    var defaultRendererTemplate = {\n        parent: '${ $.$data.parentName }',\n        name: '${ $.$data.name }',\n        component: 'Magento_Checkout/js/view/shipping-information/address-renderer/default'\n    };\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/shipping-information/list',\n            rendererTemplates: {}\n        },\n\n        initialize: function () {\n            this._super()\n                .initChildren();\n\n            var self = this;\n            quote.shippingAddress.subscribe(function(address) {\n                self.createRendererComponent(address);\n            });\n            return this;\n        },\n\n        initConfig: function () {\n            this._super();\n            // the list of child components that are responsible for address rendering\n            this.rendererComponents = {};\n            return this;\n        },\n\n        initChildren: function () {\n            return this;\n        },\n\n        /**\n         * Create new component that will render given address in the address list\n         *\n         * @param address\n         */\n        createRendererComponent: function (address) {\n\n            $.each(this.rendererComponents, function(index, component) {\n                component.visible(false);\n            });\n\n            if (this.rendererComponents[address.getType()]) {\n                this.rendererComponents[address.getType()].address(address);\n                this.rendererComponents[address.getType()].visible(true);\n            } else {\n                // rendererTemplates are provided via layout\n                var rendererTemplate =\n                    (address.getType() != undefined && this.rendererTemplates[address.getType()] != undefined)\n                    ? utils.extend({}, defaultRendererTemplate, this.rendererTemplates[address.getType()])\n                    : defaultRendererTemplate;\n                var templateData = {\n                    parentName: this.name,\n                    name: address.getType()\n                };\n\n                var rendererComponent = utils.template(rendererTemplate, templateData);\n                utils.extend(\n                    rendererComponent,\n                    {address: ko.observable(address), visible: ko.observable(true)}\n                );\n                layout([rendererComponent]);\n                this.rendererComponents[address.getType()] = rendererComponent;\n            }\n        }\n    });\n});\n","Magento_Checkout/js/view/shipping-information/address-renderer/default.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*global define*/\ndefine([\n    'uiComponent',\n    'Magento_Customer/js/customer-data'\n], function(Component, customerData) {\n    'use strict';\n    var countryData = customerData.get('directory-data');\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/shipping-information/address-renderer/default'\n        },\n\n        getCountryName: function(countryId) {\n            return (countryData()[countryId] != undefined) ? countryData()[countryId].name : \"\";\n        }\n    });\n});\n","Magento_Checkout/js/view/payment/email-validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_Checkout/js/model/customer-email-validator'\n    ],\n    function (Component, additionalValidators, agreementValidator) {\n        'use strict';\n\n        additionalValidators.registerValidator(agreementValidator);\n\n        return Component.extend({});\n    }\n);\n","Magento_Checkout/js/view/payment/list.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'ko',\n    'mageUtils',\n    'uiComponent',\n    'Magento_Checkout/js/model/payment/method-list',\n    'Magento_Checkout/js/model/payment/renderer-list',\n    'uiLayout',\n    'Magento_Checkout/js/model/checkout-data-resolver'\n], function (_, ko, utils, Component, paymentMethods, rendererList, layout, checkoutDataResolver) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            template: 'Magento_Checkout/payment-methods/list',\n            visible: paymentMethods().length > 0\n        },\n\n        /**\n         * Initialize view.\n         *\n         * @returns {Component} Chainable.\n         */\n        initialize: function () {\n            this._super().initChildren();\n            paymentMethods.subscribe(\n                function (changes) {\n                    checkoutDataResolver.resolvePaymentMethod();\n                    //remove renderer for \"deleted\" payment methods\n                    _.each(changes, function (change) {\n                        if (change.status === 'deleted') {\n                            this.removeRenderer(change.value.method);\n                        }\n                    }, this);\n                    //add renderer for \"added\" payment methods\n                    _.each(changes, function (change) {\n                        if (change.status === 'added') {\n                            this.createRenderer(change.value);\n                        }\n                    }, this);\n                }, this, 'arrayChange');\n\n            return this;\n        },\n\n        /**\n         * Create renders for child payment methods.\n         *\n         * @returns {Component} Chainable.\n         */\n        initChildren: function () {\n            var self = this;\n            _.each(paymentMethods(), function (paymentMethodData) {\n                self.createRenderer(paymentMethodData);\n            });\n\n            return this;\n        },\n\n        /**\n         * Create renderer.\n         *\n         * @param {Object} paymentMethodData\n         */\n        createRenderer: function (paymentMethodData) {\n            var renderer = this.getRendererByType(paymentMethodData.method),\n                rendererTemplate,\n                rendererComponent,\n                templateData;\n\n            if (renderer) {\n                templateData = {\n                    parentName: this.name,\n                    name: paymentMethodData.method\n                };\n                rendererTemplate = {\n                    parent: '${ $.$data.parentName }',\n                    name: '${ $.$data.name }',\n                    displayArea: 'payment-method-items',\n                    component: renderer.component\n                };\n                rendererComponent = utils.template(rendererTemplate, templateData);\n                utils.extend(rendererComponent, {\n                    item: paymentMethodData\n                });\n                layout([rendererComponent]);\n            }\n        },\n\n        /**\n         * Get renderer for payment method type.\n         *\n         * @param {String} paymentMethodCode\n         * @returns {Object}\n         */\n        getRendererByType: function (paymentMethodCode) {\n            var compatibleRenderer;\n            _.find(rendererList(), function (renderer) {\n                if (renderer.type === paymentMethodCode) {\n                    compatibleRenderer = renderer;\n                }\n            });\n\n            return compatibleRenderer;\n        },\n\n        /**\n         * Remove view renderer.\n         *\n         * @param {String} paymentMethodCode\n         */\n        removeRenderer: function (paymentMethodCode) {\n            var items = this.getRegion('payment-method-items');\n            _.find(items(), function (value) {\n                if (value.item.method === paymentMethodCode) {\n                    value.disposeSubscriptions();\n                    this.removeChild(value);\n                }\n            }, this);\n        }\n    });\n});\n","Magento_Checkout/js/view/payment/default.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        'ko',\n        'jquery',\n        'uiComponent',\n        'Magento_Checkout/js/action/place-order',\n        'Magento_Checkout/js/action/select-payment-method',\n        'Magento_Checkout/js/model/quote',\n        'Magento_Customer/js/model/customer',\n        'Magento_Checkout/js/model/payment-service',\n        'Magento_Checkout/js/checkout-data',\n        'Magento_Checkout/js/model/checkout-data-resolver',\n        'uiRegistry',\n        'Magento_Checkout/js/model/payment/additional-validators',\n        'Magento_Ui/js/model/messages',\n        'uiLayout'\n    ],\n    function (\n        ko,\n        $,\n        Component,\n        placeOrderAction,\n        selectPaymentMethodAction,\n        quote,\n        customer,\n        paymentService,\n        checkoutData,\n        checkoutDataResolver,\n        registry,\n        additionalValidators,\n        Messages,\n        layout\n    ) {\n        'use strict';\n        return Component.extend({\n            redirectAfterPlaceOrder: true,\n            /**\n             * After place order callback\n             */\n            afterPlaceOrder: function () {\n                //\n            },\n            isPlaceOrderActionAllowed: ko.observable(quote.billingAddress() != null),\n            /**\n             * Initialize view.\n             *\n             * @returns {Component} Chainable.\n             */\n            initialize: function () {\n                this._super().initChildren();\n                quote.billingAddress.subscribe(function(address) {\n                    this.isPlaceOrderActionAllowed((address !== null));\n                }, this);\n                checkoutDataResolver.resolveBillingAddress();\n\n                var billingAddressCode = 'billingAddress' + this.getCode();\n                registry.async('checkoutProvider')(function (checkoutProvider) {\n                    var defaultAddressData = checkoutProvider.get(billingAddressCode);\n                    if (defaultAddressData === undefined) {\n                        // skip if payment does not have a billing address form\n                        return;\n                    }\n                    var billingAddressData = checkoutData.getBillingAddressFromData();\n                    if (billingAddressData) {\n                        checkoutProvider.set(\n                            billingAddressCode,\n                            $.extend({}, defaultAddressData, billingAddressData)\n                        );\n                    }\n                    checkoutProvider.on(billingAddressCode, function (billingAddressData) {\n                        checkoutData.setBillingAddressFromData(billingAddressData);\n                    }, billingAddressCode);\n                });\n\n                return this;\n            },\n\n            /**\n             * Initialize child elements\n             *\n             * @returns {Component} Chainable.\n             */\n            initChildren: function () {\n                this.messageContainer = new Messages();\n                this.createMessagesComponent();\n\n                return this;\n            },\n\n            /**\n             * Create child message renderer component\n             *\n             * @returns {Component} Chainable.\n             */\n            createMessagesComponent: function () {\n\n                var messagesComponent = {\n                    parent: this.name,\n                    name: this.name + '.messages',\n                    displayArea: 'messages',\n                    component: 'Magento_Ui/js/view/messages',\n                    config: {\n                        messageContainer: this.messageContainer\n                    }\n                };\n\n                layout([messagesComponent]);\n\n                return this;\n            },\n\n            /**\n             * Place order.\n             */\n            placeOrder: function (data, event) {\n                var self = this,\n                    placeOrder;\n\n                if (event) {\n                    event.preventDefault();\n                }\n\n                if (this.validate() && additionalValidators.validate()) {\n                    this.isPlaceOrderActionAllowed(false);\n                    placeOrder = placeOrderAction(this.getData(), this.redirectAfterPlaceOrder, this.messageContainer);\n\n                    $.when(placeOrder).fail(function () {\n                        self.isPlaceOrderActionAllowed(true);\n                    }).done(this.afterPlaceOrder.bind(this));\n                    return true;\n                }\n                return false;\n            },\n\n            selectPaymentMethod: function() {\n                selectPaymentMethodAction(this.getData());\n                checkoutData.setSelectedPaymentMethod(this.item.method);\n                return true;\n            },\n\n            isChecked: ko.computed(function () {\n                return quote.paymentMethod() ? quote.paymentMethod().method : null;\n            }),\n\n            isRadioButtonVisible: ko.computed(function () {\n                return paymentService.getAvailablePaymentMethods().length !== 1;\n            }),\n\n            /**\n             * Get payment method data\n             */\n            getData: function() {\n                return {\n                    \"method\": this.item.method,\n                    \"po_number\": null,\n                    \"additional_data\": null\n                };\n            },\n\n            /**\n             * Get payment method type.\n             */\n            getTitle: function () {\n                return this.item.title;\n            },\n\n            /**\n             * Get payment method code.\n             */\n            getCode: function () {\n                return this.item.method;\n            },\n\n            validate: function () {\n                return true;\n            },\n\n            getBillingAddressFormName: function() {\n                return 'billing-address-form-' + this.item.method;\n            },\n\n            disposeSubscriptions: function () {\n                // dispose all active subscriptions\n                var billingAddressCode = 'billingAddress' + this.getCode();\n                registry.async('checkoutProvider')(function (checkoutProvider) {\n                    checkoutProvider.off(billingAddressCode);\n                });\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/review/actions.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        'uiComponent',\n        'Magento_Checkout/js/model/quote'\n    ],\n    function (Component, quote) {\n        \"use strict\";\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/review/actions',\n                displayArea: 'actions'\n            },\n            getActiveView: function() {\n                var view = this.getViewByCode(quote.paymentMethod());\n                return view ? view : this.getDefaultView();\n            },\n            getViewByCode: function(code) {\n                return _.find(this.elems(), function(elem) {\n                    return elem.index == code && !elem.isDefault;\n                });\n            },\n            getDefaultView: function() {\n                return _.find(this.elems(), function(elem) {\n                    return elem.isDefault;\n                });\n            }\n        });\n    }\n);\n","Magento_Checkout/js/view/review/actions/default.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*browser:true*/\n/*global define*/\ndefine(\n    [\n        'uiComponent'\n    ],\n    function (Component) {\n        return Component.extend({\n            defaults: {\n                template: 'Magento_Checkout/review/actions/default'\n            },\n            placeOrder: function(parent) {\n                return parent.placeOrder.bind(parent);\n            }\n        });\n    }\n);\n","Magento_Search/form-mini.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    \"matchMedia\",\n    'jquery/ui',\n    'mage/translate'\n], function ($, _, mageTemplate, mediaCheck) {\n    'use strict';\n\n    /**\n     * Check wether the incoming string is not empty or if doesn't consist of spaces.\n     *\n     * @param {String} value - Value to check.\n     * @returns {Boolean}\n     */\n    function isEmpty(value) {\n        return (value.length === 0) || (value == null) || /^\\s+$/.test(value);\n    }\n\n    $.widget('mage.quickSearch', {\n        options: {\n            autocomplete: 'off',\n            minSearchLength: 2,\n            responseFieldElements: 'ul li',\n            selectClass: 'selected',\n            template:\n                '<li class=\"<%- data.row_class %>\" id=\"qs-option-<%- data.index %>\" role=\"option\">' +\n                    '<span class=\"qs-option-name\">' +\n                       ' <%- data.title %>' +\n                    '</span>' +\n                    '<span aria-hidden=\"true\" class=\"amount\">' +\n                        '<%- data.num_results %>' +\n                    '</span>' +\n                '</li>',\n            submitBtn: 'button[type=\"submit\"]',\n            searchLabel: '[data-role=minisearch-label]',\n            isExpandable: null\n        },\n\n        _create: function () {\n            this.responseList = {\n                indexList: null,\n                selected: null\n            };\n            this.autoComplete = $(this.options.destinationSelector);\n            this.searchForm = $(this.options.formSelector);\n            this.submitBtn = this.searchForm.find(this.options.submitBtn)[0];\n            this.searchLabel = $(this.options.searchLabel);\n            this.isExpandable = this.options.isExpandable;\n\n            _.bindAll(this, '_onKeyDown', '_onPropertyChange', '_onSubmit');\n\n            this.submitBtn.disabled = true;\n\n            this.element.attr('autocomplete', this.options.autocomplete);\n\n            mediaCheck({\n                media: '(max-width: 768px)',\n                entry: function () {\n                    this.isExpandable = true;\n                }.bind(this),\n                exit: function () {\n                    this.isExpandable = false;\n                    this.element.removeAttr('aria-expanded');\n                }.bind(this)\n            });\n\n            this.searchLabel.on('click', function (e) {\n                // allow input to lose its' focus when clicking on label\n                if (this.isExpandable && this.isActive()) {\n                    e.preventDefault();\n                }\n            }.bind(this));\n\n            this.element.on('blur', $.proxy(function () {\n                if (!this.searchLabel.hasClass('active')) {\n                    return;\n                }\n\n                setTimeout($.proxy(function () {\n                    if (this.autoComplete.is(':hidden')) {\n                        this.setActiveState(false);\n                    }\n                    this.autoComplete.hide();\n                    this._updateAriaHasPopup(false);\n                }, this), 250);\n            }, this));\n\n            this.element.trigger('blur');\n\n            this.element.on('focus', this.setActiveState.bind(this, true));\n            this.element.on('keydown', this._onKeyDown);\n            this.element.on('input propertychange', this._onPropertyChange);\n\n            this.searchForm.on('submit', $.proxy(function() {\n                this._onSubmit();\n                this._updateAriaHasPopup(false);\n            }, this));\n        },\n\n        /**\n         * Checks if search field is active.\n         *\n         * @returns {Boolean}\n         */\n        isActive: function () {\n            return this.searchLabel.hasClass('active');\n        },\n\n        /**\n         * Sets state of the search field to provided value.\n         *\n         * @param {Boolean} isActive\n         */\n        setActiveState: function (isActive) {\n            this.searchLabel.toggleClass('active', isActive);\n\n            if (this.isExpandable) {\n                this.element.attr('aria-expanded', isActive);\n            }\n        },\n\n        /**\n         * @private\n         * @return {Element} The first element in the suggestion list.\n         */\n        _getFirstVisibleElement: function () {\n            return this.responseList.indexList ? this.responseList.indexList.first() : false;\n        },\n\n        /**\n         * @private\n         * @return {Element} The last element in the suggestion list.\n         */\n        _getLastElement: function () {\n            return this.responseList.indexList ? this.responseList.indexList.last() : false;\n        },\n\n        /**\n         * @private\n         * @param {Boolean} show Set attribute aria-haspopup to \"true/false\" for element.\n         */\n        _updateAriaHasPopup: function(show) {\n            if (show) {\n                this.element.attr('aria-haspopup', 'true');\n            } else {\n                this.element.attr('aria-haspopup', 'false');\n            }\n        },\n\n        /**\n         * Clears the item selected from the suggestion list and resets the suggestion list.\n         * @private\n         * @param {Boolean} all - Controls whether to clear the suggestion list.\n         */\n        _resetResponseList: function (all) {\n            this.responseList.selected = null;\n\n            if (all === true) {\n                this.responseList.indexList = null;\n            }\n        },\n\n        /**\n         * Executes when the search box is submitted. Sets the search input field to the\n         * value of the selected item.\n         * @private\n         * @param {Event} e - The submit event\n         */\n        _onSubmit: function (e) {\n            var value = this.element.val();\n\n            if (isEmpty(value)) {\n                e.preventDefault();\n            }\n\n            if (this.responseList.selected) {\n                this.element.val(this.responseList.selected.find('.qs-option-name').text());\n            }\n        },\n\n        /**\n         * Executes when keys are pressed in the search input field. Performs specific actions\n         * depending on which keys are pressed.\n         * @private\n         * @param {Event} e - The key down event\n         * @return {Boolean} Default return type for any unhandled keys\n         */\n        _onKeyDown: function (e) {\n            var keyCode = e.keyCode || e.which;\n\n            switch (keyCode) {\n                case $.ui.keyCode.HOME:\n                    this._getFirstVisibleElement().addClass(this.options.selectClass);\n                    this.responseList.selected = this._getFirstVisibleElement();\n                    break;\n                case $.ui.keyCode.END:\n                    this._getLastElement().addClass(this.options.selectClass);\n                    this.responseList.selected = this._getLastElement();\n                    break;\n                case $.ui.keyCode.ESCAPE:\n                    this._resetResponseList(true);\n                    this.autoComplete.hide();\n                    break;\n                case $.ui.keyCode.ENTER:\n                    this.searchForm.trigger('submit');\n                    break;\n                case $.ui.keyCode.DOWN:\n                    if (this.responseList.indexList) {\n                        if (!this.responseList.selected) {\n                            this._getFirstVisibleElement().addClass(this.options.selectClass);\n                            this.responseList.selected = this._getFirstVisibleElement();\n                        }\n                        else if (!this._getLastElement().hasClass(this.options.selectClass)) {\n                            this.responseList.selected = this.responseList.selected.removeClass(this.options.selectClass).next().addClass(this.options.selectClass);\n                        } else {\n                            this.responseList.selected.removeClass(this.options.selectClass);\n                            this._getFirstVisibleElement().addClass(this.options.selectClass);\n                            this.responseList.selected = this._getFirstVisibleElement();\n                        }\n                        this.element.val(this.responseList.selected.find('.qs-option-name').text());\n                        this.element.attr('aria-activedescendant', this.responseList.selected.attr('id'));\n                    }\n                    break;\n                case $.ui.keyCode.UP:\n                    if (this.responseList.indexList !== null) {\n                        if (!this._getFirstVisibleElement().hasClass(this.options.selectClass)) {\n                            this.responseList.selected = this.responseList.selected.removeClass(this.options.selectClass).prev().addClass(this.options.selectClass);\n\n                        } else {\n                            this.responseList.selected.removeClass(this.options.selectClass);\n                            this._getLastElement().addClass(this.options.selectClass);\n                            this.responseList.selected = this._getLastElement();\n                        }\n                        this.element.val(this.responseList.selected.find('.qs-option-name').text());\n                        this.element.attr('aria-activedescendant', this.responseList.selected.attr('id'));\n                    }\n                    break;\n                default:\n                    return true;\n            }\n        },\n\n        /**\n         * Executes when the value of the search input field changes. Executes a GET request\n         * to populate a suggestion list based on entered text. Handles click (select), hover,\n         * and mouseout events on the populated suggestion list dropdown.\n         * @private\n         */\n        _onPropertyChange: function () {\n            var searchField = this.element,\n                clonePosition = {\n                    position: 'absolute',\n                    // Removed to fix display issues\n                    // left: searchField.offset().left,\n                    // top: searchField.offset().top + searchField.outerHeight(),\n                    width: searchField.outerWidth()\n                },\n                source = this.options.template,\n                template = mageTemplate(source),\n                dropdown = $('<ul role=\"listbox\"></ul>'),\n                value = this.element.val();\n\n            this.submitBtn.disabled = isEmpty(value);\n\n            if (value.length >= parseInt(this.options.minSearchLength, 10)) {\n                $.getJSON(this.options.url, {q: value}, $.proxy(function (data) {\n                    $.each(data, function(index, element) {\n                        element.index = index;\n                        var html = template({\n                            data: element\n                        });\n                        dropdown.append(html);\n                    });\n                    this.responseList.indexList = this.autoComplete.html(dropdown)\n                        .css(clonePosition)\n                        .show()\n                        .find(this.options.responseFieldElements + ':visible');\n\n                    this._resetResponseList(false);\n                    this.element.removeAttr('aria-activedescendant');\n\n                    if (this.responseList.indexList.length) {\n                        this._updateAriaHasPopup(true);\n                    } else {\n                        this._updateAriaHasPopup(false);\n                    }\n\n                    this.responseList.indexList\n                        .on('click', function (e) {\n                            this.responseList.selected = $(e.target);\n                            this.searchForm.trigger('submit');\n                        }.bind(this))\n                        .on('mouseenter mouseleave', function (e) {\n                            this.responseList.indexList.removeClass(this.options.selectClass);\n                            $(e.target).addClass(this.options.selectClass);\n                            this.responseList.selected = $(e.target);\n                            this.element.attr('aria-activedescendant', $(e.target).attr('id'));\n                        }.bind(this))\n                        .on('mouseout', function (e) {\n                            if (!this._getLastElement() && this._getLastElement().hasClass(this.options.selectClass)) {\n                                $(e.target).removeClass(this.options.selectClass);\n                                this._resetResponseList(false);\n                            }\n                        }.bind(this));\n                }, this));\n            } else {\n                this._resetResponseList(true);\n                this.autoComplete.hide();\n                this._updateAriaHasPopup(false);\n                this.element.removeAttr('aria-activedescendant');\n            }\n        }\n    });\n\n    return $.mage.quickSearch;\n});\n","Magento_Ui/js/block-loader.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'jquery',\n    'Magento_Ui/js/lib/ko/template/loader',\n    'mage/template'\n], function (ko, $, templateLoader, template) {\n    'use strict';\n\n    var blockLoaderTemplatePath = 'ui/block-loader',\n        blockContentLoadingClass = '_block-content-loading',\n        blockLoader,\n        blockLoaderClass,\n        loaderImageHref;\n\n    templateLoader.loadTemplate(blockLoaderTemplatePath).done(function (blockLoaderTemplate) {\n        blockLoader = template($.trim(blockLoaderTemplate), {\n            loaderImageHref: loaderImageHref\n        });\n        blockLoader = $(blockLoader);\n        blockLoaderClass = '.' + blockLoader.attr('class');\n    });\n\n    /**\n     * Helper function to check if blockContentLoading class should be applied.\n     * @param {Object} element\n     * @returns {Boolean}\n     */\n    function isLoadingClassRequired(element) {\n        var position = element.css('position');\n\n        if (position === 'absolute' || position === 'fixed') {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Add loader to block.\n     * @param {Object} element\n     */\n    function addBlockLoader(element) {\n        element.find(':focus').blur();\n        element.find('input:disabled, select:disabled').addClass('_disabled');\n        element.find('input, select').prop('disabled', true);\n\n        if (isLoadingClassRequired(element)) {\n            element.addClass(blockContentLoadingClass);\n        }\n        element.append(blockLoader.clone());\n    }\n\n    /**\n     * Remove loader from block.\n     * @param {Object} element\n     */\n    function removeBlockLoader(element) {\n        if (!element.has(blockLoaderClass).length) {\n            return;\n        }\n        element.find(blockLoaderClass).remove();\n        element.find('input:not(\"._disabled\"), select:not(\"._disabled\")').prop('disabled', false);\n        element.find('input:disabled, select:disabled').removeClass('_disabled');\n        element.removeClass(blockContentLoadingClass);\n    }\n\n    return function (loaderHref) {\n        loaderImageHref = loaderHref;\n        ko.bindingHandlers.blockLoader = {\n            /**\n             * Process loader for block\n             * @param {String} element\n             * @param {Boolean} displayBlockLoader\n             */\n            update: function (element, displayBlockLoader) {\n                element = $(element);\n\n                if (ko.unwrap(displayBlockLoader())) {\n                    addBlockLoader(element);\n                } else {\n                    removeBlockLoader(element);\n                }\n            }\n        };\n    };\n});\n","Magento_Ui/js/lib/spinner.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery'\n], function ($) {\n    'use strict';\n\n    var selector = '[data-role=\"spinner\"]',\n        spinner = $(selector);\n\n    return {\n        show: function () {\n            spinner.show();\n        },\n\n        hide: function () {\n            spinner.hide();\n        },\n\n        get: function (id) {\n            return $(selector + '[data-component=\"' + id + '\"]');\n        }\n    };\n});\n","Magento_Ui/js/lib/key-codes.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([], function () {\n    'use strict';\n\n    return {\n        13: 'enterKey',\n        27: 'escapeKey',\n        40: 'pageDownKey',\n        38: 'pageUpKey',\n        32: 'spaceKey',\n        9:  'tabKey',\n        37: 'pageLeftKey',\n        39: 'pageRightKey',\n        17: 'ctrlKey',\n        18: 'altKey',\n        16: 'shiftKey'\n    };\n});\n","Magento_Ui/js/lib/step-wizard.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n// jscs:disable jsDoc\ndefine([\n    'uiRegistry',\n    'uiComponent',\n    'jquery',\n    'underscore',\n    'ko',\n    'mage/backend/notification'\n], function (uiRegistry, Component, $, _, ko) {\n    'use strict';\n\n    var Wizard;\n\n    ko.utils.domNodeDisposal.cleanExternalData = _.wrap(\n        ko.utils.domNodeDisposal.cleanExternalData,\n        function (func, node) {\n            if (!$(node).closest('[data-type=skipKO]').length) {\n                func(node);\n            }\n        }\n    );\n\n    Wizard = function (steps) {\n        this.steps = steps;\n        this.index = 0;\n        this.data = {};\n        this.element = $('[data-role=steps-wizard-main]');\n        this.nextLabel = '[data-role=\"step-wizard-next\"]';\n        this.prevLabel = '[data-role=\"step-wizard-prev\"]';\n        this.nextLabelText = 'Next';\n        this.prevLabelText = 'Back';\n        $(this.element).notification();\n        this.move = function (newIndex) {\n            if (!this.preventSwitch(newIndex)) {\n                if (newIndex > this.index) {\n                    this._next(newIndex);\n                } else if (newIndex < this.index) {\n                    this._prev(newIndex);\n                }\n            }\n            this.updateLabels(this.getStep());\n            this.showNotificationMessage();\n\n            return this.getStep().name;\n        };\n        this.next = function () {\n            this.move(this.index + 1);\n\n            return this.getStep().name;\n        };\n        this.prev = function () {\n            this.move(this.index - 1);\n\n            return this.getStep().name;\n        };\n        this.preventSwitch = function (newIndex) {\n            return newIndex < 0 || (newIndex - this.index) > 1;\n        };\n        this._next = function (newIndex) {\n            newIndex = _.isNumber(newIndex) ? newIndex : this.index + 1;\n\n            try {\n                this.getStep().force(this);\n\n                if (newIndex >= steps.length) {\n                    return false;\n                }\n            } catch (e) {\n                this.setNotificationMessage(e.message, true);\n\n                return false;\n            }\n            this.cleanErrorNotificationMessage();\n            this.index = newIndex;\n            this.cleanNotificationMessage();\n            this.render();\n        };\n        this._prev = function (newIndex) {\n            newIndex = _.isNumber(newIndex) ? newIndex : this.index - 1;\n            this.getStep().back(this);\n            this.index = newIndex;\n        };\n        this.getStep = function (stepIndex) {\n            return this.steps[stepIndex || this.index] || {};\n        };\n        this.notifyMessage = function (message, error) {\n            $(this.element).notification('clear').notification('add', {\n                error: error,\n                message: message\n            });\n        };\n        this.updateLabels = function (step) {\n            this.element.find(this.nextLabel).find('button').text(step.nextLabelText || this.nextLabelText);\n            this.element.find(this.prevLabel).find('button').text(step.prevLabelText || this.prevLabelText);\n        };\n        this.showNotificationMessage = function () {\n            if (!_.isEmpty(this.getStep())) {\n                this.hideNotificationMessage();\n\n                if (this.getStep().notificationMessage.text !== null) {\n                    this.notifyMessage(\n                        this.getStep().notificationMessage.text,\n                        this.getStep().notificationMessage.error\n                    );\n                }\n            }\n        };\n        this.cleanNotificationMessage = function () {\n            this.getStep().notificationMessage.text = null;\n            this.hideNotificationMessage();\n        };\n        this.cleanErrorNotificationMessage = function () {\n            if (this.getStep().notificationMessage.error === true) {\n                this.cleanNotificationMessage();\n            }\n        };\n        this.setNotificationMessage = function (text, error) {\n            error = error !== undefined;\n\n            if (!_.isEmpty(this.getStep())) {\n                this.getStep().notificationMessage.text = text;\n                this.getStep().notificationMessage.error = error;\n                this.showNotificationMessage();\n            }\n        };\n        this.hideNotificationMessage = function () {\n            $(this.element).notification('clear');\n        };\n        this.render = function () {\n            this.hideNotificationMessage();\n            this.getStep().render(this);\n        };\n        this.init = function () {\n            this.updateLabels(this.getStep());\n            this.render();\n        };\n        this.init();\n    };\n\n    return Component.extend({\n        defaults: {\n            initData: [],\n            stepsNames: [],\n            selectedStep: '',\n            steps: [],\n            disabled: true\n        },\n        initialize: function () {\n            this._super();\n            this.selectedStep.subscribe(this.wrapDisabledBackButton.bind(this));\n        },\n        initElement: function (step) {\n            step.initData = this.initData;\n            step.mode = _.all(this.initData, _.isEmpty) ? 'create' : 'edit';\n            this.steps[this.getStepIndexByName(step.name)] = step;\n        },\n        initObservable: function () {\n            this._super().observe([\n                'selectedStep',\n                'disabled'\n            ]);\n\n            return this;\n        },\n        wrapDisabledBackButton: function (stepName) {\n            if (_.first(this.stepsNames) === stepName) {\n                this.disabled(true);\n            } else {\n                this.disabled(false);\n            }\n        },\n        getStepIndexByName: function (stepName) {\n            return _.indexOf(this.stepsNames, stepName);\n        },\n        //controls, todo to another object\n        next: function () {\n            this.selectedStep(this.wizard.next());\n        },\n        back: function () {\n            this.selectedStep(this.wizard.prev());\n        },\n        open: function () {\n            this.selectedStep(this.stepsNames.first());\n            this.wizard = new Wizard(this.steps);\n            $('[data-role=step-wizard-dialog]').trigger('openModal');\n        },\n        close: function () {\n            $('[data-role=step-wizard-dialog]').trigger('closeModal');\n        },\n        showSpecificStep: function () {\n            var index = _.indexOf(this.stepsNames, event.target.hash.substr(1)),\n                stepName = this.wizard.move(index);\n\n            this.selectedStep(stepName);\n        }\n    });\n});\n","Magento_Ui/js/lib/collapsible.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiComponent'\n], function (Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            opened: false,\n            collapsible: true\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Collapsible} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe('opened');\n\n            return this;\n        },\n\n        /**\n         * Toggles value of the 'opened' property.\n         *\n         * @returns {Collapsible} Chainable.\n         */\n        toggleOpened: function () {\n            this.opened() ?\n                this.close() :\n                this.open();\n\n            return this;\n        },\n\n        /**\n         * Sets 'opened' flag to false.\n         *\n         * @returns {Collapsible} Chainable.\n         */\n        close: function () {\n            if (this.collapsible) {\n                this.opened(false);\n            }\n\n            return this;\n        },\n\n        /**\n         * Sets 'opened' flag to true.\n         *\n         * @returns {Collapsible} Chainable.\n         */\n        open: function () {\n            if (this.collapsible) {\n                this.opened(true);\n            }\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/lib/view/utils/bindings.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'jquery',\n    'underscore'\n], function (ko, $, _) {\n    'use strict';\n\n    /**\n     * Checks if provided  value is a dom element.\n     *\n     * @param {*} node - Value to be checked.\n     * @returns {Boolean}\n     */\n    function isDomElement(node) {\n        return typeof node === 'object' && node.tagName && node.nodeType;\n    }\n\n    /**\n     * Removes from the provided array all non-root nodes located inside\n     * of the comment element as long as the closing comment tags.\n     *\n     * @param {(Array|ArrayLike)} nodes - An array of nodes to be processed.\n     * @returns {Array}\n     */\n    function normalize(nodes) {\n        var result;\n\n        nodes   = _.toArray(nodes);\n        result  = nodes.slice();\n\n        nodes.forEach(function (node) {\n            if (node.nodeType === 8) {\n                result = !ko.virtualElements.hasBindingValue(node) ?\n                    _.without(result, node) :\n                    _.difference(result, ko.virtualElements.childNodes(node));\n            }\n        });\n\n        return result;\n    }\n\n    /**\n     * Extends binding context of each item in the collection.\n     *\n     * @param {...Object} extenders - Multiple extender objects to be applied to the context.\n     * @returns {jQueryCollection} Chainable.\n     */\n    $.fn.extendCtx = function () {\n        var nodes       = normalize(this),\n            extenders   = _.toArray(arguments);\n\n        nodes.forEach(function (node) {\n            var ctx  = ko.contextFor(node),\n                data = [ctx].concat(extenders);\n\n            _.extend.apply(_, data);\n        });\n\n        return this;\n    };\n\n    /**\n     * Evaluates bindings specified in each DOM element of collection.\n     *\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\n     *      If not specified then current context of a collections' item will be used.\n     * @returns {jQueryCollection} Chainable.\n     */\n    $.fn.applyBindings = function (ctx) {\n        var nodes = normalize(this),\n            nodeCtx;\n\n        if (isDomElement(ctx)) {\n            ctx = ko.contextFor(ctx);\n        }\n\n        nodes.forEach(function (node) {\n            nodeCtx = ctx || ko.contextFor(node);\n\n            ko.applyBindings(nodeCtx, node);\n        });\n\n        return this;\n    };\n\n    /**\n     * Adds specfied bindings to each DOM elemenet in\n     * collection and evalutes them with provided context.\n     *\n     * @param {(Object|Function)} data - Either bindings object or a function\n     *      which returns bindings data for each element in collection.\n     * @param {(HTMLElement|Object)} [ctx] - Context to use for bindings evaluation.\n     *      If not specified then current context of a collections' item will be used.\n     * @returns {jQueryCollection} Chainable.\n     */\n    $.fn.bindings = function (data, ctx) {\n        var nodes    = normalize(this),\n            bindings = data,\n            nodeCtx;\n\n        if (isDomElement(ctx)) {\n            ctx = ko.contextFor(ctx);\n        }\n\n        nodes.forEach(function (node) {\n            nodeCtx = ctx || ko.contextFor(node);\n\n            if (_.isFunction(data)) {\n                bindings = data(nodeCtx, node);\n            }\n\n            ko.applyBindingsToNode(node, bindings, nodeCtx);\n        });\n\n        return this;\n    };\n});\n","Magento_Ui/js/lib/view/utils/raf.js":"<!--\n/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n-->\n\ndefine(function () {\n    'use strict';\n\n    return window.requestAnimationFrame ||\n        window.webkitRequestAnimationFrame ||\n        window.mozRequestAnimationFrame||\n        window.onRequestAnimationFrame ||\n        window.msRequestAnimationFrame ||\n        function(callback){\n            window.setTimeout(callback, 1000/60);\n        }\n});\n","Magento_Ui/js/lib/view/utils/async.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'jquery',\n    'underscore',\n    'uiRegistry',\n    './dom-observer',\n    'Magento_Ui/js/lib/ko/extender/bound-nodes',\n    './bindings'\n], function (ko, $, _, registry, domObserver, boundedNodes) {\n    'use strict';\n\n    /**\n     * Checks if provided value is a dom element.\n     *\n     * @param {*} node - Value to be checked.\n     * @returns {Boolean}\n     */\n    function isDomElement(node) {\n        return typeof node === 'object' && node.tagName && node.nodeType;\n    }\n\n    /**\n     * Parses provided string and extracts\n     * component, context and selector data from it.\n     *\n     * @param {String} str - String to be processed.\n     * @returns {Object} Data retrieved from string.\n     *\n     * @example Sample format.\n     *      '{{component}}:{{ctx}} -> {{selector}}'\n     *\n     *      component - Name of component.\n     *      ctx - Selector of the root node upon which component is binded.\n     *      selector - Selector of DOM elements located\n     *          inside of a previously specified context.\n     */\n    function parseSelector(str) {\n        var data    = str.trim().split('->'),\n            result  = {},\n            componentData;\n\n        if (data.length === 1) {\n            if (!~data[0].indexOf(':')) {\n                result.selector = data[0];\n            } else {\n                componentData = data[0];\n            }\n        } else {\n            componentData   = data[0];\n            result.selector = data[1];\n        }\n\n        if (componentData) {\n            componentData = componentData.split(':');\n\n            result.component = componentData[0];\n            result.ctx = componentData[1];\n        }\n\n        _.each(result, function (value, key) {\n            result[key] = value.trim();\n        });\n\n        return result;\n    }\n\n    /**\n     * Internal method used to normalize argumnets passed\n     * to 'async' module methods.\n     *\n     * @param {(String|Objetc)} selector\n     * @param {(HTMLElement|Object|String)} [ctx]\n     * @returns {Object}\n     */\n    function parseData(selector, ctx) {\n        var data = {};\n\n        if (arguments.length === 2) {\n            data.selector = selector;\n\n            if (isDomElement(ctx)) {\n                data.ctx = ctx;\n            } else {\n                data.component = ctx;\n                data.ctx = '*';\n            }\n        } else {\n            data = _.isString(selector) ?\n                parseSelector(selector) :\n                selector;\n        }\n\n        return data;\n    }\n\n    /**\n     * Creates promise that will be resolved\n     * when requested component is registred.\n     *\n     * @param {String} name - Name of component.\n     * @returns {jQueryPromise}\n     */\n    function waitComponent(name) {\n        var deffer = $.Deferred();\n\n        if (_.isString(name)) {\n            registry.get(name, function (component) {\n                deffer.resolve(component);\n            });\n        } else {\n            deffer.resolve(name);\n        }\n\n        return deffer.promise();\n    }\n\n    /**\n     * Creates listener for the nodes binded to provided component.\n     *\n     * @param {Object} data - Listener data.\n     * @param {Object} component - Associated with nodes component.\n     */\n    function setRootListener(data, component) {\n        boundedNodes.get(component, function (root) {\n            if (!$(root).is(data.ctx || '*')) {\n                return;\n            }\n\n            data.selector ?\n                domObserver.get(data.selector, data.fn, root) :\n                data.fn(root);\n        });\n    }\n\n    /*eslint-disable no-unused-vars*/\n    /**\n     * Sets listener for the appearance of elements which\n     * matches specified selector data.\n     *\n     * @param {(String|Object)} selector - Valid css selector or a string\n     *      in format acceptable by 'parseSelector' method or an object with\n     *      'component', 'selector' and 'ctx' properties.\n     * @param {(HTMLElement|Object|String)} [ctx] - Optional context parameter\n     *      which might be a DOM element, component instance or components' name.\n     * @param {Function} fn - Callback that will be invoked\n     *      when required DOM element appears.\n     *\n     * @example\n     *      Creating listener of the 'span' nodes appearance,\n     *      located inside of 'div' nodes, which are binded to 'cms_page_listing' component:\n     *\n     *      $.async('cms_page_listing:div -> span', function (node) {});\n     *\n     * @example Another syntaxes of the previous example.\n     *      $.async({\n     *          component: 'cms_page_listing',\n     *          ctx: 'div',\n     *          selector: 'span'\n     *       }, function (node) {});\n     *\n     * @example Listens for appearance of any child node inside of specified component.\n     *      $.async('> *', 'cms_page_lsiting', function (node) {});\n     *\n     * @example Listens for appearance of 'span' nodes inside of specific context.\n     *      $.async('span', document.getElementById('test'), function (node) {});\n     */\n    $.async = function (selector, ctx, fn) {\n        var args = _.toArray(arguments),\n            data = parseData.apply(null, _.initial(args));\n\n        data.fn = _.last(args);\n\n        if (data.component) {\n            waitComponent(data.component)\n                .then(setRootListener.bind(null, data));\n        } else {\n            domObserver.get(data.selector, data.fn, data.ctx);\n        }\n    };\n\n    /*eslint-enable no-unused-vars*/\n\n    _.extend($.async, {\n\n        /*eslint-disable no-unused-vars*/\n        /**\n         * Returns collection of elements found by provided selector data.\n         *\n         * @param {(String|Object)} selector - See 'async' definition.\n         * @param {(HTMLElement|Object|String)} [ctx] - See 'async' definition.\n         * @returns {Array} An array of DOM elements.\n         */\n        get: function (selector, ctx) {\n            var data        = parseData.apply(null, arguments),\n                component   = data.component,\n                nodes;\n\n            if (!component) {\n                return $(data.selector, data.ctx).toArray();\n            } else if (_.isString(component)) {\n                component = registry.get(component);\n            }\n\n            if (!component) {\n                return [];\n            }\n\n            nodes = boundedNodes.get(component);\n            nodes = $(nodes).filter(data.ctx).toArray();\n\n            return data.selector ?\n                $(data.selector, nodes).toArray() :\n                nodes;\n        },\n\n        /*eslint-enable no-unused-vars*/\n\n        /**\n         * Sets removal listener of the specified nodes.\n         *\n         * @param {(HTMLElement|Array|ArrayLike)} nodes - Nodes whose removal to track.\n         * @param {Function} fn - Callback that will be invoked when node is removed.\n         */\n        remove: function (nodes, fn) {\n            domObserver.remove(nodes, fn);\n        },\n\n        parseSelector: parseSelector\n    });\n\n    return $;\n});\n","Magento_Ui/js/lib/view/utils/dom-observer.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'MutationObserver'\n], function ($, _) {\n    'use strict';\n\n    var counter = 1,\n        watchers,\n        globalObserver;\n\n    watchers = {\n        selectors: {},\n        nodes: {}\n    };\n\n    /**\n     * Checks if node represents an element node (nodeType === 1).\n     *\n     * @param {HTMLElement} node\n     * @returns {Boolean}\n     */\n    function isElementNode(node) {\n        return node.nodeType === 1;\n    }\n\n    /**\n     * Extracts all child descendant\n     * elements of a specified node.\n     *\n     * @param {HTMLElement} node\n     * @returns {Array}\n     */\n    function extractChildren(node) {\n        var children = node.querySelectorAll('*');\n\n        return _.toArray(children);\n    }\n\n    /**\n     * Extracts node identifier. If ID is not specified,\n     * then it will be created for the provided node.\n     *\n     * @param {HTMLElement} node\n     * @returns {Number}\n     */\n    function getNodeId(node) {\n        var id = node._observeId;\n\n        if (!id) {\n            id = node._observeId = counter++;\n        }\n\n        return id;\n    }\n\n    /**\n     * Invokes callback passing node to it.\n     *\n     * @param {HTMLElement} node\n     * @param {Object} data\n     */\n    function trigger(node, data) {\n        var id = getNodeId(node),\n            ids = data.invoked;\n\n        if (_.contains(ids, id)) {\n            return;\n        }\n\n        data.callback(node);\n        data.invoked.push(id);\n    }\n\n    /**\n     * Adds node to the observer list.\n     *\n     * @param {HTMLElement} node\n     * @returns {Object}\n     */\n    function createNodeData(node) {\n        var nodes   = watchers.nodes,\n            id      = getNodeId(node);\n\n        nodes[id] = nodes[id] || {};\n\n        return nodes[id];\n    }\n\n    /**\n     * Returns data associated with a specified node.\n     *\n     * @param {HTMLElement} node\n     * @returns {Object|Undefined}\n     */\n    function getNodeData(node) {\n        var nodeId = node._observeId;\n\n        return watchers.nodes[nodeId];\n    }\n\n    /**\n     * Removes data associated with a specified node.\n     *\n     * @param {HTMLElement} node\n     */\n    function removeNodeData(node) {\n        var nodeId = node._observeId;\n\n        delete watchers.nodes[nodeId];\n    }\n\n    /**\n     * Adds removal listener for a specified node.\n     *\n     * @param {HTMLElement} node\n     * @param {Object} data\n     */\n    function addRemovalListener(node, data) {\n        var nodeData = createNodeData(node);\n\n        (nodeData.remove = nodeData.remove || []).push(data);\n    }\n\n    /**\n     * Adds listener for the nodes which matches specified selector.\n     *\n     * @param {String} selector - CSS selector.\n     * @param {Object} data\n     */\n    function addSelectorListener(selector, data) {\n        var storage = watchers.selectors;\n\n        (storage[selector] = storage[selector] || []).push(data);\n    }\n\n    /**\n     * Calls handlers assocoiated with an added node.\n     * Adds listeners for the node removal.\n     *\n     * @param {HTMLElement} node - Added node.\n     */\n    function processAdded(node) {\n        _.each(watchers.selectors, function (listeners, selector) {\n            listeners.forEach(function (data) {\n                if (!data.ctx.contains(node) || !$(node, data.ctx).is(selector)) {\n                    return;\n                }\n\n                if (data.type === 'add') {\n                    trigger(node, data);\n                } else if (data.type === 'remove') {\n                    addRemovalListener(node, data);\n                }\n            });\n        });\n    }\n\n    /**\n     * Calls handlers assocoiated with a removed node.\n     *\n     * @param {HTMLElement} node - Removed node.\n     */\n    function processRemoved(node) {\n        var nodeData    = getNodeData(node),\n            listeners   = nodeData && nodeData.remove;\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(function (data) {\n            trigger(node, data);\n        });\n\n        removeNodeData(node);\n    }\n\n    /**\n     * Removes all non-element nodes from provided array\n     * and appends to it descendant elements.\n     *\n     * @param {Array} nodes\n     * @returns {Array}\n     */\n    function formNodesList(nodes) {\n        var result = [],\n            children;\n\n        nodes = _.toArray(nodes).filter(isElementNode);\n\n        nodes.forEach(function (node) {\n            result.push(node);\n\n            children = extractChildren(node);\n            result   = result.concat(children);\n        });\n\n        return result;\n    }\n\n    /**\n     * Collects all removed and added nodes from\n     * mutation records into separate arrays\n     * while removing duplicates between both types of changes.\n     *\n     * @param {Array} mutations - An array of mutation records.\n     * @returns {Object} Object with 'removed' and 'added' nodes arrays.\n     */\n    function formChangesLists(mutations) {\n        var removed = [],\n            added = [];\n\n        mutations.forEach(function (record) {\n            removed = removed.concat(_.toArray(record.removedNodes));\n            added   = added.concat(_.toArray(record.addedNodes));\n        });\n\n        removed = removed.filter(function (node) {\n            var addIndex = added.indexOf(node),\n                wasAdded = !!~addIndex;\n\n            if (wasAdded) {\n                added.splice(addIndex, 1);\n            }\n\n            return !wasAdded;\n        });\n\n        return {\n            removed: formNodesList(removed),\n            added: formNodesList(added)\n        };\n    }\n\n    globalObserver = new MutationObserver(function (mutations) {\n        var changes = formChangesLists(mutations);\n\n        changes.removed.forEach(processRemoved);\n        changes.added.forEach(processAdded);\n    });\n\n    globalObserver.observe(document.body, {\n        subtree: true,\n        childList: true\n    });\n\n    return {\n\n        /**\n         * Adds listener for the appearance of nodes that matches provided\n         * selector and which are inside of the provided context. Callback will be\n         * also invoked on elements which a currently present.\n         *\n         * @param {String} selector - CSS selector.\n         * @param {Function} callback - Function that will invoked when node appears.\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\n         */\n        get: function (selector, callback, ctx) {\n            var data,\n                nodes;\n\n            data = {\n                ctx: ctx || document.body,\n                type: 'add',\n                callback: callback,\n                invoked: []\n            };\n\n            nodes = $(selector, data.ctx).toArray();\n\n            nodes.forEach(function (node) {\n                trigger(node, data);\n            });\n\n            addSelectorListener(selector, data);\n        },\n\n        /**\n         * Adds listener for the nodes removal.\n         *\n         * @param {(jQueryObject|HTMLElement|Array|String)} selector\n         * @param {Function} callback - Function that will invoked when node is removed.\n         * @param {HTMLElement} [ctx=document.body] - Context inside of which to search for the node.\n         */\n        remove: function (selector, callback, ctx) {\n            var nodes = [],\n                data;\n\n            data = {\n                ctx: ctx || document.body,\n                type: 'remove',\n                callback: callback,\n                invoked: []\n            };\n\n            if (typeof selector === 'object') {\n                nodes = !_.isUndefined(selector.length) ?\n                    _.toArray(selector) :\n                    [selector];\n            } else if (_.isString(selector)) {\n                nodes = $(selector, ctx).toArray();\n\n                addSelectorListener(selector, data);\n            }\n\n            nodes.forEach(function (node) {\n                addRemovalListener(node, data);\n            });\n        },\n\n        /**\n         * Removes listeners.\n         *\n         * @param {String} selector\n         * @param {Function} [fn]\n         */\n        off: function (selector, fn) {\n            var selectors = watchers.selectors,\n                listeners = selectors[selector];\n\n            if (selector && !fn) {\n                delete selectors[selector];\n            } else if (listeners && fn) {\n                selectors[selector] = listeners.filter(function (data) {\n                    return data.callback !== fn;\n                });\n            }\n        }\n    };\n});\n","Magento_Ui/js/lib/registry/storage.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'es6-collections'\n], function () {\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    function Storage() {\n        this.data = new Map();\n    }\n\n    Storage.prototype = {\n        constructor: Storage,\n\n        /**\n         * Retrieves values of the specified elements.\n         *\n         * @param {Array} elems - An array of elements.\n         * @returns {Array} Array of values.\n         */\n        get: function (elems) {\n            var data = this.data;\n\n            elems = elems || [];\n\n            return elems.map(function (elem) {\n                return data.get(elem);\n            });\n        },\n\n        /**\n         * Sets key -> value pair.\n         *\n         * @param {String} elem - Elements' name.\n         * @param {*} value - Value of the element.\n         * returns {storage} Chainable.\n         */\n        set: function (elem, value) {\n            var data  = this.data;\n\n            data.set(elem, value);\n\n            return this;\n        },\n\n        /**\n         * Removes specified elements from storage.\n         *\n         * @param {Array} elems - An array of elements to be removed.\n         * returns {storage} Chainable.\n         */\n        remove: function (elems) {\n            var data = this.data;\n\n            elems.forEach(function (elem) {\n                data.delete(elem);\n            });\n\n            return this;\n        },\n\n        /**\n         * Checks whether all of the specified elements has been registered.\n         *\n         * @param {Array} elems - An array of elements.\n         * @returns {Boolean}\n         */\n        has: function (elems) {\n            var data = this.data;\n\n            return elems.every(function (elem) {\n                return data.has(elem);\n            });\n        }\n    };\n\n    return Storage;\n});\n","Magento_Ui/js/lib/registry/events.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    'es6-collections'\n], function (_, utils) {\n    'use strict';\n\n    /**\n     * @constructor\n     */\n    function Events(storage) {\n        this.id = 0;\n\n        this.requests = new Map();\n        this.map = {};\n        this.storage = storage;\n\n        _.bindAll(this, '_resolve', '_clear');\n    }\n\n    Events.prototype = {\n        constructor: Events,\n\n        /**\n         * Tries to resolve dependencies affected by the scpecified element.\n         * @param {String} elem - Elements' name.\n         * @returns {Object} Chainable.\n         */\n        resolve: function (elem) {\n            var pending = this.map[elem];\n\n            if (Array.isArray(pending)) {\n                pending\n                    .filter(this._resolve)\n                    .forEach(this._clear);\n            }\n\n            return this;\n        },\n\n        /**\n         * Creates a new request for the specified set\n         *      of elements in case some of them wasn't registered yeat.\n         *      Otherwise triggers callback immediately.\n         * @param {Array} elems - Requested elements.\n         * @param {Object} callback - that will be triggered as soon as\n         *      all of the elements will be registered.\n         * @returns {events} Chainable.\n         */\n        wait: function (elems, callback) {\n            var storage = this.storage,\n                map = this.map;\n\n            if (storage.has(elems)) {\n                return callback.apply(null, storage.get(elems));\n            }\n\n            elems.forEach(function (elem) {\n                (map[elem] = map[elem] || []).push(this.id);\n            }, this);\n\n            this.requests.set(this.id++, {\n                callback: callback,\n                deps: elems\n            });\n\n            return this;\n        },\n\n        /**\n         * Tries to resolve pending request.\n         * @private\n         * @param {Number} id - Id of request.\n         * @returns {Boolean} Whether specified request was successfully resolved.\n         */\n        _resolve: function (id) {\n            var request = this.requests.get(id),\n                elems = request.deps,\n                storage = this.storage,\n                isResolved;\n\n            isResolved = storage.has(elems);\n\n            if (isResolved) {\n                request.callback.apply(null, storage.get(elems));\n            }\n\n            return isResolved;\n        },\n\n        /**\n         * Clears all of the entries of a specified request.\n         * @private\n         * @param {Number} id - Id of request.\n         */\n        _clear: function (id) {\n            var map = this.map,\n                elems = this.requests.get(id).deps;\n\n            elems.forEach(function (elem) {\n                utils.remove(map[elem], id);\n\n                if (!map[elem].length) {\n                    delete map[elem];\n                }\n            });\n\n            this.requests.delete(id);\n        }\n    };\n\n    return Events;\n});\n","Magento_Ui/js/lib/registry/registry.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'mageUtils',\n    'underscore',\n    './storage',\n    './events'\n], function (utils, _, Storage, Events) {\n    'use strict';\n\n    /**\n     * Wrapper function used for convinient access to elements.\n     * See 'async' method for examples of usage and comparison\n     * with a regular 'get' method.\n     *\n     * @param {String} name - Key of the requested element.\n     * @param {Registry} registry - Instance of a registry\n     *      where to search for the element.\n     * @param {(Function|String)} [method] - Optional callback function\n     *      or a name of the elements' method which\n     *      will be invoked when element is registered.\n     * @returns {*}\n     */\n    function async(name, registry, method) {\n        var args = _.toArray(arguments).slice(3);\n\n        if (_.isString(method)) {\n            registry.get(name, function (component) {\n                component[method].apply(component, args);\n            });\n        } else if (_.isFunction(method)) {\n            registry.get(name, method);\n        } else if (!args.length) {\n            return registry.get(name);\n        }\n    }\n\n    /**\n     * @constructor\n     */\n    function Registry() {\n        this.storage = new Storage();\n        this.events = new Events(this.storage);\n    }\n\n    Registry.prototype = {\n        constructor: Registry,\n\n        /**\n         * Retrieves data from registry.\n         *\n         * @param {(String|Array)} elems - An array of elements' names or\n         *      a string of names divided by spaces.\n         * @param {Function} [callback] - Callback function that will be invoked\n         *      when all of the requested elements are registered.\n         * @returns {Array|*|Undefined} An array of elements\n         *      or an element itself if only one was requested.\n         */\n        get: function (elems, callback) {\n            var records;\n\n            elems = utils.stringToArray(elems) || [];\n\n            if (typeof callback !== 'undefined') {\n                this.events.wait(elems, callback);\n            } else {\n                records = this.storage.get(elems);\n\n                return elems.length > 1 ?\n                    records :\n                    records[0];\n            }\n        },\n\n        /**\n         * Sets data to registry.\n         *\n         * @param {String} elem - Elements' name.\n         * @param {*} value - Value that will be assigned to the element.\n         * @returns {Registry} Chainable.\n         */\n        set: function (elem, value) {\n            this.storage.set(elem, value);\n            this.events.resolve(elem);\n\n            return this;\n        },\n\n        /**\n         * Removes specified elements from a storage.\n         *\n         * @param {(String|Array)} elems - An array of elements' names or\n         *      a string of names divided by spaces.\n         * @returns {Registry} Chainable.\n         */\n        remove: function (elems) {\n            elems = utils.stringToArray(elems);\n\n            this.storage.remove(elems);\n\n            return this;\n        },\n\n        /**\n         * Checks whether specified elements has been registered.\n         *\n         * @param {(String|Array)} elems - An array of elements' names or\n         *      a string of names divided by spaces.\n         * @returns {Boolean}\n         */\n        has: function (elems) {\n            elems = utils.stringToArray(elems);\n\n            return this.storage.has(elems);\n        },\n\n        /**\n         * Creates a function wrapper for the specified element,\n         * to provide more convinient access.\n         *\n         * @param {String} name - Name of the element.\n         * @returns {Function}\n         *\n         * @example Comparison with a 'get' method on requesting elements.\n         *      var module = registry.async('name');\n         *\n         *      module();\n         *      => registry.get('name');\n         *\n         * @example Requesting an element with a callback.\n         *      module(function (component) {});\n         *\n         *      => registry.get('name', function (component) {});\n         *\n         * @example Requesting an element and invoking its' method.\n         *      module('trigger', true);\n         *\n         *      => registry.get('name', function (component) {\n         *          component.trigger(true);\n         *      });\n         */\n        async: function (name) {\n            return async.bind(null, name, this);\n        },\n\n        /**\n         * Creates new instance of a Registry.\n         *\n         * @returns {Registry} New instance.\n         */\n        create: function () {\n            return new Registry;\n        }\n    };\n\n    return new Registry;\n});\n","Magento_Ui/js/lib/core/class.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    'mage/utils/wrapper'\n], function (_, utils, wrapper) {\n    'use strict';\n\n    var Class;\n\n    /**\n     * Returns property of an object if\n     * it's his own property.\n     *\n     * @param {Object} obj - Object whose property should be retrieved.\n     * @param {String} prop - Name of the property.\n     * @returns {*} Value of the property or false.\n     */\n    function getOwn(obj, prop) {\n        return _.isObject(obj) && obj.hasOwnProperty(prop) && obj[prop];\n    }\n\n    /**\n     * Creates constructor function which allows\n     * initialization without usage of a 'new' operator.\n     *\n     * @param {Object} protoProps - Prototypal propeties of a new consturctor.\n     * @returns {Function} Created consturctor.\n     */\n    function createConstructor(protoProps, consturctor) {\n        var constr = consturctor;\n\n        if (!constr) {\n\n            /**\n             * Default constructor function.\n             */\n            constr = function () {\n                var obj = this;\n\n                if (!_.isObject(obj) || Object.getPrototypeOf(obj) !== constr.prototype) {\n                    obj = Object.create(constr.prototype);\n                }\n\n                obj.initialize.apply(obj, arguments);\n\n                return obj;\n            };\n        }\n\n        constr.prototype = protoProps;\n        constr.prototype.constructor = constr;\n\n        return constr;\n    }\n\n    Class = createConstructor({\n\n        /**\n         * Entry point to the initialization of consturctors' instance.\n         *\n         * @param {Object} [options={}]\n         * @returns {Class} Chainable.\n         */\n        initialize: function (options) {\n            this.initConfig(options);\n\n            return this;\n        },\n\n        /**\n         * Recursively extends data specified in constructors' 'defaults'\n         * property with provided options object. Evaluates resulting\n         * object using string templates (see: mage/utils/template.js).\n         *\n         * @param {Object} [options={}]\n         * @returns {Class} Chainable.\n         */\n        initConfig: function (options) {\n            var defaults    = this.constructor.defaults,\n                config      = utils.extend({}, defaults, options || {}),\n                ignored     = config.ignoreTmpls || {},\n                cached      = utils.omit(config, ignored);\n\n            config = utils.template(config, this, false, true);\n\n            _.each(cached, function (value, key) {\n                utils.nested(config, key, value);\n            });\n\n            return _.extend(this, config);\n        }\n    });\n\n    _.extend(Class, {\n        defaults: {\n            ignoreTmpls: {\n                templates: true\n            }\n        },\n\n        /**\n         * Creates new constructor based on a current prototype properties,\n         * extending them with properties specified in 'exender' object.\n         *\n         * @param {Object} [extender={}]\n         * @returns {Function} New constructor.\n         */\n        extend: function (extender) {\n            var parent      = this,\n                parentProto = parent.prototype,\n                childProto  = Object.create(parentProto),\n                child       = createConstructor(childProto, getOwn(extender, 'constructor')),\n                defaults;\n\n            extender = extender || {};\n            defaults = extender.defaults;\n\n            delete extender.defaults;\n\n            _.each(extender, function (method, name) {\n                childProto[name] = wrapper.wrapSuper(parentProto[name], method);\n            });\n\n            child.defaults = utils.extend({}, parent.defaults || {});\n\n            if (defaults) {\n                utils.extend(child.defaults, defaults);\n                extender.defaults = defaults;\n            }\n\n            return _.extend(child, {\n                __super__:  parentProto,\n                extend:     parent.extend\n            });\n\n        }\n    });\n\n    return Class;\n});\n","Magento_Ui/js/lib/core/storage.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiRegistry',\n    'mageUtils',\n    'uiEvents'\n], function (_, registry, utils, EventsBus) {\n    'use strict';\n\n    var root = 'appData',\n        localStorage = window.localStorage,\n        hasSupport,\n        storage;\n\n    /**\n     * Flag which indicates whether localStorage is supported.\n     */\n    hasSupport = (function () {\n        var key = '_storageSupported';\n\n        try {\n            localStorage.setItem(key, 'true');\n\n            if (localStorage.getItem(key) === 'true') {\n                localStorage.removeItem(key);\n\n                return true;\n            }\n\n            return false;\n        } catch (e) {\n            return false;\n        }\n    })();\n\n    if (!hasSupport) {\n        localStorage = {\n            _data: {},\n\n            /**\n             * Sets value of the specified item.\n             *\n             * @param {String} key - Key of the property.\n             * @param {*} value - Properties' value.\n             */\n            setItem: function (key, value) {\n                this._data[key] = value + '';\n            },\n\n            /**\n             * Retrieves specfied item.\n             *\n             * @param {String} key - Key of the property to be retrieved.\n             */\n            getItem: function (key) {\n                return this._data[key];\n            },\n\n            /**\n             * Removes specfied item.\n             *\n             * @param {String} key - Key of the property to be removed.\n             */\n            removeItem: function (key) {\n                delete this._data[key];\n            },\n\n            /**\n             * Removes all items.\n             */\n            clear: function () {\n                this._data = {};\n            }\n        };\n    }\n\n    /**\n     * Extracts and parses data stored in localStorage by the\n     * key specified in 'root' varaible.\n     *\n     * @returns {Object}\n     */\n    function getRoot() {\n        var data = localStorage.getItem(root);\n\n        return !_.isNull(data) ? JSON.parse(data) : {};\n    }\n\n    /**\n     * Writes provided data to the localStorage.\n     *\n     * @param {*} data - Data to be stored.\n     */\n    function setRoot(data) {\n        localStorage.setItem(root, JSON.stringify(data));\n    }\n\n    /**\n     * Provides methods to work with a localStorage\n     * as a single nested structure.\n     */\n    storage = _.extend({\n\n        /**\n         * Retrieves value of the specified property.\n         *\n         * @param {String} path - Path to the property.\n         *\n         * @example Retrieveing data.\n         *      localStoarge =>\n         *          'appData' => '\n         *              \"one\": {\"two\": \"three\"}\n         *          '\n         *      storage.get('one.two')\n         *      => \"three\"\n         *\n         *      storage.get('one')\n         *      => {\"two\": \"three\"}\n         */\n        get: function (path) {\n            var data = getRoot();\n\n            return utils.nested(data, path);\n        },\n\n        /**\n         * Sets specified data to the localStorage.\n         *\n         * @param {String} path - Path of the property.\n         * @param {*} value - Value of the property.\n         *\n         * @example Setting data.\n         *      storage.set('one.two', 'four');\n         *      => localStoarge =>\n         *          'appData' => '\n         *              \"one\": {\"two\": \"four\"}\n         *          '\n         */\n        set: function (path, value) {\n            var data = getRoot();\n\n            utils.nested(data, path, value);\n\n            setRoot(data);\n        },\n\n        /**\n         * Removes specified data from the localStorage.\n         *\n         * @param {String} path - Path to the property that should be removed.\n         *\n         * @example Removing data.\n         *      storage.remove('one.two', 'four');\n         *      => localStoarge =>\n         *          'appData' => '\n         *              \"one\": {}\n         *          '\n         */\n        remove: function (path) {\n            var data = getRoot();\n\n            utils.nestedRemove(data, path);\n\n            setRoot(data);\n        }\n    }, EventsBus);\n\n    registry.set('localStorage', storage);\n\n    return storage;\n});\n","Magento_Ui/js/lib/core/events.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore',\n    'es6-collections'\n], function (ko, _) {\n    'use strict';\n\n    var eventsMap = new WeakMap();\n\n    /**\n     * Returns events map or a specific event\n     * data associated with a provided object.\n     *\n     * @param {Object} obj - Key in the events weakmap.\n     * @param {String} [name] - Name of the event.\n     * @returns {Map|Array|Boolean}\n     */\n    function getEvents(obj, name) {\n        var events = eventsMap.get(obj);\n\n        if (!events) {\n            return false;\n        }\n\n        return name ? events.get(name) : events;\n    }\n\n    /**\n     * Adds new event handler.\n     *\n     * @param {Object} obj - Key in the events weakmap.\n     * @param {String} ns - Callback namespace.\n     * @param {Fucntion} callback - Event callback.\n     * @param {String} name - Name of the event.\n     */\n    function addHandler(obj, ns, callback, name) {\n        var events      = getEvents(obj),\n            observable,\n            data;\n\n        observable = !ko.isObservable(obj[name]) ?\n            ko.getObservable(obj, name) :\n            obj[name];\n\n        if (observable) {\n            observable.subscribe(callback);\n\n            return;\n        }\n\n        if (!events) {\n            events = new Map();\n\n            eventsMap.set(obj, events);\n        }\n\n        data = {\n            callback: callback,\n            ns: ns\n        };\n\n        events.has(name) ?\n            events.get(name).push(data) :\n            events.set(name, [data]);\n    }\n\n    /**\n     * Invokes provided callbacks with a specified arguments.\n     *\n     * @param {Array} handlers\n     * @param {Array} args\n     * @returns {Boolean}\n     */\n    function trigger(handlers, args) {\n        var bubble = true,\n            callback;\n\n        handlers.forEach(function (handler) {\n            callback = handler.callback;\n\n            if (callback.apply(null, args) === false) {\n                bubble = false;\n            }\n        });\n\n        return bubble;\n    }\n\n    return {\n\n        /**\n         * Calls callback when name event is triggered.\n         * @param  {String}   events\n         * @param  {Function} callback\n         * @return {Object} reference to this\n         */\n        on: function (events, callback, ns) {\n            var iterator;\n\n            if (arguments.length < 2) {\n                ns = callback;\n            }\n\n            iterator = addHandler.bind(null, this, ns);\n\n            _.isObject(events) ?\n                _.each(events, iterator) :\n                iterator(callback, events);\n\n            return this;\n        },\n\n        /**\n         * Removed callback from listening to target event\n         * @param  {String} ns\n         * @return {Object} reference to this\n         */\n        off: function (ns) {\n            var storage = getEvents(this);\n\n            if (!storage) {\n                return this;\n            }\n\n            storage.forEach(function (handlers, name) {\n                handlers = handlers.filter(function (handler) {\n                    return !ns ? false : handler.ns !== ns;\n                });\n\n                handlers.length ?\n                    storage.set(name, handlers) :\n                    storage.delete(name);\n            });\n\n            return this;\n        },\n\n        /**\n         * Triggers event and executes all attached callbacks.\n         *\n         * @param {String} name - Name of the event to be triggered.\n         * @returns {Boolean}\n         */\n        trigger: function (name) {\n            var handlers,\n                args;\n\n            handlers = getEvents(this, name),\n            args = _.toArray(arguments).slice(1);\n\n            if (!handlers || !name) {\n                return true;\n            }\n\n            return trigger(handlers, args);\n        }\n    };\n});\n","Magento_Ui/js/lib/core/collection.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiRegistry',\n    'uiElement'\n], function (_, utils, registry, Element) {\n    'use strict';\n\n    /**\n     * Removes non plain object items from the specfied array.\n     *\n     * @param {Array} container - Array whose value should be filtered.\n     * @returns {Array}\n     */\n    function compact(container) {\n        return container.filter(utils.isObject);\n    }\n\n    return Element.extend({\n        defaults: {\n            template: 'ui/collection',\n            _elems: [],\n            ignoreTmpls: {\n                childDefaults: true\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Model} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    elems: []\n                });\n\n            return this;\n        },\n\n        /**\n         * Called when another element was added to current component.\n         *\n         * @param {Object} elem - Instance of an element that was added.\n         * @returns {Collection} Chainable.\n         */\n        initElement: function (elem) {\n            elem.initContainer(this);\n\n            return this;\n        },\n\n        /**\n         * Returns instance of a child found by provided index.\n         *\n         * @param {String} index - Index of a child.\n         * @returns {Object}\n         */\n        getChild: function (index) {\n            return _.findWhere(this.elems(), {\n                index: index\n            });\n        },\n\n        /**\n         * Requests specified components to insert\n         * them into 'elems' array starting from provided position.\n         *\n         * @param {(String|Array)} elems - Name of the component to insert.\n         * @param {Number} [position=-1] - Position at which to insert elements.\n         * @returns {Collection} Chainable.\n         */\n        insertChild: function (elems, position) {\n            var container   = this._elems,\n                insert      = this._insert.bind(this),\n                update;\n\n            if (!Array.isArray(elems)) {\n                elems = [elems];\n            }\n\n            elems.map(function (item) {\n                return item.elem ?\n                    utils.insert(item.elem, container, item.position) :\n                    utils.insert(item, container, position);\n            }).forEach(function (item) {\n                if (item === true) {\n                    update = true;\n                } else if (_.isString(item)) {\n                    registry.get(item, insert);\n                } else if (utils.isObject(item)) {\n                    insert(item);\n                }\n            });\n\n            if (update) {\n                this._updateCollection();\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes specified child from collection.\n         *\n         * @param {(Object|String)} elem - Child or index of a child to be removed.\n         * @returns {Collection} Chainable.\n         */\n        removeChild: function (elem) {\n            if (_.isString(elem)) {\n                elem = this.getChild(elem);\n            }\n\n            if (elem) {\n                utils.remove(this._elems, elem);\n                this._updateCollection();\n            }\n\n            return this;\n        },\n\n        /**\n         * Checks if specified child exists in collection.\n         *\n         * @param {Sring} index - Index of a child.\n         * @returns {Boolean}\n         */\n        hasChild: function (index) {\n            return !!this.getChild(index);\n        },\n\n        /**\n         * Creates 'async' wrapper for the specified child\n         * using uiRegistry 'async' method and caches it\n         * in a '_requested' components  object.\n         *\n         * @param {String} index - Index of a child.\n         * @returns {Function} Async module wrapper.\n         */\n        requestChild: function (index) {\n            var name = this.formChildName(index);\n\n            return this.requestModule(name);\n        },\n\n        /**\n         * Creates complete child name based on a provided index.\n         *\n         * @param {String} index - Index of a child.\n         * @returns {String}\n         */\n        formChildName: function (index) {\n            return this.name + '.' + index;\n        },\n\n        /**\n         * Retrieves requested region.\n         * Creates region if it was not created yet\n         *\n         * @returns {ObservableArray}\n         */\n        getRegion: function (name) {\n            var regions = this.regions = this.regions || {};\n\n            if (!regions[name]) {\n                regions[name] = [];\n\n                this.observe.call(regions, name);\n            }\n\n            return regions[name];\n        },\n\n        /**\n         * Replaces specified regions' data with a provided one.\n         * Creates region if it was not created yet.\n         *\n         * @param {Array} items - New regions' data.\n         * @param {String} name - Name of the region.\n         * @returns {Collection} Chainable.\n         */\n        updateRegion: function (items, name) {\n            this.getRegion(name)(items);\n\n            return this;\n        },\n\n        /**\n         * Destroys collection along with its' elements.\n         */\n        destroy: function () {\n            this._super();\n\n            this.elems.each('destroy');\n        },\n\n        /**\n         * Inserts provided component into 'elems' array at a specified position.\n         * @private\n         *\n         * @param {Object} elem - Element to insert.\n         */\n        _insert: function (elem) {\n            var index = this._elems.indexOf(elem.name);\n\n            if (~index) {\n                this._elems[index] = elem;\n            }\n\n            this._updateCollection()\n                .initElement(elem);\n        },\n\n        /**\n         * Synchronizes multiple elements arrays with a core '_elems' container.\n         * Performs elemets grouping by theirs 'displayArea' property.\n         * @private\n         *\n         * @returns {Collection} Chainable.\n         */\n        _updateCollection: function () {\n            var _elems = compact(this._elems),\n                grouped;\n\n            grouped = _elems.filter(function (elem) {\n                return elem.displayArea && _.isString(elem.displayArea);\n            });\n            grouped = _.groupBy(grouped, 'displayArea');\n\n            _.each(grouped, this.updateRegion, this);\n\n            this.elems(_elems);\n\n            return this;\n        },\n\n        /**\n         * Tries to call specified method of a current component,\n         * otherwise delegates attempt to its' children.\n         *\n         * @param {String} target - Name of the method.\n         * @param {...*} parameters - Arguments that will be passed to method.\n         * @returns {*} Result of the method calls.\n         */\n        delegate: function (target) {\n            var args = _.toArray(arguments);\n\n            target = this[target];\n\n            if (_.isFunction(target)) {\n                return target.apply(this, args.slice(1));\n            }\n\n            return this._delegate(args);\n        },\n\n        /**\n         * Calls 'delegate' method of all of it's children components.\n         * @private\n         *\n         * @param {Array} args - An array of arguments to pass to the next delegation call.\n         * @returns {Array} An array of delegation resutls.\n         */\n        _delegate: function (args) {\n            var result;\n\n            result = this.elems.map(function (elem) {\n                var target;\n\n                if (!_.isFunction(elem.delegate)) {\n                    target = elem[args[0]];\n\n                    if (_.isFunction(target)) {\n                        return target.apply(elem, args.slice(1));\n                    }\n                } else {\n                    return elem.delegate.apply(elem, args);\n                }\n            });\n\n            return _.flatten(result);\n        }\n    });\n});\n","Magento_Ui/js/lib/core/element/element.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore',\n    'mageUtils',\n    'uiRegistry',\n    'uiEvents',\n    'uiClass',\n    './links',\n    '../storage'\n], function (ko, _, utils, registry, Events, Class, links) {\n    'use strict';\n\n    var Element;\n\n    /**\n     * Creates observable property using knockouts'\n     * 'observableArray' or 'observable' methods,\n     * depending on a type of 'value' parameter.\n     *\n     * @param {Object} obj - Object to whom property belongs.\n     * @param {String} key - Key of the property.\n     * @param {*} value - Initial value.\n     */\n    function observable(obj, key, value) {\n        var method = Array.isArray(value) ? 'observableArray' : 'observable';\n\n        if (_.isFunction(obj[key]) && !ko.isObservable(obj[key])) {\n            return;\n        }\n\n        if (ko.isObservable(value)) {\n            value = value();\n        }\n\n        ko.isObservable(obj[key]) ?\n            obj[key](value) :\n            obj[key] = ko[method](value);\n    }\n\n    /**\n     * Creates observable propery using 'track' method.\n     *\n     * @param {Object} obj - Object to whom property belongs.\n     * @param {String} key - Key of the property.\n     * @param {*} value - Initial value.\n     */\n    function accessor(obj, key, value) {\n        if (_.isFunction(obj[key]) || ko.isObservable(obj[key])) {\n            return;\n        }\n\n        obj[key] = value;\n\n        if (!ko.es5.isTracked(obj, key)) {\n            ko.track(obj, [key]);\n        }\n    }\n\n    Element = _.extend({\n        defaults: {\n            template: '',\n            containers: [],\n            _requesetd: {},\n            registerNodes: true,\n            storageConfig: {\n                provider: 'localStorage',\n                namespace: '${ $.name }',\n                path: '${ $.storageConfig.provider }:${ $.storageConfig.namespace }'\n            },\n            maps: {\n                imports: {},\n                exports: {}\n            },\n            modules: {\n                storage: '${ $.storageConfig.provider }'\n            }\n        },\n\n        /**\n         * Initializes model instance.\n         *\n         * @returns {Element} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initObservable()\n                .initModules()\n                .initStatefull()\n                .initLinks()\n                .initUnique();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Element} Chainable.\n         */\n        initObservable: function () {\n            return this;\n        },\n\n        /**\n         * Parses 'modules' object and creates\n         * async wrappers for specified components.\n         *\n         * @returns {Element} Chainable.\n         */\n        initModules: function () {\n            var modules = this.modules || {};\n\n            _.each(modules, function (name, property) {\n                this[property] = this.requestModule(name);\n            }, this);\n\n            if (!_.isFunction(this.source)) {\n                this.source = registry.get(this.provider);\n            }\n\n            return this;\n        },\n\n        /**\n         * Called when current element was injected to another component.\n         *\n         * @param {Object} parent - Instance of a 'parent' component.\n         * @returns {Collection} Chainable.\n         */\n        initContainer: function (parent) {\n            this.containers.push(parent);\n\n            return this;\n        },\n\n        /**\n         * Initializes statefull properties\n         * based on the keys of 'statefull' object.\n         *\n         * @returns {Element} Chainable.\n         */\n        initStatefull: function () {\n            var statefull = this.statefull || {};\n\n            _.each(statefull, function (path, key) {\n                if (!path) {\n                    return;\n                }\n\n                this.setStatefull(key, path);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Initializes links between properties.\n         *\n         * @returns {Element} Chainbale.\n         */\n        initLinks: function () {\n            this.setListeners(this.listens)\n                .setLinks(this.links, 'imports')\n                .setLinks(this.links, 'exports');\n\n            _.each({\n                exports: this.exports,\n                imports: this.imports\n            }, this.setLinks, this);\n\n            return this;\n        },\n\n        /**\n         * Initializes listeners of the unique property.\n         *\n         * @returns {Element} Chainable.\n         */\n        initUnique: function () {\n            var update = this.onUniqueUpdate.bind(this),\n                uniqueNs = this.uniqueNs;\n\n            this.hasUnique = this.uniqueProp && uniqueNs;\n\n            if (this.hasUnique) {\n                this.source.on(uniqueNs, update, this.name);\n            }\n\n            return this;\n        },\n\n        /**\n         * Makes specified property to be stored automatically.\n         *\n         * @param {String} key - Name of the property\n         *      that will be stored.\n         * @param {String} [path=key] - Path to the property in storage.\n         * @returns {Element} Chainable.\n         */\n        setStatefull: function (key, path) {\n            var link = {};\n\n            path        = !_.isString(path) || !path ? key : path;\n            link[key]   = this.storageConfig.path + '.' + path;\n\n            this.setLinks(link, 'imports')\n                .setLinks(link, 'exports');\n\n            return this;\n        },\n\n        /**\n         * Updates property specified in uniqueNs\n         * if elements' unique property is set to 'true'.\n         *\n         * @returns {Element} Chainable.\n         */\n        setUnique: function () {\n            var property = this.uniqueProp;\n\n            if (this[property]()) {\n                this.source.set(this.uniqueNs, this.name);\n            }\n\n            return this;\n        },\n\n        /**\n         * Creates 'async' wrapper for the specified component\n         * using uiRegistry 'async' method and caches it\n         * in a '_requested' components  object.\n         *\n         * @param {String} name - Name of requested component.\n         * @returns {Function} Async module wrapper.\n         */\n        requestModule: function (name) {\n            var requested = this._requesetd;\n\n            if (!requested[name]) {\n                requested[name] = registry.async(name);\n            }\n\n            return requested[name];\n        },\n\n        /**\n         * Returns path to elements' template.\n         *\n         * @returns {String}\n         */\n        getTemplate: function () {\n            return this.template;\n        },\n\n        /**\n         * Checks if template was specified for an element.\n         *\n         * @returns {Boolean}\n         */\n        hasTemplate: function () {\n            return !!this.template;\n        },\n\n        /**\n         * Returns value of the nested property.\n         *\n         * @param {String} path - Path to the property.\n         * @returns {*} Value of the property.\n         */\n        get: function (path) {\n            return utils.nested(this, path);\n        },\n\n        /**\n         * Sets provided value as a value of the specified nested property.\n         * Triggers changes notifications, if value has mutated.\n         *\n         * @param {String} path - Path to property.\n         * @param {*} value - New value of the property.\n         * @returns {Element} Chainable.\n         */\n        set: function (path, value) {\n            var data = this.get(path),\n                diffs;\n\n            diffs = !_.isFunction(data) && !this.isTracked(path) ?\n                utils.compare(data, value, path) :\n                false;\n\n            utils.nested(this, path, value);\n\n            if (diffs) {\n                this._notifyChanges(diffs);\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes nested property from the object.\n         *\n         * @param {String} path - Path to the property.\n         * @returns {Element} Chainable.\n         */\n        remove: function (path) {\n            var data = utils.nested(this, path),\n                diffs;\n\n            if (_.isUndefined(data) || _.isFunction(data)) {\n                return this;\n            }\n\n            diffs = utils.compare(data, undefined, path);\n\n            utils.nestedRemove(this, path);\n\n            this._notifyChanges(diffs);\n\n            return this;\n        },\n\n        /**\n         * Creates observable properties for the current object.\n         *\n         * If 'useTrack' flag is set to 'true' then each property will be\n         * created with a ES5 get/set accessor descriptors, instead of\n         * making them an observable functions.\n         * See 'knockout-es5' library for more information.\n         *\n         * @param {Boolean} [useAccessors=false] - Whether to create an\n         *      observable function or to use property accesessors.\n         * @param {(Object|String|Array)} properties - List of observable properties.\n         * @returns {Element} Chainable.\n         *\n         * @example Sample declaration and equivalent knockout methods.\n         *      this.key = 'value';\n         *      this.array = ['value'];\n         *\n         *      this.observe(['key', 'array']);\n         *      =>\n         *          this.key = ko.observable('value');\n         *          this.array = ko.observableArray(['value']);\n         *\n         * @example Another syntaxes of the previous example.\n         *      this.observe({\n         *          key: 'value',\n         *          array: ['value']\n         *      });\n         */\n        observe: function (useAccessors, properties) {\n            var model = this,\n                trackMethod;\n\n            if (typeof useAccessors !== 'boolean') {\n                properties   = useAccessors;\n                useAccessors = false;\n            }\n\n            trackMethod = useAccessors ? accessor : observable;\n\n            if (_.isString(properties)) {\n                properties = properties.split(' ');\n            }\n\n            if (Array.isArray(properties)) {\n                properties.forEach(function (key) {\n                    trackMethod(model, key, model[key]);\n                });\n            } else if (typeof properties === 'object') {\n                _.each(properties, function (value, key) {\n                    trackMethod(model, key, value);\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Delegates call to 'observe' method but\n         * with a predefined 'useAccessors' flag.\n         *\n         * @param {(String|Array|Object)} properties - List of observable properties.\n         * @returns {Element} Chainable.\n         */\n        track: function (properties) {\n            this.observe(true, properties);\n\n            return this;\n        },\n\n        /**\n         * Checks if specified property is tracked.\n         *\n         * @param {String} property - Property to be checked.\n         * @returns {Boolean}\n         */\n        isTracked: function (property) {\n            return ko.es5.isTracked(this, property);\n        },\n\n        /**\n         * Invokes subscribers for the provided changes.\n         *\n         * @param {Object} diffs - Object with changes descriptions.\n         * @returns {Element} Chainable.\n         */\n        _notifyChanges: function (diffs) {\n            diffs.changes.forEach(function (change) {\n                this.trigger(change.path, change.value, change);\n            }, this);\n\n            _.each(diffs.containers, function (changes, name) {\n                var value = utils.nested(this, name);\n\n                this.trigger(name, value, changes);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Extracts all stored data and sets it to element.\n         *\n         * @returns {Element} Chainable.\n         */\n        restore: function () {\n            var ns = this.storageConfig.namespace,\n                storage = this.storage();\n\n            if (storage) {\n                utils.extend(this, storage.get(ns));\n            }\n\n            return this;\n        },\n\n        /**\n         * Stores value of the specified property in components' storage module.\n         *\n         * @param {String} property\n         * @param {*} [data=this[property]]\n         * @returns {Element} Chainable.\n         */\n        store: function (property, data) {\n            var ns = this.storageConfig.namespace,\n                path = utils.fullPath(ns, property);\n\n            if (arguments.length < 2) {\n                data = this.get(property);\n            }\n\n            this.storage('set', path, data);\n\n            return this;\n        },\n\n        /**\n         * Extracts specified property from storage.\n         *\n         * @param {String} [property] - Name of the property\n         *      to be extracted. If not specified then all of the\n         *      stored will be returned.\n         * @returns {*}\n         */\n        getStored: function (property) {\n            var ns = this.storageConfig.namespace,\n                path = utils.fullPath(ns, property),\n                storage = this.storage(),\n                data;\n\n            if (storage) {\n                data = storage.get(path);\n            }\n\n            return data;\n        },\n\n        /**\n         * Removes stored property.\n         *\n         * @param {String} property - Property to be removed from storage.\n         * @returns {Element} Chainable.\n         */\n        removeStored: function (property) {\n            var ns = this.storageConfig.namespace,\n                path = utils.fullPath(ns, property);\n\n            this.storage('remove', path);\n\n            return this;\n        },\n\n        /**\n         * Destroys current instance along with all of its' children.\n         */\n        destroy: function () {\n            this._dropHandlers()\n                ._clearRefs();\n        },\n\n        /**\n         * Removes events listeners.\n         * @private\n         *\n         * @returns {Element} Chainable.\n         */\n        _dropHandlers: function () {\n            this.off();\n            this.source.off(this.name);\n\n            return this;\n        },\n\n        /**\n         * Removes all references to current instance and\n         * calls 'destroy' method on all of its' children.\n         * @private\n         *\n         * @returns {Element} Chainable.\n         */\n        _clearRefs: function () {\n            registry.remove(this.name);\n\n            this.containers.forEach(function (parent) {\n                parent.removeChild(this);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Overrides 'EventsBus.trigger' method to implement events bubbling.\n         *\n         * @param {...*} parameters - Any number of arguments that should be passed to the events' handler.\n         * @returns {Boolean} False if event bubbling was canceled.\n         */\n        bubble: function () {\n            var args = _.toArray(arguments),\n                bubble = this.trigger.apply(this, args),\n                result;\n\n            if (!bubble) {\n                return false;\n            }\n\n            this.containers.forEach(function (parent) {\n                result = parent.bubble.apply(parent, args);\n\n                if (result === false) {\n                    bubble = false;\n                }\n            });\n\n            return !!bubble;\n        },\n\n        /**\n         * Callback which fires when property under uniqueNs has changed.\n         */\n        onUniqueUpdate: function (name) {\n            var active = name === this.name,\n                property = this.uniqueProp;\n\n            this[property](active);\n        }\n    }, Events, links);\n\n    return Class.extend(Element);\n});\n","Magento_Ui/js/lib/core/element/links.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore',\n    'mageUtils',\n    'uiRegistry'\n], function (ko, _, utils, registry) {\n    'use strict';\n\n    function parseData(placeholder, data, direction) {\n        if (typeof data !== 'string') {\n            return false;\n        }\n\n        data = data.split(':');\n\n        if (!data[0]) {\n            return false;\n        }\n\n        if (!data[1]) {\n            data[1] = data[0];\n            data[0] = placeholder;\n        }\n\n        return {\n            target: data[0],\n            property: data[1],\n            direction: direction\n        };\n    }\n\n    function notEmpty(value) {\n        return typeof value !== 'undefined' && value != null;\n    }\n\n    function updateValue(data, owner, target, value) {\n        var component = target.component,\n            property = target.property,\n            linked = data.linked;\n\n        if (data.mute) {\n            return;\n        }\n\n        if (linked) {\n            linked.mute = true;\n        }\n\n        if (owner.component !== target.component) {\n            value = utils.copy(value);\n        }\n\n        component.set(property, value);\n\n        if (linked) {\n            linked.mute = false;\n        }\n    }\n\n    function getValue(owner) {\n        var component = owner.component,\n            property = owner.property;\n\n        return component.get(property);\n    }\n\n    function form(ownerComponent, targetComponent, ownerProp, targetProp, direction) {\n        var result,\n            tmp;\n\n        result = {\n            owner: {\n                component: ownerComponent,\n                property: ownerProp\n            },\n            target: {\n                component: targetComponent,\n                property: targetProp\n            }\n        };\n\n        if (direction === 'exports') {\n            tmp = result.owner;\n            result.owner = result.target;\n            result.target = tmp;\n        }\n\n        return result;\n    }\n\n    function setLinked(map, data) {\n        var match;\n\n        if (!map) {\n            return;\n        }\n\n        match = _.findWhere(map, {\n            linked: false,\n            target: data.target,\n            property: data.property\n        });\n\n        if (match) {\n            match.linked = data;\n            data.linked = match;\n        }\n    }\n\n    function setData(maps, property, data) {\n        var direction   = data.direction,\n            map         = maps[direction];\n\n        data.linked = false;\n\n        (map[property] = map[property] || []).push(data);\n\n        direction = direction === 'imports' ? 'exports' : 'imports';\n\n        setLinked(maps[direction][property], data);\n    }\n\n    function setLink(target, owner, data, property, immediate) {\n        var direction = data.direction,\n            formated = form(target, owner, data.property, property, direction),\n            callback,\n            value;\n\n        owner = formated.owner;\n        target = formated.target;\n\n        callback = updateValue.bind(null, data, owner, target);\n\n        owner.component.on(owner.property, callback, target.component.name);\n\n        if (immediate) {\n            value = getValue(owner);\n\n            if (notEmpty(value)) {\n                updateValue(data, owner, target, value);\n            }\n        }\n    }\n\n    function transfer(owner, data) {\n        var args = _.toArray(arguments);\n\n        if (owner.name === data.target) {\n            args.unshift(owner);\n\n            setLink.apply(null, args);\n        } else {\n            registry.get(data.target, function (target) {\n                args.unshift(target);\n\n                setLink.apply(null, args);\n            });\n        }\n    }\n\n    return {\n        setListeners: function (listeners) {\n            var owner = this,\n                data;\n\n            _.each(listeners, function (callbacks, sources) {\n                sources = sources.split(' ');\n                callbacks = callbacks.split(' ');\n\n                sources.forEach(function (target) {\n                    callbacks.forEach(function (callback) {\n                        data = parseData(owner.name, target, 'imports');\n\n                        if (data) {\n                            setData(owner.maps, callback, data);\n                            transfer(owner, data, callback);\n                        }\n                    });\n                });\n            });\n\n            return this;\n        },\n\n        setLinks: function (links, direction) {\n            var owner = this,\n                property,\n                data;\n\n            for (property in links) {\n                if (links.hasOwnProperty(property)) {\n                    data = parseData(owner.name, links[property], direction);\n\n                    if (data) {\n                        setData(owner.maps, property, data);\n                        transfer(owner, data, property, true);\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n});\n","Magento_Ui/js/lib/validation/utils.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(function () {\n    'use strict';\n\n    var utils = {\n        /**\n         * Check if string is empty with trim\n         * @param {string}\n            */\n        isEmpty: function(value) {\n            return (value === '' || (value == null) || (value.length === 0) || /^\\s+$/.test(value));\n        },\n\n        /**\n         * Check if string is empty no trim\n         * @param {string}\n            */\n        isEmptyNoTrim: function(value) {\n            return (value === '' || (value == null) || (value.length === 0));\n        },\n\n\n        /**\n         * Checks if {value} is between numbers {from} and {to}\n         * @param {string} value\n         * @param {string} from\n         * @param {string} to\n         * @returns {boolean}\n         */\n        isBetween: function(value, from, to){\n            return (from === null || from === '' || value >= utils.parseNumber(from)) &&\n                   (to === null || to === '' || value <= utils.parseNumber(to));\n        },\n\n        /**\n         * Parse price string\n         * @param {string}\n            */\n        parseNumber: function(value) {\n            if (typeof value !== 'string') {\n                return parseFloat(value);\n            }\n            var isDot = value.indexOf('.');\n            var isComa = value.indexOf(',');\n            if (isDot !== -1 && isComa !== -1) {\n                if (isComa > isDot) {\n                    value = value.replace('.', '').replace(',', '.');\n                } else {\n                    value = value.replace(',', '');\n                }\n            } else if (isComa !== -1) {\n                value = value.replace(',', '.');\n            }\n            return parseFloat(value);\n        },\n\n        /**\n         * Removes HTML tags and space characters, numbers and punctuation.\n         * @param value Value being stripped.\n         * @return {*}\n         */\n        stripHtml: function(value) {\n            return value.replace(/<.[^<>]*?>/g, ' ').replace(/&nbsp;|&#160;/gi, ' ')\n                .replace(/[0-9.(),;:!?%#$'\"_+=\\/-]*/g, '');\n        }\n    }\n\n    return utils;\n});\n","Magento_Ui/js/lib/validation/validator.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n   './rules'\n], function (rules) {\n    'use strict';    \n\n    function validate(rule, value, params){\n        var isValid   = true,\n            rule      = rules[rule],\n            message   = true,\n            validator;\n\n        if (rule) {\n            validator = rule[0];\n            isValid   = validator(value, params);\n            params    = Array.isArray(params) ? params : [params];\n            message   = params.reduce(function (message, param, idx) {\n                return message.replace(new RegExp('\\\\{' + idx + '\\\\}', 'g'), param);\n            }, rule[1]);\n        }\n\n        return !isValid ? message : '';\n    }\n\n    /**\n     * Validates value by rule and it's params.\n     * @param {(String|Object)} rule - One or many validation rules.\n     * @param {*} value - Value to validate.\n     * @param {*} [params] - Rule configuration\n     * @return {String} Resulting error message if value is invalid.\n     */\n    function validator(rule, value, params){\n        var msg = '';\n\n        if(_.isObject(rule)){\n            _.some(rule, function(params, rule){\n                return !!(msg = validate(rule, value, params));\n            });\n        }\n        else{\n            msg = validate.apply(null, arguments);\n        }\n\n        return msg;\n    }\n\n    /**\n     * Adds new validation rule.\n     * \n     * @param {String} rule - rule name\n     * @param {Function} validator - validation function\n     * @param {String} message - validation message\n     */\n    validator.addRule = function(rule, validator, message){\n        rules[rule] = [validator, message];\n    }\n\n    return validator;\n});\n","Magento_Ui/js/lib/validation/rules.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    './utils',\n    'underscore',\n    'jquery',\n    'jquery/validate',\n    'jquery/ui',\n    'mage/translate'\n], function (utils, _, $) {\n    'use strict';\n\n    /**\n     * validate credit card number using mod10\n     * @param s\n     * @return {Boolean}\n     */\n    function validateCreditCard(s) {\n        // remove non-numerics\n        var v = \"0123456789\",\n            w = \"\", i, j, k, m, c, a, x;\n        for (i = 0; i < s.length; i++) {\n            x = s.charAt(i);\n            if (v.indexOf(x, 0) != -1)\n                w += x;\n        }\n        // validate number\n        j = w.length / 2;\n        k = Math.floor(j);\n        m = Math.ceil(j) - k;\n        c = 0;\n        for (i = 0; i < k; i++) {\n            a = w.charAt(i * 2 + m) * 2;\n            c += a > 9 ? Math.floor(a / 10 + a % 10) : a;\n        }\n        for (i = 0; i < k + m; i++) {\n            c += w.charAt(i * 2 + 1 - m) * 1;\n        }\n        return (c % 10 === 0);\n    }\n\n    /**\n     * Collection of validation rules including rules from additional-methods.js\n     * @type {Object}\n     */\n    return {\n        \"min_text_length\": [\n            function (value, params) {\n                return _.isUndefined(value) || value.length == 0 || value.length >= +params;\n            },\n            $.mage.__('Please enter more or equal than {0} symbols.')\n        ],\n        \"max_text_length\": [\n            function (value, params) {\n                return !_.isUndefined(value) && value.length <= +params;\n            },\n            $.mage.__('Please enter less or equal than {0} symbols.')\n        ],\n        \"max-words\": [\n            function(value, params) {\n                return utils.stripHtml(value).match(/\\b\\w+\\b/g).length < params;\n            },\n            $.mage.__('Please enter {0} words or less.')\n        ],\n        \"min-words\": [\n            function(value, params) {\n                return utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params;\n            },\n            $.mage.__('Please enter at least {0} words.')\n        ],\n        \"range-words\": [\n            function(value, params) {\n                return utils.stripHtml(value).match(/\\b\\w+\\b/g).length >= params[0] &&\n                        value.match(/bw+b/g).length < params[1];\n            },\n            $.mage.__('Please enter between {0} and {1} words.')\n        ],\n        \"letters-with-basic-punc\": [\n            function(value) {\n                return /^[a-z\\-.,()\\u0027\\u0022\\s]+$/i.test(value);\n            },\n            $.mage.__('Letters or punctuation only please')\n        ],\n        \"alphanumeric\": [\n            function(value) {\n                return /^\\w+$/i.test(value);\n            },\n            $.mage.__('Letters, numbers, spaces or underscores only please')\n        ],\n        \"letters-only\": [\n            function(value) {\n                return /^[a-z]+$/i.test(value);\n            },\n            $.mage.__('Letters only please')\n        ],\n        \"no-whitespace\": [\n            function(value) {\n                return /^\\S+$/i.test(value);\n            },\n            $.mage.__('No white space please')\n        ],\n        \"zip-range\": [\n            function(value) {\n                return /^90[2-5]-\\d{2}-\\d{4}$/.test(value);\n            },\n            $.mage.__('Your ZIP-code must be in the range 902xx-xxxx to 905-xx-xxxx')\n        ],\n        \"integer\": [\n            function(value) {\n                return /^-?\\d+$/.test(value);\n            },\n            $.mage.__('A positive or negative non-decimal number please')\n        ],\n        \"vinUS\": [\n            function(value) {\n                if (value.length !== 17) {\n                    return false;\n                }\n                var i, n, d, f, cd, cdv;\n                var LL = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n                var VL = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9];\n                var FL = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2];\n                var rs = 0;\n                for (i = 0; i < 17; i++) {\n                    f = FL[i];\n                    d = value.slice(i, i + 1);\n                    if (i === 8) {\n                        cdv = d;\n                    }\n                    if (!isNaN(d)) {\n                        d *= f;\n                    } else {\n                        for (n = 0; n < LL.length; n++) {\n                            if (d.toUpperCase() === LL[n]) {\n                                d = VL[n];\n                                d *= f;\n                                if (isNaN(cdv) && n === 8) {\n                                    cdv = LL[n];\n                                }\n                                break;\n                            }\n                        }\n                    }\n                    rs += d;\n                }\n                cd = rs % 11;\n                if (cd === 10) {\n                    cd = \"X\";\n                }\n                if (cd === cdv) {\n                    return true;\n                }\n                return false;\n            },\n            $.mage.__('The specified vehicle identification number (VIN) is invalid.')\n        ],\n        \"dateITA\": [\n            function(value) {\n                var check = false;\n                var re = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\n                if (re.test(value)) {\n                    var adata = value.split('/');\n                    var gg = parseInt(adata[0], 10);\n                    var mm = parseInt(adata[1], 10);\n                    var aaaa = parseInt(adata[2], 10);\n                    var xdata = new Date(aaaa, mm - 1, gg);\n                    if ((xdata.getFullYear() === aaaa) &&\n                        (xdata.getMonth() === mm - 1) && (xdata.getDate() === gg )) {\n                        check = true;\n                    } else {\n                        check = false;\n                    }\n                } else {\n                    check = false;\n                }\n                return check;\n            },\n            $.mage.__('Please enter a correct date')\n        ],\n        \"dateNL\": [\n            function(value) {\n                return /^\\d\\d?[\\.\\/-]\\d\\d?[\\.\\/-]\\d\\d\\d?\\d?$/.test(value);\n            },\n            $.mage.__('Vul hier een geldige datum in.')\n        ],\n        \"time\": [\n            function(value) {\n                return /^([01]\\d|2[0-3])(:[0-5]\\d){0,2}$/.test(value);\n            },\n            $.mage.__('Please enter a valid time, between 00:00 and 23:59')\n        ],\n        \"time12h\": [\n            function(value) {\n                return /^((0?[1-9]|1[012])(:[0-5]\\d){0,2}(\\ [AP]M))$/i.test(value);\n            },\n            $.mage.__('Please enter a valid time, between 00:00 am and 12:00 pm')\n        ],\n        \"phoneUS\": [\n            function(value) {\n                value = value.replace(/\\s+/g, \"\");\n                return value.length > 9 && value.match(/^(1-?)?(\\([2-9]\\d{2}\\)|[2-9]\\d{2})-?[2-9]\\d{2}-?\\d{4}$/);\n            },\n            $.mage.__('Please specify a valid phone number')\n        ],\n        \"phoneUK\": [\n            function(value) {\n                return value.length > 9 && value.match(/^(\\(?(0|\\+44)[1-9]{1}\\d{1,4}?\\)?\\s?\\d{3,4}\\s?\\d{3,4})$/);\n            },\n            $.mage.__('Please specify a valid phone number')\n        ],\n        \"mobileUK\": [\n            function(value) {\n                return value.length > 9 && value.match(/^((0|\\+44)7(5|6|7|8|9){1}\\d{2}\\s?\\d{6})$/);\n            },\n            $.mage.__('Please specify a valid mobile number')\n        ],\n        \"stripped-min-length\": [\n            function(value, param) {\n                return $(value).text().length >= param;\n            },\n            $.mage.__('Please enter at least {0} characters')\n        ],\n        \"email2\": [\n            function(value) {\n                return /^((([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&\\u0027\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\u0022)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\u0022)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i.test(value);\n            },\n            $.validator.messages.email\n        ],\n        \"url2\": [\n            function(value) {\n                return /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)*(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&\\u0027\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i.test(value);\n            },\n            $.validator.messages.url\n        ],\n        \"credit-card-types\": [\n            function(value, param) {\n                if (/[^0-9-]+/.test(value)) {\n                    return false;\n                }\n                value = value.replace(/\\D/g, \"\");\n\n                var validTypes = 0x0000;\n\n                if (param.mastercard) {\n                    validTypes |= 0x0001;\n                }\n                if (param.visa) {\n                    validTypes |= 0x0002;\n                }\n                if (param.amex) {\n                    validTypes |= 0x0004;\n                }\n                if (param.dinersclub) {\n                    validTypes |= 0x0008;\n                }\n                if (param.enroute) {\n                    validTypes |= 0x0010;\n                }\n                if (param.discover) {\n                    validTypes |= 0x0020;\n                }\n                if (param.jcb) {\n                    validTypes |= 0x0040;\n                }\n                if (param.unknown) {\n                    validTypes |= 0x0080;\n                }\n                if (param.all) {\n                    validTypes = 0x0001 | 0x0002 | 0x0004 | 0x0008 | 0x0010 | 0x0020 | 0x0040 | 0x0080;\n                }\n                if (validTypes & 0x0001 && /^(51|52|53|54|55)/.test(value)) { //mastercard\n                    return value.length === 16;\n                }\n                if (validTypes & 0x0002 && /^(4)/.test(value)) { //visa\n                    return value.length === 16;\n                }\n                if (validTypes & 0x0004 && /^(34|37)/.test(value)) { //amex\n                    return value.length === 15;\n                }\n                if (validTypes & 0x0008 && /^(300|301|302|303|304|305|36|38)/.test(value)) { //dinersclub\n                    return value.length === 14;\n                }\n                if (validTypes & 0x0010 && /^(2014|2149)/.test(value)) { //enroute\n                    return value.length === 15;\n                }\n                if (validTypes & 0x0020 && /^(6011)/.test(value)) { //discover\n                    return value.length === 16;\n                }\n                if (validTypes & 0x0040 && /^(3)/.test(value)) { //jcb\n                    return value.length === 16;\n                }\n                if (validTypes & 0x0040 && /^(2131|1800)/.test(value)) { //jcb\n                    return value.length === 15;\n                }\n                if (validTypes & 0x0080) { //unknown\n                    return true;\n                }\n                return false;\n            },\n            $.mage.__('Please enter a valid credit card number.')\n        ],\n        \"ipv4\": [\n            function(value) {\n                return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i.test(value);\n            },\n            $.mage.__('Please enter a valid IP v4 address.')\n        ],\n        \"ipv6\": [\n            function(value) {\n                return /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\n            },\n            $.mage.__('Please enter a valid IP v6 address.')\n        ],\n        \"pattern\": [\n            function(value, param) {\n                return param.test(value);\n            },\n            $.mage.__('Invalid format.')\n        ],\n        \"validate-no-html-tags\": [\n            function(value) {\n                return !/<(\\/)?\\w+/.test(value);\n            },\n            $.mage.__('HTML tags are not allowed.')\n        ],\n        \"validate-select\": [\n            function(value) {\n                return ((value !== \"none\") && (value != null) && (value.length !== 0));\n            },\n            $.mage.__('Please select an option.')\n        ],\n        \"validate-no-empty\": [\n            function(value) {\n                return !utils.isEmpty(value);\n            },\n            $.mage.__('Empty Value.')\n        ],\n        \"validate-alphanum-with-spaces\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9 ]+$/.test(value);\n            },\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or spaces only in this field.')\n        ],\n        \"validate-data\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[A-Za-z]+[A-Za-z0-9_]+$/.test(value);\n            },\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')\n        ],\n        \"validate-street\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[ \\w]{3,}([A-Za-z]\\.)?([ \\w]*\\#\\d+)?(\\r\\n| )[ \\w]{3,}/.test(value);\n            },\n            $.mage.__('Please use only letters (a-z or A-Z), numbers (0-9), spaces and \"#\" in this field.')\n        ],\n        \"validate-phoneStrict\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\n            },\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\n        ],\n        \"validate-phoneLax\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^((\\d[\\-. ]?)?((\\(\\d{3}\\))|\\d{3}))?[\\-. ]?\\d{3}[\\-. ]?\\d{4}$/.test(value);\n            },\n            $.mage.__('Please enter a valid phone number. For example (123) 456-7890 or 123-456-7890.')\n        ],\n        \"validate-fax\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^(\\()?\\d{3}(\\))?(-|\\s)?\\d{3}(-|\\s)\\d{4}$/.test(value);\n            },\n            $.mage.__('Please enter a valid fax number (Ex: 123-456-7890).')\n        ],\n        \"validate-email\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9,!\\#\\$%&'\\*\\+\\/=\\?\\^_`\\{\\|\\}~-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*@([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z0-9-]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*\\.(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]){2,})$/i.test(value);\n            },\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\n        ],\n        \"validate-emailSender\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[\\S ]+$/.test(value);\n            },\n            $.mage.__('Please enter a valid email address (Ex: johndoe@domain.com).')\n        ],\n        \"validate-password\": [\n            function(value) {\n                if (value == null) {\n                    return false;\n                }\n                /*strip leading and trailing spaces*/\n                var pass = $.trim(value);\n                if (!pass.length) {\n                    return true;\n                }\n                return !(pass.length > 0 && pass.length < 6);\n            },\n            $.mage.__('Please enter 6 or more characters. Leading or trailing spaces will be ignored.')\n        ],\n        \"validate-admin-password\": [\n            function(value) {\n                if (value == null) {\n                    return false;\n                }\n                var pass = $.trim(value);\n                /*strip leading and trailing spaces*/\n                if (0 === pass.length) {\n                    return true;\n                }\n                if (!(/[a-z]/i.test(value)) || !(/[0-9]/.test(value))) {\n                    return false;\n                }\n                if (pass.length < 7) {\n                    return false;\n                }\n                return true;\n            },\n            $.mage.__('Please enter 7 or more characters, using both numeric and alphabetic.')\n        ],\n        \"validate-url\": [\n            function(value) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n                value = (value || '').replace(/^\\s+/, '').replace(/\\s+$/, '');\n                return (/^(http|https|ftp):\\/\\/(([A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))(\\.[A-Z0-9]([A-Z0-9_-]*[A-Z0-9]|))*)(:(\\d+))?(\\/[A-Z0-9~](([A-Z0-9_~-]|\\.)*[A-Z0-9~]|))*\\/?(.*)?$/i).test(value);\n\n            },\n            $.mage.__('Please enter a valid URL. Protocol is required (http://, https:// or ftp://).')\n        ],\n        \"validate-clean-url\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^(http|https|ftp):\\/\\/(([A-Z0-9][A-Z0-9_-]*)(\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(v) || /^(www)((\\.[A-Z0-9][A-Z0-9_-]*)+.(com|org|net|dk|at|us|tv|info|uk|co.uk|biz|se)$)(:(\\d+))?\\/?/i.test(value);\n\n            },\n            $.mage.__('Please enter a valid URL. For example http://www.example.com or www.example.com.')\n        ],\n        \"validate-xml-identifier\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[A-Z][A-Z0-9_\\/-]*$/i.test(value);\n\n            },\n            $.mage.__('Please enter a valid XML-identifier (Ex: something_1, block5, id-4).')\n        ],\n        \"validate-ssn\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^\\d{3}-?\\d{2}-?\\d{4}$/.test(value);\n\n            },\n            $.mage.__('Please enter a valid social security number (Ex: 123-45-6789).')\n        ],\n        \"validate-zip-us\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /(^\\d{5}$)|(^\\d{5}-\\d{4}$)/.test(value);\n\n            },\n            $.mage.__('Please enter a valid zip code (Ex: 90602 or 90602-1234).')\n        ],\n        \"validate-date-au\": [\n            function(value) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n                var regex = /^(\\d{2})\\/(\\d{2})\\/(\\d{4})$/;\n                if (utils.isEmpty(value) || !regex.test(value)) {\n                    return false;\n                }\n                var d = new Date(value.replace(regex, '$2/$1/$3'));\n                return parseInt(RegExp.$2, 10) === (1 + d.getMonth()) &&\n                    parseInt(RegExp.$1, 10) === d.getDate() &&\n                    parseInt(RegExp.$3, 10) === d.getFullYear();\n\n            },\n            $.mage.__('Please use this date format: dd/mm/yyyy. For example 17/03/2006 for the 17th of March, 2006.')\n        ],\n        \"validate-currency-dollar\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^\\$?\\-?([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}\\d*(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$/.test(value);\n\n            },\n            $.mage.__('Please enter a valid $ amount. For example $100.00.')\n        ],\n        \"validate-not-negative-number\": [\n            function(value) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n                value = utils.parseNumber(value);\n                return !isNaN(value) && value >= 0;\n\n            },\n            $.mage.__('Please enter a number 0 or greater in this field.')\n        ],\n        // validate-not-negative-number should be replaced in all places with this one and then removed\n        \"validate-zero-or-greater\": [\n            function(value) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n                value = utils.parseNumber(value);\n                return !isNaN(value) && value >= 0;\n\n            },\n            $.mage.__('Please enter a number 0 or greater in this field.')\n        ],\n        \"validate-greater-than-zero\": [\n            function(value) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n                value = utils.parseNumber(value);\n                return !isNaN(value) && value > 0;\n            },\n            $.mage.__('Please enter a number greater than 0 in this field.')\n        ],\n        \"validate-css-length\": [\n            function(value) {\n                if (value !== '') {\n                    return (/^[0-9]*\\.*[0-9]+(px|pc|pt|ex|em|mm|cm|in|%)?$/).test(value);\n                }\n                return true;\n            },\n            $.mage.__('Please input a valid CSS-length (Ex: 100px, 77pt, 20em, .5ex or 50%).')\n        ],\n        /** @description Additional methods */\n        \"validate-number\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || (!isNaN(utils.parseNumber(value)) && /^\\s*-?\\d*(\\.\\d*)?\\s*$/.test(value));\n            },\n            $.mage.__('Please enter a valid number in this field.')\n        ],\n        \"validate-number-range\": [\n            function(value, param) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n\n                var numValue = utils.parseNumber(value);\n                if (isNaN(numValue)) {\n                    return false;\n                }\n\n                var dataAttrRange = /^(-?[\\d.,]+)?-(-?[\\d.,]+)?$/,\n                    result = true,\n                    range, m;\n\n                range = param;\n                if (range) {\n                    m = dataAttrRange.exec(range);\n                    if (m) {\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\n                    }\n                }\n\n                return result;\n            },\n            $.mage.__('The value is not within the specified range.')\n        ],\n        \"validate-digits\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || !/[^\\d]/.test(value);\n            },\n            $.mage.__('Please enter a valid number in this field.')\n        ],\n        \"validate-digits-range\": [\n            function(value, param) {\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                }\n\n                var numValue = utils.parseNumber(value);\n                if (isNaN(numValue)) {\n                    return false;\n                }\n\n                var dataAttrRange = /^(-?\\d+)?-(-?\\d+)?$/,\n                    result = true,\n                    range, m;\n                range = param;\n                if (range) {\n                    m = dataAttrRange.exec(range);\n                    if (m) {\n                        result = result && utils.isBetween(numValue, m[1], m[2]);\n                    }\n                }\n\n                return result;\n            },\n            $.mage.__('The value is not within the specified range.')\n        ],\n        'validate-range': [\n            function(value) {\n                var minValue, maxValue;\n                if (utils.isEmptyNoTrim(value)) {\n                    return true;\n                } else if ($.validator.methods['validate-digits'] && $.validator.methods['validate-digits'](value)) {\n                    minValue = maxValue = utils.parseNumber(value);\n                } else {\n                    var ranges = /^(-?\\d+)?-(-?\\d+)?$/.exec(value);\n\n                    if (ranges) {\n                        minValue = utils.parseNumber(ranges[1]);\n                        maxValue = utils.parseNumber(ranges[2]);\n                        if (minValue > maxValue) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                }\n            },\n            $.mage.__('The value is not within the specified range.')\n        ],\n        \"validate-alpha\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z]+$/.test(value);\n            },\n            $.mage.__('Please use letters only (a-z or A-Z) in this field.')\n        ],\n        \"validate-code\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[a-z]+[a-z0-9_]+$/.test(value);\n            },\n            $.mage.__('Please use only letters (a-z), numbers (0-9) or underscore (_) in this field, and the first character should be a letter.')\n        ],\n        \"validate-alphanum\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[a-zA-Z0-9]+$/.test(value);\n            },\n            $.mage.__('Please use only letters (a-z or A-Z) or numbers (0-9) in this field. No spaces or other characters are allowed.')\n        ],\n        \"validate-date\": [\n            function(value) {\n                var test = new Date(value);\n                return utils.isEmptyNoTrim(value) || !isNaN(test);\n            },$.mage.__('Please enter a valid date.')\n\n        ],\n        \"validate-identifier\": [\n            function(value) {\n                return utils.isEmptyNoTrim(value) || /^[a-z0-9][a-z0-9_\\/-]+(\\.[a-z0-9_-]+)?$/.test(value);\n            },\n            $.mage.__('Please enter a valid URL Key (Ex: \"example-page\", \"example-page.html\" or \"anotherlevel/example-page\").')\n        ],\n        \"validate-zip-international\": [\n            /*function(v) {\n             // @TODO: Cleanup\n             return Validation.get('IsEmpty').test(v) || /(^[A-z0-9]{2,10}([\\s]{0,1}|[\\-]{0,1})[A-z0-9]{2,10}$)/.test(v);\n             }*/\n            function() {\n                return true;\n            },\n            $.mage.__('Please enter a valid zip code.')\n        ],\n        \"validate-state\": [\n            function(value) {\n                return (value !== 0 || value === '');\n            },\n            $.mage.__('Please select State/Province.')\n        ],\n        \"less-than-equals-to\": [\n            function(value, params) {\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\n                    this.lteToVal = $(params).val();\n                    return parseFloat(value) <= parseFloat($(params).val());\n                }\n                return true;\n            },\n            function() {\n                return $.mage.__('Please enter a value less than or equal to %s.').replace('%s', this.lteToVal);\n            }\n        ],\n        \"greater-than-equals-to\": [\n            function(value, params) {\n                if ($.isNumeric($(params).val()) && $.isNumeric(value)) {\n                    this.gteToVal = $(params).val();\n                    return parseFloat(value) >= parseFloat($(params).val());\n                }\n                return true;\n            },\n            function() {\n                return $.mage.__('Please enter a value greater than or equal to %s.').replace('%s', this.gteToVal);\n            }\n        ],\n        \"validate-emails\": [\n            function(value) {\n                if (utils.isEmpty(value)) {\n                    return true;\n                }\n                var valid_regexp = /^[a-z0-9\\._-]{1,30}@([a-z0-9_-]{1,30}\\.){1,5}[a-z]{2,4}$/i,\n                    emails = value.split(/[\\s\\n\\,]+/g);\n                for (var i = 0; i < emails.length; i++) {\n                    if (!valid_regexp.test(emails[i].strip())) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n            $.mage.__(\"Please enter valid email addresses, separated by commas. For example, johndoe@domain.com, johnsmith@domain.com.\")\n        ],\n        \"validate-cc-number\": [\n            /**\n             * Validate credit card number based on mod 10\n             * @param value - credit card number\n             * @return {boolean}\n             */\n                function(value) {\n                if (value) {\n                    return validateCreditCard(value);\n                }\n                return false;\n            },\n            $.mage.__('Please enter a valid credit card number.')\n        ],\n        \"validate-cc-ukss\": [\n            /**\n             * Validate Switch/Solo/Maestro issue number and start date is filled\n             * @param value - input field value\n             * @return {*}\n             */\n            function(value) {\n                return value;\n            },\n            $.mage.__('Please enter issue number or start date for switch/solo card type.')\n        ],\n        'required-entry': [\n            function(value) {\n                return !utils.isEmpty(value);\n            },\n            $.mage.__('This is a required field.')\n        ],\n        'checked': [\n            function(value) {\n                return value;\n            },\n            $.mage.__('This is a required field.')\n        ],\n        'not-negative-amount': [\n            function(value) {\n                if (value.length)\n                    return (/^\\s*\\d+([,.]\\d+)*\\s*%?\\s*$/).test(value);\n                else\n                    return true;\n            },\n            $.mage.__('Please enter positive number in this field.')\n        ],\n        'validate-per-page-value-list': [\n            function(value) {\n                var isValid = !utils.isEmpty(value);\n                var values = value.split(',');\n                for (var i = 0; i < values.length; i++) {\n                    if (!/^[0-9]+$/.test(values[i])) {\n                        isValid = false;\n                    }\n                }\n                return isValid;\n            },\n            $.mage.__('Please enter a valid value, ex: 10,20,30')\n        ],\n        'validate-new-password': [\n            function(value) {\n\n                if ($.validator.methods['validate-password'] &&\n                    !$.validator.methods['validate-password'](value)) {\n                    return false;\n                }\n                if (utils.isEmpty(value) && value !== '') {\n                    return false;\n                }\n                return true;\n            },\n            $.mage.__('Please enter 6 or more characters. Leading or trailing spaces will be ignored.')\n        ],\n        'validate-item-quantity': [\n            function (value, params) {\n                // obtain values for validation\n                var qty = utils.parseNumber(value);\n\n                // validate quantity\n                var isMinAllowedValid = typeof params.minAllowed === 'undefined' || (qty >= utils.parseNumber(params.minAllowed));\n                var isMaxAllowedValid = typeof params.maxAllowed === 'undefined'  || (qty <= utils.parseNumber(params.maxAllowed));\n                var isQtyIncrementsValid = typeof params.qtyIncrements === 'undefined'  || (qty % utils.parseNumber(params.qtyIncrements) === 0);\n\n                return isMaxAllowedValid && isMinAllowedValid && isQtyIncrementsValid && qty > 0;\n            },\n            ''\n        ],\n        'equalTo': [\n            function (value, param) {\n                return value === $(param).val();\n            },\n            $.validator.messages.equalTo\n        ],\n        'validate-file-type': [\n            function (name, types) {\n                var extension = name.split('.').pop();\n\n                if (types && typeof types === 'string') {\n                    types = types.split(' ');\n                }\n\n                return !types || !types.length || ~types.indexOf(extension);\n            },\n            $.mage.__('We don\\'t recognize or support this file extension type.')\n        ],\n        'validate-max-size': [\n            function (size, maxSize) {\n                return maxSize === false || size < maxSize;\n            },\n            $.mage.__('File you are trying to upload exceeds maximum file size limit.')\n        ]\n    };\n});\n","Magento_Ui/js/lib/ko/initialize.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/** Loads all available knockout bindings, sets custom template engine, initializes knockout on page */\n\ndefine([\n    'ko',\n    './template/engine',\n    'knockoutjs/knockout-repeat',\n    'knockoutjs/knockout-fast-foreach',\n    'knockoutjs/knockout-es5',\n    './bind/scope',\n    './bind/staticChecked',\n    './bind/datepicker',\n    './bind/outer_click',\n    './bind/keyboard',\n    './bind/optgroup',\n    './bind/fadeVisible',\n    './bind/mage-init',\n    './bind/after-render',\n    './bind/i18n',\n    './bind/collapsible',\n    './bind/autoselect',\n    './extender/observable_array',\n    './extender/bound-nodes'\n], function (ko, templateEngine) {\n    'use strict';\n\n    ko.setTemplateEngine(templateEngine);\n    ko.applyBindings();\n});\n","Magento_Ui/js/lib/ko/extender/observable_array.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore'\n], function (ko, _) {\n    'use strict';\n\n    function iterator(callback, args, elem) {\n        callback = elem[callback];\n\n        if (_.isFunction(callback)) {\n            return callback.apply(elem, args);\n        }\n\n        return callback;\n    }\n\n    function wrapper(method) {\n        return function (iteratee) {\n            var callback = iteratee,\n                elems = this(),\n                args = _.toArray(arguments);\n\n            if (_.isString(iteratee)) {\n                callback = iterator.bind(null, iteratee, args.slice(1));\n\n                args.unshift(callback);\n            }\n\n            args.unshift(elems);\n\n            return _[method].apply(_, args);\n        };\n    }\n\n    _.extend(ko.observableArray.fn, {\n        each: wrapper('each'),\n\n        map: wrapper('map'),\n\n        filter: wrapper('filter'),\n\n        some: wrapper('some'),\n\n        every: wrapper('every'),\n\n        groupBy: wrapper('groupBy'),\n\n        sortBy: wrapper('sortBy'),\n\n        findWhere: function (properties) {\n            return _.findWhere(this(), properties);\n        },\n\n        contains: function (value) {\n            return _.contains(this(), value);\n        },\n\n        hasNo: function () {\n            return !this.contains.apply(this, arguments);\n        },\n\n        getLength: function () {\n            return this().length;\n        },\n\n        indexBy: function (key) {\n            return _.indexBy(this(), key);\n        },\n\n        without: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            args.unshift(this());\n\n            return _.without.apply(_, args);\n        },\n\n        first: function () {\n            return _.first(this());\n        },\n\n        last: function () {\n            return _.last(this());\n        },\n\n        pluck: function () {\n            var args = Array.prototype.slice.call(arguments);\n\n            args.unshift(this());\n\n            return _.pluck.apply(_, args);\n        }\n    });\n});\n","Magento_Ui/js/lib/ko/extender/bound-nodes.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'mage/utils/wrapper',\n    'uiEvents',\n    'es6-collections'\n], function (ko, _, wrapper, Events) {\n    'use strict';\n\n    var nodesMap = new WeakMap();\n\n    /**\n     * Returns a array of nodes associated with a specified model.\n     *\n     * @param {Object} model\n     * @returns {Undefined|Array}\n     */\n    function getBounded(model) {\n        return nodesMap.get(model);\n    }\n\n    /**\n     * Removes specified node to models' associations list, if it's\n     * a root node (node is not a descendant of any previously added nodes).\n     * Triggers 'addNode' event.\n     *\n     * @param {Object} model\n     * @param {HTMLElement} node\n     */\n    function addBounded(model, node) {\n        var nodes = getBounded(model),\n            isRoot;\n\n        if (!nodes) {\n            nodesMap.set(model, [node]);\n\n            Events.trigger.call(model, 'addNode', node);\n\n            return;\n        }\n\n        isRoot = nodes.every(function (bounded) {\n            return !bounded.contains(node);\n        });\n\n        if (isRoot) {\n            nodes.push(node);\n\n            Events.trigger.call(model, 'addNode', node);\n        }\n    }\n\n    /**\n     * Removes specified node from models' associations list.\n     * Triggers 'removeNode' event.\n     *\n     * @param {Object} model\n     * @param {HTMLElement} node\n     */\n    function removeBounded(model, node) {\n        var nodes = getBounded(model),\n            index;\n\n        if (!nodes) {\n            return;\n        }\n\n        index = nodes.indexOf(node);\n\n        if (~index) {\n            nodes.splice(index, 0);\n\n            Events.trigger.call(model, 'removeNode', node);\n        }\n\n        if (!nodes.length) {\n            nodesMap.delete(model);\n        }\n    }\n\n    wrapper.extend(ko, {\n\n        /**\n         * Extends kncokouts' 'applyBindings'\n         * to track nodes associated with model.\n         *\n         * @param {Function} orig - Original 'applyBindings' method.\n         */\n        applyBindings: function (orig, ctx, node) {\n            var result = orig(),\n                data;\n\n            if (!node || node.nodeType !== 1) {\n                return result;\n            }\n\n            data = ctx && (ctx.$data || ctx);\n\n            if (data && data.registerNodes) {\n                addBounded(data, node);\n            }\n\n            return result;\n        },\n\n        /**\n         * Extends kncokouts' cleanNode\n         * to track nodes associated with model.\n         *\n         * @param {Function} orig - Original 'cleanNode' method.\n         */\n        cleanNode: function (orig, node) {\n            var result = orig(),\n                data;\n\n            if (node.nodeType !== 1) {\n                return result;\n            }\n\n            data = ko.dataFor(node);\n\n            if (data && data.registerNodes) {\n                removeBounded(data, node);\n            }\n\n            return result;\n        }\n    });\n\n    return {\n\n        /**\n         * Returns root nodes associated with a model. If callback is provided,\n         * will iterate through all of the present nodes triggering callback\n         * for each of it. Also it will subscribe to the 'addNode' event.\n         *\n         * @param {Object} model\n         * @param {Function} [callback]\n         * @returns {Array|Undefined}\n         */\n        get: function (model, callback) {\n            var nodes = getBounded(model) || [];\n\n            if (!_.isFunction(callback)) {\n                return nodes;\n            }\n\n            nodes.forEach(function (node) {\n                callback(node);\n            });\n\n            this.add.apply(this, arguments);\n        },\n\n        /**\n         * Subscribes to adding of nodes associated with a model.\n         *\n         * @param {Object} model\n         */\n        add: function (model) {\n            var args = _.toArray(arguments).slice(1);\n\n            args.unshift('addNode');\n\n            Events.on.apply(model, args);\n        },\n\n        /**\n         * Subscribes to removal of nodes associated with a model.\n         *\n         * @param {Object} model\n         */\n        remove: function (model) {\n            var args = _.toArray(arguments).slice(1);\n\n            args.unshift('removeNode');\n\n            Events.on.apply(model, args);\n        },\n\n        /**\n         * Removes subscriptions from the model.\n         *\n         * @param {Object} model\n         */\n        off: function (model) {\n            var args = _.toArray(arguments).slice(1);\n\n            Events.off.apply(model, args);\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/outer_click.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/** Creates outerClick binding and registers in to ko.bindingHandlers object */\ndefine([\n    'ko',\n    'jquery',\n    'underscore'\n], function (ko, $, _) {\n    'use strict';\n\n    var defaults = {\n        onlyIfVisible: true\n    };\n\n    /**\n     * Document click handler which in case if event target is not\n     * a descendant of provided container element,\n     * invokes specfied in configuration callback.\n     *\n     * @param {HTMLElement} container\n     * @param {Object} config\n     * @param {EventObject} e\n     */\n    function onOuterClick(container, config, e) {\n        var target = e.target,\n            callback = config.callback;\n\n        if (container === target || container.contains(target)) {\n            return;\n        }\n\n        if (config.onlyIfVisible) {\n            if (!_.isNull(container.offsetParent)) {\n                callback();\n            }\n        } else {\n            callback();\n        }\n    }\n\n    /**\n     * Prepares configuration for the binding based\n     * on a default properties and provided options.\n     *\n     * @param {(Object|Function)} [options={}]\n     * @returns {Object}\n     */\n    function buildConfig(options) {\n        var config = {};\n\n        if (_.isFunction(options)) {\n            options = {\n                callback: options\n            };\n        } else if (!_.isObject(options)) {\n            options = {};\n        }\n\n        return _.extend(config, defaults, options);\n    }\n\n    ko.bindingHandlers.outerClick = {\n\n        /**\n         * Initializes outer click binding.\n         */\n        init: function (element, valueAccessor) {\n            var config = buildConfig(valueAccessor()),\n                outerClick = onOuterClick.bind(null, element, config);\n\n            $(document).on('click', outerClick);\n\n            ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n                $(document).off('click', outerClick);\n            });\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/datepicker.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/** Creates datepicker binding and registers in to ko.bindingHandlers object */\ndefine([\n    'ko',\n    'underscore',\n    'jquery',\n    'mage/calendar'\n], function (ko, _, $) {\n    'use strict';\n\n    var defaults = {\n        \"dateFormat\": \"mm\\/dd\\/yyyy\",\n        \"showsTime\": false,\n        \"timeFormat\": null,\n        \"buttonImage\": null,\n        \"buttonImageOnly\": null,\n        \"buttonText\": \"Select Date\"\n    }\n\n    ko.bindingHandlers.datepicker = {\n        /**\n         * Initializes calendar widget on element and stores it's value to observable property.\n         * Datepicker binding takes either observable property or object { storage: {ko.observable}, options: {Object} }.\n         * For more info about options take a look at \"mage/calendar\" and jquery.ui.datepicker widget.\n         * @param {HTMLElement} el - Element, that binding is applied to\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\n         */\n        init: function (el, valueAccessor) {\n            var config = valueAccessor(),\n                observable,\n                options = {};\n\n            _.extend(options, defaults);\n\n            if (typeof config === 'object') {\n                observable = config.storage;\n\n                _.extend(options, config.options);\n            } else {\n                observable = config;\n            }\n\n            $(el).calendar(options);\n\n            ko.utils.registerEventHandler(el, 'change', function (e) {\n                observable(this.value);\n            });\n        },\n\n        /**\n         * Reads target observable from valueAccessor and writes its' value to el.value\n         * @param {HTMLElement} el - Element, that binding is applied to\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\n         */\n        update: function(el, valueAccessor){\n            var config = valueAccessor(),\n                observable,\n                value;\n\n            observable = typeof config === 'object' ?\n                config.storage :\n                config;\n\n            value = observable();\n\n            value ? \n                $(el).datepicker('setDate', value) :\n                (el.value = '');\n        }\n    }\n});\n","Magento_Ui/js/lib/ko/bind/autoselect.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'jquery'\n], function (ko, $) {\n    'use strict';\n\n    /**\n     * 'Focus' event handler.\n     *\n     * @param {EventObject} e\n     */\n    function onFocus(e) {\n        e.target.select();\n    }\n\n    ko.bindingHandlers.autoselect = {\n\n        /**\n         * Adds event handler which automatically\n         * selects inputs' element text when field gets focused.\n         */\n        init: function (element, valueAccessor) {\n            var enabled = ko.unwrap(valueAccessor());\n\n            if (enabled !== false) {\n                $(element).on('focus', onFocus);\n            }\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/after-render.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko'\n], function (ko) {\n    'use strict';\n\n    ko.bindingHandlers.afterRender = {\n\n        /**\n         * Binding init callback.\n         */\n        init: function (element, valueAccessor, allBindings, viewModel) {\n            var callback = valueAccessor();\n\n            if (typeof callback === 'function') {\n                callback(element, viewModel);\n            }\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/fadeVisible.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'ko',\n], function($, ko) {\n    ko.bindingHandlers.fadeVisible = {\n        init: function (element, valueAccessor) {\n            // Initially set the element to be instantly visible/hidden depending on the value\n            var value = valueAccessor();\n            $(element).toggle(ko.unwrap(value)); // Use \"unwrapObservable\" so we can handle values that may or may not be observable\n        },\n        update: function (element, valueAccessor) {\n            // Whenever the value subsequently changes, slowly fade the element in or out\n            var value = valueAccessor();\n            ko.unwrap(value) ? $(element).fadeIn() : $(element).fadeOut();\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/i18n.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'ko',\n    'module',\n    'mage/translate'\n], function ($, ko, module) {\n    'use strict';\n\n    var locations = {\n            'legend': 'Caption for the fieldset element',\n            'label': 'Label for an input element.',\n            'button': 'Push button',\n            'a': 'Link label',\n            'b': 'Bold text',\n            'strong': 'Strong emphasized text',\n            'i': 'Italic text',\n            'em': 'Emphasized text',\n            'u': 'Underlined text',\n            'sup': 'Superscript text',\n            'sub': 'Subscript text',\n            'span': 'Span element',\n            'small': 'Smaller text',\n            'big': 'Bigger text',\n            'address': 'Contact information',\n            'blockquote': 'Long quotation',\n            'q': 'Short quotation',\n            'cite': 'Citation',\n            'caption': 'Table caption',\n            'abbr': 'Abbreviated phrase',\n            'acronym': 'An acronym',\n            'var': 'Variable part of a text',\n            'dfn': 'Term',\n            'strike': 'Strikethrough text',\n            'del': 'Deleted text',\n            'ins': 'Inserted text',\n            'h1': 'Heading level 1',\n            'h2': 'Heading level 2',\n            'h3': 'Heading level 3',\n            'h4': 'Heading level 4',\n            'h5': 'Heading level 5',\n            'h6': 'Heading level 6',\n            'center': 'Centered text',\n            'select': 'List options',\n            'img': 'Image',\n            'input': 'Form element'\n        },\n\n        /**\n         * Generates [data-translate] attribute's value\n         * @param {Object} translationData\n         * @param {String} location\n         */\n        composeTranslateAttr = function (translationData, location) {\n            var obj = [{\n                'shown': translationData.shown,\n                'translated': translationData.translated,\n                'original': translationData.original,\n                'location': locations[location] || 'Text'\n            }];\n\n            return JSON.stringify(obj);\n        },\n\n        /**\n         * Sets text for the element\n         * @param {Object} el\n         * @param {String} text\n         */\n        setText = function (el, text) {\n            $(el).text(text);\n        },\n\n        /**\n         * Sets [data-translate] attribute for the element\n         * @param {Object} el - The element which is binded\n         * @param {String} original - The original value of the element\n         */\n        setTranslateProp = function (el, original) {\n            var location = $(el).prop('tagName').toLowerCase(),\n                translated = $.mage.__(original),\n                translationData = {\n                    shown: translated,\n                    translated: translated,\n                    original: original\n                },\n                translateAttr = composeTranslateAttr(translationData, location);\n\n            $(el).attr('data-translate', translateAttr);\n\n            setText(el, translationData.shown);\n        },\n\n        /**\n         * Checks if node represents ko virtual node (nodeType === 8, nodeName === '#comment').\n         *\n         * @param {HTMLElement} node\n         * @returns {Boolean}\n         */\n        isVirtualElement = function (node) {\n            return node.nodeType === 8;\n        },\n\n        /**\n        * Checks if it's real DOM element\n        * in case of virtual element, returns span wrapper\n        * @param {Object} el\n        * @param {bool} isUpdate\n        * @return {Object} el\n        */\n        getRealElement = function (el, isUpdate) {\n            if (isVirtualElement(el)) {\n                if (isUpdate) {\n                    return $(el).next('span');\n                }\n\n                return $('<span/>').insertAfter(el);\n            }\n\n            return el;\n        },\n\n        /**\n         * execute i18n binding\n         * @param {Object} element\n         * @param {Function} valueAccessor\n         * @param {bool} isUpdate\n         */\n        execute = function (element, valueAccessor, isUpdate) {\n            var original = ko.unwrap(valueAccessor() || ''),\n                el = getRealElement(element, isUpdate),\n                inlineTranslation = (module.config() || {}).inlineTranslation;\n\n            if (inlineTranslation) {\n                setTranslateProp(el, original);\n            } else {\n                setText(el, $.mage.__(original));\n            }\n        };\n\n    /**\n     * i18n binding\n     * @property {Function}  init\n     * @property {Function}  update\n     */\n    ko.bindingHandlers.i18n = {\n\n        /**\n         * init i18n binding\n         * @param {Object} element\n         * @param {Function} valueAccessor\n         */\n        init: function (element, valueAccessor) {\n            execute(element, valueAccessor);\n        },\n\n        /**\n         * update i18n binding\n         * @param {Object} element\n         * @param {Function} valueAccessor\n         */\n        update: function (element, valueAccessor) {\n            execute(element, valueAccessor, true);\n        }\n    };\n\n    ko.virtualElements.allowedBindings.i18n = true;\n});\n","Magento_Ui/js/lib/ko/bind/staticChecked.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko'\n], function (ko) {\n    'use strict';\n\n    ko.bindingHandlers.staticChecked = {\n        'after': ['value', 'attr'],\n\n        /**\n         * Implements same functionality as a standard 'checked' binding,\n         * but with a difference that it wont' change values array if\n         * value of DOM element changes.\n         */\n        init: function (element, valueAccessor, allBindings) {\n            var isCheckbox = element.type === 'checkbox',\n                isRadio = element.type === 'radio',\n                isValueArray,\n                oldElemValue,\n                useCheckedValue,\n                checkedValue,\n                updateModel,\n                updateView;\n\n            if (!isCheckbox && !isRadio) {\n                return;\n            }\n\n            checkedValue = ko.pureComputed(function () {\n                if (allBindings.has('checkedValue')) {\n                    return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n                } else if (allBindings.has('value')) {\n                    return ko.utils.unwrapObservable(allBindings.get('value'));\n                }\n\n                return element.value;\n            });\n\n            isValueArray = isCheckbox && ko.utils.unwrapObservable(valueAccessor()) instanceof Array;\n            oldElemValue = isValueArray ? checkedValue() : undefined;\n            useCheckedValue = isRadio || isValueArray;\n\n            /**\n             * Updates values array if it's necessary.\n             */\n            updateModel = function () {\n                var isChecked = element.checked,\n                    elemValue = useCheckedValue ? checkedValue() : isChecked,\n                    modelValue;\n\n                if (ko.computedContext.isInitial()) {\n                    return;\n                }\n\n                if (isRadio && !isChecked) {\n                    return;\n                }\n\n                modelValue = ko.dependencyDetection.ignore(valueAccessor);\n\n                if (isValueArray) {\n                    if (oldElemValue !== elemValue) {\n                        oldElemValue = elemValue;\n                    } else {\n                        ko.utils.addOrRemoveItem(modelValue, elemValue, isChecked);\n                    }\n                } else {\n                    ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n                }\n            };\n\n            /**\n             * Updates checkbox state.\n             */\n            updateView = function () {\n                var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n                if (isValueArray) {\n                    element.checked = ko.utils.arrayIndexOf(modelValue, checkedValue()) >= 0;\n                } else if (isCheckbox) {\n                    element.checked = modelValue;\n                } else {\n                    element.checked = checkedValue() === modelValue;\n                }\n            };\n\n            ko.computed(updateModel, null, {\n                disposeWhenNodeIsRemoved: element\n            });\n\n            ko.utils.registerEventHandler(element, 'click', updateModel);\n\n            ko.computed(updateView, null, {\n                disposeWhenNodeIsRemoved: element\n            });\n        }\n    };\n\n    ko.expressionRewriting.twoWayBindings.staticChecked = true;\n});\n","Magento_Ui/js/lib/ko/bind/scope.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/** Creates scope binding and registers in to ko.bindingHandlers object */\ndefine([\n    'ko',\n    'uiRegistry',\n    'jquery',\n    'mage/translate'\n], function (ko, registry, $) {\n    'use strict';\n\n    var i18n = $.mage.__;\n\n    /**\n     * Creates child context with passed component param as $data. Extends context with $t helper.\n     * Applies bindings to descendant nodes.\n     * @param {HTMLElement} el - element to apply bindings to.\n     * @param {ko.bindingContext} bindingContext - instance of ko.bindingContext, passed to binding initially.\n     * @param {Object} component - component instance to attach to new context\n     */\n    function applyComponents(el, bindingContext, component) {\n        component = bindingContext.createChildContext(component);\n\n        ko.utils.extend(component, {\n            $t: i18n\n        });\n\n        ko.utils.arrayForEach(el.childNodes, ko.cleanNode);\n\n        ko.applyBindingsToDescendants(component, el);\n    }\n\n    ko.bindingHandlers.scope = {\n\n        /**\n         * Scope binding's init method.\n         * @returns {Object} - Knockout declaration for it to let binding control descendants.\n         */\n        init: function () {\n            return {\n                controlsDescendantBindings: true\n            };\n        },\n\n        /**\n         * Reads params passed to binding, parses component declarations.\n         * Fetches for those found and attaches them to the new context.\n         * @param {HTMLElement} el - Element to apply bindings to.\n         * @param {Function} valueAccessor - Function that returns value, passed to binding.\n         * @param {Object} allBindings - Object, which represents all bindings applied to element.\n         * @param {Object} viewModel - Object, which represents view model binded to el.\n         * @param {ko.bindingContext} bindingContext - Instance of ko.bindingContext, passed to binding initially.\n         */\n        update: function (el, valueAccessor, allBindings, viewModel, bindingContext) {\n            var component = valueAccessor(),\n                apply = applyComponents.bind(this, el, bindingContext);\n\n            if (typeof component === 'string') {\n                registry.get(component, apply);\n            } else if (typeof component === 'function') {\n                component(apply);\n            }\n        }\n    };\n\n    ko.virtualElements.allowedBindings.scope = true;\n});\n","Magento_Ui/js/lib/ko/bind/mage-init.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore',\n    'mage/apply/main'\n], function (ko, _, mage) {\n    'use strict';\n\n    ko.bindingHandlers.mageInit = {\n        init: function (el, valueAccessor) {\n            var data = valueAccessor();\n\n            _.each(data, function (config, component) {\n                mage.applyFor(el, config, component);\n            });\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/keyboard.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore'\n], function (ko) {\n    'use strict';\n\n    ko.bindingHandlers.keyboard = {\n\n        /**\n         * Attaches keypress handlers to element\n         * @param {HTMLElement} el - Element, that binding is applied to\n         * @param {Function} valueAccessor - Function that returns value, passed to binding\n         * @param  {Object} allBindings - all bindings object\n         * @param  {Object} viewModel - reference to viewmodel\n         */\n        init: function (el, valueAccessor, allBindings, viewModel) {\n            var map = valueAccessor();\n\n            ko.utils.registerEventHandler(el, 'keyup', function (e) {\n                var callback = map[e.keyCode];\n\n                if (callback) {\n                    callback.call(viewModel);\n                }\n            });\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/bind/optgroup.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'ko',\n    'mageUtils'\n    ], function (ko, utils) {\n    'use strict';\n\n    var captionPlaceholder = {},\n        optgroupTmpl = '<optgroup label=\"${ $.label }\"></optgroup>',\n        nbspRe = /&nbsp;/g,\n        optionsText,\n        optionsValue,\n        optionTitle;\n\n    ko.bindingHandlers.optgroup = {\n        /**\n         * @param {*} element\n         * @returns {Object}\n         */\n        'init': function (element) {\n            if (ko.utils.tagNameLower(element) !== 'select') {\n                throw new Error('options binding applies only to SELECT elements');\n            }\n\n            // Remove all existing <option>s.\n            while (element.length > 0) {\n                element.remove(0);\n            }\n\n            // Ensures that the binding processor doesn't try to bind the options\n            return {\n                'controlsDescendantBindings': true\n            };\n        },\n\n        /**\n         * @param {*} element\n         * @param {*} valueAccessor\n         * @param {*} allBindings\n         */\n        'update': function (element, valueAccessor, allBindings) {\n            var selectWasPreviouslyEmpty = element.length == 0,\n                previousScrollTop = (!selectWasPreviouslyEmpty && element.multiple) ? element.scrollTop : null,\n                includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n                arrayToDomNodeChildrenOptions = {},\n                captionValue,\n                unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n                filteredArray,\n                previousSelectedValues,\n                itemUpdate = false,\n                callback = setSelectionCallback,\n                nestedOptionsLevel = -1,\n                i, l;\n\n            optionsText = ko.utils.unwrapObservable(allBindings.get('optionsText')) || 'text';\n            optionsValue = ko.utils.unwrapObservable(allBindings.get('optionsValue')) || 'value';\n            optionTitle = optionsText + 'title';\n\n            if (element.multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else {\n                previousSelectedValues = element.selectedIndex >= 0 ? [ko.selectExtensions.readValue(element.options[element.selectedIndex])] : [];\n            }\n\n            if (unwrappedArray) {\n                if (typeof unwrappedArray.length === 'undefined') { // Coerce single value into array\n                    unwrappedArray = [unwrappedArray];\n                }\n\n                // Filter out any entries marked as destroyed\n                filteredArray = ko.utils.arrayFilter(unwrappedArray, function (item) {\n                    if (item && !item.label) {\n                        return false;\n                    }\n\n                    return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item._destroy);\n                });\n                filteredArray.map(recursivePathBuilder, null);\n            }\n\n            /**\n             *\n             * @param {*} option\n             */\n            arrayToDomNodeChildrenOptions.beforeRemove = function (option) {\n                element.removeChild(option);\n            };\n\n            if (allBindings.has('optionsAfterRender')) {\n\n                /**\n                 * @param {*} arrayEntry\n                 * @param {*} newOptions\n                 */\n                callback = function (arrayEntry, newOptions) {\n                    setSelectionCallback(arrayEntry, newOptions);\n                    ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n                }\n            }\n\n            filteredArray = formatOptions(filteredArray);\n            ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionNodeFromArray, arrayToDomNodeChildrenOptions, callback);\n\n            ko.dependencyDetection.ignore(function () {\n                var selectionChanged;\n\n                if (allBindings.get('valueAllowUnset') && allBindings.has('value')) {\n                    // The model value is authoritative, so make sure its value is the one selected\n                    ko.selectExtensions.writeValue(element, ko.utils.unwrapObservable(allBindings.get('value')), true /* allowUnset */);\n                } else {\n                    // Determine if the selection has changed as a result of updating the options list\n                    if (element.multiple) {\n                        // For a multiple-select box, compare the new selection count to the previous one\n                        // But if nothing was selected before, the selection can't have changed\n                        selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n                    } else {\n                        // For a single-select box, compare the current value to the previous value\n                        // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                        selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0) ?\n                            (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                            : (previousSelectedValues.length || element.selectedIndex >= 0);\n                    }\n\n                    // Ensure consistency between model value and selected option.\n                    // If the dropdown was changed so that selection is no longer the same,\n                    // notify the value or selectedOptions binding.\n                    if (selectionChanged) {\n                        ko.utils.triggerEvent(element, 'change');\n                    }\n                }\n            });\n\n            if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20) {\n                element.scrollTop = previousScrollTop;\n            }\n            /**\n             *\n             * @returns {*}\n             */\n            function selectedOptions() {\n                return ko.utils.arrayFilter(element.options, function (node) {\n                    return node.selected;\n                });\n            }\n\n            /**\n             *\n             * @param {*} object\n             * @param {*} predicate\n             * @param {*} defaultValue\n             * @returns {*}\n             */\n            function applyToObject(object, predicate, defaultValue) {\n                var predicateType = typeof predicate;\n\n                if (predicateType === 'function') {   // Given a function; run it against the data value\n                    return predicate(object);\n                } else if (predicateType === 'string') { // Given a string; treat it as a property name on the data value\n                    return object[predicate];\n                } else {                      // Given no optionsText arg; use the data value itself\n                    return defaultValue;\n                }\n            }\n\n            /**\n             *\n             * @param {*} obj\n             */\n            function recursivePathBuilder(obj) {\n\n                obj[optionTitle] = (this && this[optionTitle] ? this[optionTitle] + '/' : '') + obj[optionsText].trim();\n\n                if (Array.isArray(obj[optionsValue])) {\n                    obj[optionsValue].map(recursivePathBuilder, obj);\n                }\n            }\n\n            /**\n             *\n             * @param {Array} arrayEntry\n             * @param {*} oldOptions\n             * @returns {*[]}\n             */\n            function optionNodeFromArray(arrayEntry, oldOptions) {\n                var option;\n\n                if (oldOptions.length) {\n                    previousSelectedValues = oldOptions[0].selected ? [ko.selectExtensions.readValue(oldOptions[0])] : [];\n                    itemUpdate = true;\n                }\n\n                if (arrayEntry === captionPlaceholder) { // empty value, label === caption\n                    option = element.ownerDocument.createElement('option');\n                    ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                    ko.selectExtensions.writeValue(option, undefined);\n                } else if (typeof arrayEntry[optionsValue] === 'undefined') { // empty value === optgroup\n                    option = utils.template(optgroupTmpl, {\n                        label: arrayEntry[optionsText],\n                        title: arrayEntry[optionsText + 'title']\n                    });\n                    option = ko.utils.parseHtmlFragment(option)[0];\n\n                } else {\n                    option = element.ownerDocument.createElement('option');\n                    option.setAttribute('data-title', arrayEntry[optionsText + 'title']);\n                    ko.selectExtensions.writeValue(option, arrayEntry[optionsValue]);\n                    ko.utils.setTextContent(option, arrayEntry[optionsText]);\n                }\n\n                return [option];\n            }\n\n            /**\n             *\n             * @param {*} newOptions\n             */\n            function setSelectionCallback(newOptions) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                if (previousSelectedValues.length) {\n                    var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions.value)) >= 0;\n                    ko.utils.setOptionNodeSelectionState(newOptions.value, isSelected);\n\n                    // If this option was changed from being selected during a single-item update, notify the change\n                    if (itemUpdate && !isSelected) {\n                        ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, 'change']);\n                    }\n                }\n            }\n\n            /**\n             *\n             * @param {*} string, times\n             * @returns {Array}\n             */\n            function strPad(string, times) {\n                return  (new Array(times + 1)).join(string);\n            }\n\n            /**\n             *\n             * @param {*} options\n             * @returns {Array}\n             */\n            function formatOptions(options) {\n                var res = [];\n                nestedOptionsLevel++;\n\n                if (!nestedOptionsLevel) { // zero level\n                    // If caption is included, add it to the array\n                    if (allBindings.has('optionsCaption')) {\n                        captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                        // If caption value is null or undefined, don't show a caption\n                        if (captionValue !== null && captionValue !== undefined && captionValue !== false) {\n                            res.push(captionPlaceholder);\n                        }\n                    }\n                }\n\n                ko.utils.arrayForEach(options, function (option) {\n                    var value = applyToObject(option, optionsValue, option),\n                        label = applyToObject(option, optionsText, value) || '',\n                        title = applyToObject(option, optionsText, value) || '',\n                        obj = {},\n                        space = '\\u2007\\u2007\\u2007';\n\n                    obj[optionTitle] = applyToObject(option, optionsText + 'title', value);\n\n                    label = label.replace(nbspRe, '').trim();\n\n                    if (Array.isArray(value)) {\n                        obj[optionsText] = strPad('&nbsp;', nestedOptionsLevel * 4) + label;\n                        res.push(obj);\n                        res = res.concat(formatOptions(value));\n                    } else {\n                        obj[optionsText] = strPad(space, nestedOptionsLevel * 2) + label;\n                        obj[optionsValue] = value;\n                        res.push(obj);\n                    }\n                });\n                nestedOptionsLevel--;\n\n                return res;\n            }\n        }\n    };\n    ko.bindingHandlers.selectedOptions.after.push('optgroup');\n});\n","Magento_Ui/js/lib/ko/bind/collapsible.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'jquery',\n    'underscore'\n], function (ko, $, _) {\n    'use strict';\n\n    var collapsible,\n        defaults;\n\n    defaults = {\n        closeOnOuter: true,\n        onTarget: false,\n        openClass: '_active',\n        as: '$collapsible'\n    };\n\n    collapsible = {\n\n        /**\n         * Sets 'opened' property to true.\n         */\n        open: function () {\n            this.opened(true);\n        },\n\n        /**\n         * Sets 'opened' property to false.\n         */\n        close: function () {\n            this.opened(false);\n        },\n\n        /**\n         * Toggles value of the 'opened' property.\n         */\n        toggle: function () {\n            this.opened(!this.opened());\n        }\n    };\n\n    /**\n     * Document click handler which in case if event target is not\n     * a descendant of provided container element, closes collapsible model.\n     *\n     * @param {HTMLElement} container\n     * @param {Object} model\n     * @param {EventObject} e\n     */\n    function onOuterClick(container, model, e) {\n        var target = e.target;\n\n        if (target !== container && !container.contains(target)) {\n            model.close();\n        }\n    }\n\n    /**\n     * Creates 'css' binding which toggles\n     * class specified in 'name' parameter.\n     *\n     * @param {Object} model\n     * @param {String} name\n     * @returns {Object}\n     */\n    function getClassBinding(model, name) {\n        var binding = {};\n\n        binding[name] = model.opened;\n\n        return {\n            css: binding\n        };\n    }\n\n    /**\n     * Prepares configuration for the binding based\n     * on a default properties and provided options.\n     *\n     * @param {Object} [options={}]\n     * @returns {Object} Complete instance configuration.\n     */\n    function buildConfig(options) {\n        if (typeof options !== 'object') {\n            options = {};\n        }\n\n        return _.extend({}, defaults, options);\n    }\n\n    ko.bindingHandlers.collapsible = {\n\n        /**\n         * Initializes 'collapsible' binding.\n         */\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\n            var $collapsible = Object.create(collapsible),\n                config = buildConfig(valueAccessor()),\n                outerClick,\n                bindings;\n\n            _.bindAll($collapsible, 'open', 'close', 'toggle');\n\n            $collapsible.opened = ko.observable(false);\n\n            bindingCtx[config.as] = $collapsible;\n\n            if (config.closeOnOuter) {\n                outerClick = onOuterClick.bind(null, element, $collapsible);\n\n                $(document).on('click', outerClick);\n\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function () {\n                    $(document).off('click', outerClick);\n                });\n            }\n\n            if (config.openClass) {\n                bindings = getClassBinding($collapsible, config.openClass);\n\n                ko.applyBindingsToNode(element, bindings, bindingCtx);\n            }\n\n            if (config.onTarget) {\n                $(element).on('click', $collapsible.toggle);\n            }\n\n            if (viewModel && _.isFunction(viewModel.on)) {\n                viewModel.on({\n                    close:          $collapsible.close,\n                    open:           $collapsible.open,\n                    toggleOpened:   $collapsible.toggle\n                });\n            }\n        }\n    };\n\n    ko.bindingHandlers.closeCollapsible = {\n\n        /**\n         * Creates listener for the click event on provided DOM element,\n         * which closes associated with it collapsible model.\n         */\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\n            var name = valueAccessor() || defaults.as,\n                $collapsible = bindingCtx[name];\n\n            if ($collapsible) {\n                $(element).on('click', $collapsible.close);\n            }\n        }\n    };\n\n    ko.bindingHandlers.openCollapsible = {\n\n        /**\n         * Creates listener for the click event on provided DOM element,\n         * which opens associated with it collapsible model.\n         */\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\n            var name = valueAccessor() || defaults.as,\n                $collapsible = bindingCtx[name];\n\n            if ($collapsible) {\n                $(element).on('click', $collapsible.open);\n            }\n        }\n    };\n\n    ko.bindingHandlers.toggleCollapsible = {\n\n        /**\n         * Creates listener for the click event on provided DOM element,\n         * which toggles associated with it collapsible model.\n         */\n        init: function (element, valueAccessor, allBindings, viewModel, bindingCtx) {\n            var name = valueAccessor() || defaults.as,\n                $collapsible = bindingCtx[name];\n\n            if ($collapsible) {\n                $(element).on('click', $collapsible.toggle);\n            }\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/template/engine.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    './observable_source',\n    './renderer'\n], function (ko, Source, Renderer) {\n    'use strict';\n\n    var RemoteTemplateEngine,\n        NativeTemplateEngine = ko.nativeTemplateEngine,\n        sources = {};\n\n    /**\n     * Remote template engine class. Is used to be able to load remote templates via knockout template binding.\n     */\n    RemoteTemplateEngine = function () {};\n\n    /**\n     * Creates unique template identifier based on template name and it's extenders (optional)\n     * @param  {String} templateName\n     * @return {String} - unique template identifier\n     */\n    function createTemplateIdentifier(templateName) {\n        return templateName;\n    }\n\n    RemoteTemplateEngine.prototype = new NativeTemplateEngine;\n    RemoteTemplateEngine.prototype.constructor = RemoteTemplateEngine;\n\n    /**\n     * Overrided method of native knockout template engine.\n     * Caches template after it's unique name and renders in once.\n     * If template name is not typeof string, delegates work to knockout.templateSources.anonymousTemplate.\n     * @param  {*} template\n     * @returns {TemplateSource} Object with methods 'nodes' and 'data'.\n     */\n    RemoteTemplateEngine.prototype.makeTemplateSource = function (template) {\n        var source,\n            templateId;\n\n        if (typeof template === 'string') {\n            templateId = createTemplateIdentifier(template);\n            source = sources[templateId];\n\n            if (!source) {\n                source = new Source(template);\n                sources[templateId] = source;\n\n                Renderer.render(template).done(function (rendered) {\n                    source.nodes(rendered);\n                });\n            }\n\n            return source;\n        } else if (template.nodeType === 1 || template.nodeType === 8) {\n            source = new ko.templateSources.anonymousTemplate(template);\n\n            return source;\n        }\n\n        throw new Error('Unknown template type: ' + template);\n    };\n\n    /**\n     * Overrided method of native knockout template engine.\n     * Should return array of html elements.\n     * @param  {TemplateSource} templateSource - object with methods 'nodes' and 'data'.\n     * @return {Array} - array of html elements\n     */\n    RemoteTemplateEngine.prototype.renderTemplateSource = function (templateSource) {\n        var nodes = templateSource.nodes();\n\n        return ko.utils.cloneNodes(nodes);\n    };\n\n    /**\n     * Overrided method of native knockout template engine.\n     * Created in order to invoke makeTemplateSource method with custom set of params.\n     * @param  {*} template - template identifier\n     * @param  {ko.bindingContext} bindingContext\n     * @param  {Object} options - options, passed to template binding\n     * @param  {HTMLElement} templateDocument - document\n     * @return {Array} - array of html elements\n     */\n    RemoteTemplateEngine.prototype.renderTemplate = function (template, bindingContext, options, templateDocument) {\n        var templateSource = this.makeTemplateSource(template, templateDocument, options);\n\n        return this.renderTemplateSource(templateSource, bindingContext, options);\n    };\n\n    return new RemoteTemplateEngine;\n});\n","Magento_Ui/js/lib/ko/template/renderer.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    './loader',\n    'jquery',\n    'underscore'\n], function (loader, $, _) {\n    'use strict';\n\n    return {\n\n        /**\n         * Renders template and it's extenders using this._parse function.\n         * Loads all extenders then merges them and wraps into\n         * div[data-template-extend=\"parent\"] where parent is target template.\n         * If no extenders provider, simply loads target template and passes execution to _parse.\n         *\n         * @param {String} template - string, representing path to core template and it's extenders.\n         * @returns {Deferred} - Promise of template to be rendered. Is being resolved with array of HTML elements.\n         */\n        render: function (template) {\n            var isRendered = $.Deferred(),\n                resolve       = isRendered.resolve.bind(isRendered),\n                loadTemplate  = this._load.bind(this),\n                parseTemplate = this._parse.bind(this);\n\n            loadTemplate(template)\n                .then(parseTemplate)\n                .done(resolve);\n\n            return isRendered.promise();\n        },\n\n        /**\n         * Loads templates via loader module.\n         * @return {Deferred} - Promise of templates to be loaded\n         */\n        _load: function () {\n            return loader.loadTemplate.apply(loader, arguments);\n        },\n\n        /**\n         * Takes raw text (html), parses it, puts it to docuemntFragment container.\n         * Looks up for all [data-template-exted] attributes, creates array of extend nodes.\n         * Maps this array to extractTemplatePath to have all extend points pathes gathered.\n         * Maps pathes to this.render method (which returns promise) and waits for this array to resolve.\n         * Then looks up for [data-part-*] attributes and creates map of new parts.\n         * Then overrides parent template's corresponding parts with new parts.\n         * @param  {String} rawHtml - loaded raw text (html)\n         * @return {Deferred} - Promise of template to be parsed. Is being resolved with array of HTML elements.\n         */\n        _parse: function (rawHtml) {\n            return _.toArray($.parseHTML(rawHtml));\n        }\n    };\n});\n","Magento_Ui/js/lib/ko/template/observable_source.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/**\n * Is being used by knockout template engine to store template to.\n */\ndefine([\n    'ko',\n    'uiClass'\n], function (ko, Class) {\n    'use strict';\n\n    return Class.extend({\n\n        /**\n         * Initializes templateName, _data, nodes properties.\n         *\n         * @param  {template} template - identifier of template\n         */\n        initialize: function (template) {\n            this.templateName = template;\n            this._data = {};\n            this.nodes = ko.observable([]);\n        },\n\n        /**\n         * Data setter. If only one arguments passed, returns corresponding value.\n         * Else, writes into it.\n         * @param  {String} key - key to write to or to read from\n         * @param  {*} value\n         * @return {*} - if 1 arg provided, returnes _data[key] property\n         */\n        data: function (key, value) {\n            if (arguments.length === 1) {\n                return this._data[key];\n            }\n\n            this._data[key] = value;\n        }\n    });\n});\n","Magento_Ui/js/lib/ko/template/loader.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'jquery'\n], function (_, $) {\n    'use strict';\n\n    /**\n     * Formats path of type \"path.to.template\" to RequireJS compatible\n     * @param  {String} path\n     * @return {String} - formatted template path\n     */\n    function formatTemplatePath(path) {\n        return 'text!' + path.replace(/^([^\\/]+)/g, '$1/template') + '.html';\n    }\n\n    /**\n     * Removes license from incoming template\n     *\n     * @param  {String} tmpl\n     * @return {String} - template without license\n     */\n    function removeLicense(tmpl) {\n        var regEx = /<!--[\\s\\S]*?-->/;\n\n        return tmpl.replace(regEx, function (match) {\n            return ~match.indexOf('/**') ? '' : match;\n        });\n    }\n\n    /**\n     * Loads template by path, resolves promise with it if defined\n     *\n     * @param  {String} path\n     * @param  {Deferred} promise\n     */\n    function load(path, promise) {\n        require([path], function (template) {\n            template = removeLicense(template);\n\n            promise.resolve(template);\n        });\n    }\n\n    return {\n\n        /**\n         * Loops over arguments and loads template for each.\n         * @return {Deferred} - promise of templates to be loaded\n         */\n        loadTemplate: function (source) {\n            var isLoaded = $.Deferred();\n\n            this._loadTemplate(source).done(function (tmpl) {\n                isLoaded.resolve(tmpl);\n            });\n\n            return isLoaded.promise();\n        },\n\n        /**\n         * Loads template by it's name\n         *\n         * @param  {String} name\n         * @return {Deferred}\n         */\n        _loadTemplate: function (name) {\n            var isLoaded = $.Deferred(),\n                path = formatTemplatePath(name);\n\n            load(path, isLoaded);\n\n            return isLoaded.promise();\n        }\n    };\n});\n","Magento_Ui/js/core/app.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    './renderer/types',\n    './renderer/layout',\n    'Magento_Ui/js/lib/ko/initialize'\n], function (types, layout) {\n    'use strict';\n\n    return function (data) {\n        types.set(data.types);\n        layout(data.components);\n    };\n});\n","Magento_Ui/js/core/renderer/layout.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'jquery',\n    'mageUtils',\n    'uiRegistry',\n    './types'\n], function (_, $, utils, registry, types) {\n    'use strict';\n\n    var templates = registry.create(),\n        layout = {};\n\n    function getNodeName(parent, node, name) {\n        var parentName = parent && parent.name;\n\n        if (typeof name !== 'string') {\n            name = node.name || name;\n        }\n\n        return utils.fullPath(parentName, name);\n    }\n\n    function getNodeType(parent, node) {\n        return node.type || parent && parent.childType;\n    }\n\n    function getDataScope(parent, node) {\n        var dataScope = node.dataScope,\n            parentScope = parent && parent.dataScope;\n\n        return !utils.isEmpty(parentScope) ?\n            !utils.isEmpty(dataScope) ?\n                parentScope + '.' + dataScope :\n                parentScope :\n            dataScope || '';\n    }\n\n    function loadDeps(node) {\n        var loaded = $.Deferred();\n\n        registry.get(node.deps, function () {\n            loaded.resolve(node);\n        });\n\n        return loaded.promise();\n    }\n\n    function loadSource(node) {\n        var loaded = $.Deferred(),\n            source = node.component;\n\n        require([source], function (constr) {\n            loaded.resolve(node, constr);\n        });\n\n        return loaded.promise();\n    }\n\n    function initComponent(node, Constr) {\n        var component = new Constr(_.omit(node, 'children'));\n\n        registry.set(node.name, component);\n    }\n\n    function run(nodes, parent) {\n        _.each(nodes || [], layout.iterator.bind(layout, parent));\n    }\n\n    _.extend(layout, {\n        iterator: function (parent, node) {\n            var action = _.isString(node) ?\n                this.addChild :\n                this.process;\n\n            action.apply(this, arguments);\n        },\n\n        process: function (parent, node, name) {\n            if (!parent && node.parent) {\n                return this.waitParent(node, name);\n            }\n\n            if (node.nodeTemplate) {\n                return this.waitTemplate.apply(this, arguments);\n            }\n\n            node = this.build.apply(this, arguments);\n\n            if (node) {\n                this.addChild(parent, node)\n                    .manipulate(node)\n                    .initComponent(node);\n\n                run(node.children, node);\n            }\n\n            return this;\n        },\n\n        build: function (parent, node, name) {\n            var defaults    = parent && parent.childDefaults || {},\n                children    = node.children,\n                type        = getNodeType(parent, node),\n                dataScope   = getDataScope(parent, node),\n                nodeName;\n\n            node.children = false;\n\n            node = utils.extend({\n            }, types.get(type), defaults, node);\n\n            nodeName = getNodeName(parent, node, name);\n\n            _.extend(node, node.config || {}, {\n                index: node.name || name,\n                name: nodeName,\n                dataScope: dataScope,\n                parentName: utils.getPart(nodeName, -2),\n                parentScope: utils.getPart(dataScope, -2)\n            });\n\n            node.children = children;\n\n            delete node.type;\n            delete node.config;\n\n            if (children) {\n                node.initChildCount = _.size(children);\n            }\n\n            if (node.isTemplate) {\n                node.isTemplate = false;\n\n                templates.set(node.name, node);\n\n                return false;\n            }\n\n            if (node.componentDisabled === true) {\n                return false;\n            }\n\n            return node;\n        },\n\n        initComponent: function (node) {\n            if (!node.component) {\n                return this;\n            }\n\n            loadDeps(node)\n                .then(loadSource)\n                .done(initComponent);\n\n            return this;\n        }\n    });\n\n    _.extend(layout, {\n        waitTemplate: function (parent, node) {\n            var args = _.toArray(arguments);\n\n            templates.get(node.nodeTemplate, function () {\n                this.applyTemplate.apply(this, args);\n            }.bind(this));\n\n            return this;\n        },\n\n        waitParent: function (node, name) {\n            var process = this.process.bind(this);\n\n            registry.get(node.parent, function (parent) {\n                process(parent, node, name);\n            });\n\n            return this;\n        },\n\n        applyTemplate: function (parent, node, name) {\n            var template = templates.get(node.nodeTemplate);\n\n            node = utils.extend({}, template, node);\n\n            delete node.nodeTemplate;\n\n            this.process(parent, node, name);\n        }\n    });\n\n    _.extend(layout, {\n        manipulate: function (node) {\n            var name = node.name;\n\n            if (node.appendTo) {\n                this.insert(name, node.appendTo, -1);\n            }\n\n            if (node.prependTo) {\n                this.insert(name, node.prependTo, 0);\n            }\n\n            if (node.insertTo) {\n                this.insertTo(name, node.insertTo);\n            }\n\n            return this;\n        },\n\n        insert: function (item, target, position) {\n            registry.get(target, function (container) {\n                container.insertChild(item, position);\n            });\n\n            return this;\n        },\n\n        insertTo: function (item, targets) {\n            _.each(targets, function (info, target) {\n                this.insert(item, target, info.position);\n            }, this);\n\n            return this;\n        },\n\n        addChild: function (parent, child) {\n            var name;\n\n            if (parent && parent.component) {\n                name = child.name || child;\n\n                this.insert(name, parent.name, child.sortOrder);\n            }\n\n            return this;\n        }\n    });\n\n    return run;\n});\n","Magento_Ui/js/core/renderer/types.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils'\n], function (_, utils) {\n    'use strict';\n\n    var store = {};\n\n    function flatten(data) {\n        var extender = data.extends || [],\n            result = {};\n\n        extender = utils.stringToArray(extender);\n\n        extender.push(data);\n\n        extender.forEach(function (item) {\n            if (_.isString(item)) {\n                item = store[item] || {};\n            }\n\n            utils.extend(result, item);\n        });\n\n        delete result.extends;\n\n        return result;\n    }\n\n    return {\n        set: function (types) {\n            types = types || {};\n\n            utils.extend(store, types);\n\n            _.each(types, function (data, type) {\n                store[type] = flatten(data);\n            });\n        },\n\n        get: function (type) {\n            return store[type] || {};\n        }\n    };\n});\n","Magento_Ui/js/grid/listing.js":"/**\r\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\r\n * See COPYING.txt for license details.\r\n */\r\n\r\ndefine([\r\n    'ko',\r\n    'underscore',\r\n    'Magento_Ui/js/lib/spinner',\r\n    'uiLayout',\r\n    'uiCollection'\r\n], function (ko, _, loader, layout, Collection) {\r\n    'use strict';\r\n\r\n    return Collection.extend({\r\n        defaults: {\r\n            template: 'ui/grid/listing',\r\n            stickyTmpl: 'ui/grid/sticky/listing',\r\n            positions: false,\r\n            dndConfig: {\r\n                name: '${ $.name }_dnd',\r\n                component: 'Magento_Ui/js/grid/dnd',\r\n                columnsProvider: '${ $.name }',\r\n                enabled: true\r\n            },\r\n            editorConfig: {\r\n                name: '${ $.name }_editor',\r\n                component: 'Magento_Ui/js/grid/editing/editor',\r\n                columnsProvider: '${ $.name }',\r\n                dataProvider: '${ $.provider }',\r\n                enabled: false\r\n            },\r\n            resizeConfig: {\r\n                name: '${ $.name }_resize',\r\n                columnsProvider: '${ $.name }',\r\n                component: 'Magento_Ui/js/grid/resize',\r\n                enabled: false\r\n            },\r\n            imports: {\r\n                rows: '${ $.provider }:data.items'\r\n            },\r\n            listens: {\r\n                elems: 'updatePositions updateVisible',\r\n                '${ $.provider }:reload': 'showLoader',\r\n                '${ $.provider }:reloaded': 'hideLoader'\r\n            },\r\n            modules: {\r\n                dnd: '${ $.dndConfig.name }',\r\n                resize: '${ $.resizeConfig.name }'\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Initializes Listing component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initialize: function () {\r\n            _.bindAll(this, 'updateVisible');\r\n\r\n            this._super()\r\n                .initDnd()\r\n                .initEditor()\r\n                .initResize();\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Initializes observable properties.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initObservable: function () {\r\n            this._super()\r\n                .track({\r\n                    rows: [],\r\n                    visibleColumns: []\r\n                });\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates drag&drop widget instance.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initDnd: function () {\r\n            if (this.dndConfig.enabled) {\r\n                layout([this.dndConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Inititalizes resize component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initResize: function () {\r\n            if (this.resizeConfig.enabled) {\r\n                layout([this.resizeConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Creates inline editing component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initEditor: function () {\r\n            if (this.editorConfig.enabled) {\r\n                layout([this.editorConfig]);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Called when another element was added to current component.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initElement: function (element) {\r\n            var currentCount = this.elems().length,\r\n                totalCount = this.initChildCount;\r\n\r\n            if (totalCount === currentCount) {\r\n                this.initPositions();\r\n            }\r\n\r\n            element.on('visible', this.updateVisible);\r\n\r\n            return this._super();\r\n        },\r\n\r\n        /**\r\n         * Defines initial order of child elements.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        initPositions: function () {\r\n            this.on('positions', this.applyPositions.bind(this));\r\n\r\n            this.setStatefull('positions');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Updates current state of child positions.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        updatePositions: function () {\r\n            var positions = {};\r\n\r\n            this.elems.each(function (elem, index) {\r\n                positions[elem.index] = index;\r\n            });\r\n\r\n            this.set('positions', positions);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Reseorts child elements array according to provided positions.\r\n         *\r\n         * @param {Object} positions - Object where key represents child\r\n         *      index and value is its' position.\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        applyPositions: function (positions) {\r\n            var sorting;\r\n\r\n            sorting = this.elems.map(function (elem) {\r\n                return {\r\n                    elem: elem,\r\n                    position: positions[elem.index]\r\n                };\r\n            });\r\n\r\n            this.insertChild(sorting);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Returns reference to 'visibleColumns' array.\r\n         *\r\n         * @returns {Array}\r\n         */\r\n        getVisible: function () {\r\n            var observable = ko.getObservable(this, 'visibleColumns');\r\n\r\n            return observable || this.visibleColumns;\r\n        },\r\n\r\n        /**\r\n         * Returns total number of displayed columns in grid.\r\n         *\r\n         * @returns {Number}\r\n         */\r\n        countVisible: function () {\r\n            return this.visibleColumns.length;\r\n        },\r\n\r\n        /**\r\n         * Updates array of visible columns.\r\n         *\r\n         * @returns {Listing} Chainable.\r\n         */\r\n        updateVisible: function () {\r\n            this.visibleColumns = this.elems.filter('visible');\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Checks if grid has data.\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        hasData: function () {\r\n            return !!this.rows.length;\r\n        },\r\n\r\n        /**\r\n         * Hides loader.\r\n         */\r\n        hideLoader: function () {\r\n            loader.get(this.name).hide();\r\n        },\r\n\r\n        /**\r\n         * Shows loader.\r\n         */\r\n        showLoader: function () {\r\n            loader.get(this.name).show();\r\n        }\r\n    });\r\n});\r\n","Magento_Ui/js/grid/dnd.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'Magento_Ui/js/lib/view/utils/async',\n    'underscore',\n    'uiRegistry',\n    'uiClass'\n], function (ko, $, _, registry, Class) {\n    'use strict';\n\n    var isTouchDevice = typeof document.ontouchstart !== 'undefined',\n        transformProp;\n\n    /**\n     * Defines supported css 'transform' property.\n     *\n     * @returns {String|Undefined}\n     */\n    transformProp = (function () {\n        var style = document.body.style,\n            base = 'Transform',\n            vendors = ['webkit', 'moz', 'ms', 'o'],\n            vi = vendors.length,\n            property;\n\n        if (typeof style.transform != 'undefined') {\n            return 'transform';\n        }\n\n        while (vi--) {\n            property = vendors[vi] + base;\n\n            if (typeof style[property] != 'undefined') {\n                return property;\n            }\n        }\n    })();\n\n    /**\n     * Returns first touch data if it's available.\n     *\n     * @param {(MouseEvent|TouchEvent)} e - Event object.\n     * @returns {Object}\n     */\n    function getTouch(e) {\n        return e.touches ? e.touches[0] : e;\n    }\n\n    /**\n     * Moves specified DOM element to the x and y coordinates.\n     *\n     * @param {HTMLElement} elem - Element to be relocated.\n     * @param {Number} x - X coordinate.\n     * @param {Number} y - Y coordinate.\n     */\n    function locate(elem, x, y) {\n        var value = 'translate(' + x + 'px,' + y + 'px)';\n\n        elem.style[transformProp] = value;\n    }\n\n    /*eslint-disable no-extra-parens*/\n    /**\n     * Checks if specified coordinate is inside of the provided area.\n     *\n     * @param {Number} x - X coordinate.\n     * @param {Number} y - Y coordinate.\n     * @param {Object} area - Object which represents area.\n     * @returns {Boolean}\n     */\n    function isInside(x, y, area) {\n        return (\n            area &&\n            x >= area.left && x <= area.right &&\n            y >= area.top && y <= area.bottom\n        );\n    }\n\n    /*eslint-enable no-extra-parens*/\n\n    /**\n     * Calculates distance between two points.\n     *\n     * @param {Number} x1 - X coordinate of a first point.\n     * @param {Number} y1 - Y coordinate of a first point.\n     * @param {Number} x2 - X coordinate of a second point.\n     * @param {Number} y2 - Y coordinate of a second point.\n     * @returns {Number} Distance between points.\n     */\n    function distance(x1, y1, x2, y2) {\n        var dx = x2 - x1,\n            dy = y2 - y1;\n\n        dx *= dx;\n        dy *= dy;\n\n        return Math.sqrt(dx + dy);\n    }\n\n    /**\n     * Returns viewModel associated with a provided DOM element.\n     *\n     * @param {HTMLElement} elem\n     * @returns {Object|Array}\n     */\n    function getModel(elem) {\n        return ko.dataFor(elem);\n    }\n\n    /**\n     * Checks whether cols are identical\n     *\n     * @param {HTMLElement} c1\n     * @param {HTMLElement} c2\n     * @returns {Boolean}\n     */\n    function compareCols(c1, c2) {\n        return c1.cellIndex === c2.cellIndex;\n    }\n\n    return Class.extend({\n        defaults: {\n            rootSelector: '${ $.columnsProvider }:.admin__data-grid-wrap',\n            tableSelector: '${ $.rootSelector } -> table.data-grid',\n            mainTableSelector: '[data-role=\"grid\"]',\n            columnSelector: '${ $.tableSelector } thead tr th',\n            noSelectClass: '_no-select',\n            hiddenClass: '_hidden',\n            fixedX: false,\n            fixedY: true,\n            minDistance: 2,\n            columns: []\n        },\n\n        /**\n         * Initializes Dnd component.\n         *\n         * @returns {Dnd} Chainable.\n         */\n        initialize: function () {\n            _.bindAll(\n                this,\n                'initTable',\n                'initColumn',\n                'removeColumn',\n                'onMouseMove',\n                'onMouseUp',\n                'onMouseDown'\n            );\n\n            this.$body = $('body');\n\n            this._super()\n                .initListeners();\n\n            $.async(this.tableSelector, this.initTable);\n            $.async(this.columnSelector, this.initColumn);\n\n            return this;\n        },\n\n        /**\n         * Binds necessary events listeners.\n         *\n         * @returns {Dnd} Chainbale.\n         */\n        initListeners: function () {\n            if (isTouchDevice) {\n                $(document).on({\n                    touchmove: this.onMouseMove,\n                    touchend: this.onMouseUp,\n                    touchleave: this.onMouseUp\n                });\n            } else {\n                $(document).on({\n                    mousemove: this.onMouseMove,\n                    mouseup: this.onMouseUp\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Defines specified table element as a main container.\n         *\n         * @param {HTMLTableElement} table\n         * @returns {Dnd} Chainable.\n         */\n        initTable: function (table) {\n            this.table =  $(table).is(this.mainTableSelector) ?  table : this.table;\n\n            $(table).addClass('data-grid-draggable');\n\n            return this;\n        },\n\n        /**\n         * Sets specified column as a draggable element.\n         *\n         * @param {HTMLTableHeaderCellElement} column - Columns header element.\n         * @returns {Dnd} Chainable.\n         */\n        initColumn: function (column) {\n            var model = getModel(column),\n                eventName;\n\n            if (!model || !model.draggable) {\n                return this;\n            }\n\n            if (!ko.es5.isTracked(model, 'dragover')) {\n                model.track('dragover');\n            }\n\n            this.columns.push(column);\n\n            $(column).bindings({\n                css: {\n                    '_dragover-left': ko.computed(function () {\n                        return model.dragover === 'right';\n                    }),\n                    '_dragover-right': ko.computed(function () {\n                        return model.dragover === 'left';\n                    })\n                }\n            });\n\n            eventName = isTouchDevice ?\n                'touchstart' :\n                'mousedown';\n\n            $(column).on(eventName, this.onMouseDown);\n            $.async.remove(column, this.removeColumn);\n\n            return this;\n        },\n\n        /**\n         * Removes specified column element from the columns array.\n         *\n         * @param {HTMLTableHeaderCellElement} column - Columns header element.\n         * @returns {Dnd} Chainable.\n         */\n        removeColumn: function (column) {\n            var columns = this.columns,\n                index = columns.indexOf(column);\n\n            if (~index) {\n                columns.splice(index, 1);\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns index of column.\n         *\n         * @param {HTMLTableHeaderCellElement} elem\n         * @returns {Number}\n         */\n        _getColumnIndex: function (elem) {\n            return _.toArray(elem.parentNode.cells).indexOf(elem);\n        },\n\n        /**\n         * Calculates coordinates of draggable elements.\n         *\n         * @returns {Dnd} Chainbale.\n         */\n        _cacheCoords: function () {\n            var container   = this.table.getBoundingClientRect(),\n                bodyRect    = document.body.getBoundingClientRect(),\n                grabbed     = this.grabbed,\n                dragElem    = grabbed.elem,\n                cells       = _.toArray(dragElem.parentNode.cells),\n                rect;\n\n            this.coords = this.columns.map(function (column) {\n                var data,\n                    colIndex = _.findIndex(cells, function (cell) {\n                        return compareCols(cell, column);\n                    });\n\n                rect = column.getBoundingClientRect();\n\n                data = {\n                    index: colIndex,\n                    target: column,\n                    orig: rect,\n                    left: rect.left - bodyRect.left,\n                    right: rect.right - bodyRect.left,\n                    top: rect.top - bodyRect.top,\n                    bottom: container.bottom - bodyRect.top\n                };\n\n                if (column === dragElem) {\n                    this.dragArea = data;\n\n                    grabbed.shiftX = rect.left - grabbed.x;\n                    grabbed.shiftY = rect.top - grabbed.y;\n                }\n\n                return data;\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Creates clone of a target table with only specified column visible.\n         *\n         * @param {HTMLTableHeaderCellElement} elem - Dragging column.\n         * @returns {Dnd} Chainbale.\n         */\n        _cloneTable: function (elem) {\n            var clone       = this.table.cloneNode(true),\n                columnIndex = this._getColumnIndex(elem),\n                headRow     = clone.tHead.firstElementChild,\n                headCells   = _.toArray(headRow.cells),\n                tableBody   = clone.tBodies[0],\n                bodyRows    = _.toArray(tableBody.children),\n                origTrs     = this.table.tBodies[0].children;\n\n            clone.style.width = elem.offsetWidth + 'px';\n\n            headCells.forEach(function (th, index) {\n                if (index !== columnIndex) {\n                    headRow.removeChild(th);\n                }\n            });\n\n            headRow.cells[0].style.height = elem.offsetHeight + 'px';\n\n            bodyRows.forEach(function (row, rowIndex) {\n                var cells = row.cells,\n                    cell;\n\n                if (cells.length !== headCells.length) {\n                    tableBody.removeChild(row);\n\n                    return;\n                }\n\n                cell = row.cells[columnIndex].cloneNode(true);\n\n                while (row.firstElementChild) {\n                    row.removeChild(row.firstElementChild);\n                }\n\n                cell.style.height = origTrs[rowIndex].cells[columnIndex].offsetHeight + 'px';\n\n                row.appendChild(cell);\n            });\n\n            this.dragTable = clone;\n\n            $(clone)\n                .addClass('_dragging-copy')\n                .appendTo('body');\n\n            return this;\n        },\n\n        /**\n         * Matches provided coordinates to available areas.\n         *\n         * @param {Number} x - X coordinate of a mouse pointer.\n         * @param {Number} y - Y coordinate of a mouse pointer.\n         * @returns {Object|Undefined} Matched area.\n         */\n        _getDropArea: function (x, y) {\n            return _.find(this.coords, function (area) {\n                return isInside(x, y, area);\n            });\n        },\n\n        /**\n         * Updates state of hovered areas.\n         *\n         * @param {Number} x - X coordinate of a mouse pointer.\n         * @param {Number} y - Y coordinate of a mouse pointer.\n         */\n        _updateAreas: function (x, y) {\n            var leavedArea = this.dropArea,\n                area = this.dropArea = this._getDropArea(x, y);\n\n            if (leavedArea) {\n                this.dragleave(leavedArea);\n            }\n\n            if (area && !compareCols(area.target, this.dragArea.target)) {\n                this.dragenter(area);\n            }\n        },\n\n        /**\n         * Grab action handler.\n         *\n         * @param {Number} x - X coordinate of a grabbed point.\n         * @param {Number} y - Y coordinate of a grabbed point.\n         * @param {HTMLElement} elem - Grabbed elemenet.\n         */\n        grab: function (x, y, elem) {\n            this.initDrag = true;\n\n            this.grabbed = {\n                x: x,\n                y: y,\n                elem: elem\n            };\n\n            this.$body.addClass(this.noSelectClass);\n        },\n\n        /**\n         * Dragstart action handler.\n         *\n         * @param {HTMLTableHeaderCellElement} elem - Element which is dragging.\n         */\n        dragstart: function (elem) {\n            this.initDrag = false;\n            this.dropArea = false;\n            this.dragging = true;\n\n            getModel(elem).dragging(true);\n\n            this._cacheCoords()\n                ._cloneTable(elem);\n        },\n\n        /**\n         * Drag action handler. Locates draggable\n         * grid at a specified coordinates.\n         *\n         * @param {Number} x - X coordinate.\n         * @param {Number} y - Y coordinate.\n         */\n        drag: function (x, y) {\n            var grabbed  = this.grabbed,\n                dragArea = this.dragArea,\n                posX     = x + grabbed.shiftX,\n                posY     = y + grabbed.shiftY;\n\n            if (this.fixedX) {\n                x    = dragArea.left;\n                posX = dragArea.orig.left;\n            }\n\n            if (this.fixedY) {\n                y    = dragArea.top;\n                posY = dragArea.orig.top;\n            }\n\n            locate(this.dragTable, posX, posY);\n\n            if (!isInside(x, y, this.dropArea)) {\n                this._updateAreas(x, y);\n            }\n        },\n\n        /**\n         * Dragenter action handler.\n         *\n         * @param {Object} dropArea\n         */\n        dragenter: function (dropArea) {\n            var direction = this.dragArea.index < dropArea.index ?\n                'left' :\n                'right';\n\n            getModel(dropArea.target).dragover = direction;\n        },\n\n        /**\n         * Dragleave action handler.\n         *\n         * @param {Object} dropArea\n         */\n        dragleave: function (dropArea) {\n            getModel(dropArea.target).dragover = false;\n        },\n\n        /**\n         * Dragend action handler.\n         *\n         * @param {Object} dragArea\n         */\n        dragend: function (dragArea) {\n            var dropArea = this.dropArea,\n                dragElem = dragArea.target;\n\n            this.dragging = false;\n\n            document.body.removeChild(this.dragTable);\n\n            getModel(dragElem).dragging(false);\n\n            if (dropArea && !compareCols(dropArea.target, dragElem)) {\n                this.drop(dropArea, dragArea);\n            }\n        },\n\n        /**\n         * Drop action handler.\n         *\n         * @param {Object} dropArea\n         * @param {Object} dragArea\n         */\n        drop: function (dropArea, dragArea) {\n            var dropModel = getModel(dropArea.target),\n                dragModel = getModel(dragArea.target);\n\n            getModel(this.table).insertChild(dragModel, dropModel);\n            dropModel.dragover = false;\n        },\n\n        /**\n         * Documents' 'mousemove' event handler.\n         *\n         * @param {(MouseEvent|TouchEvent)} e - Event object.\n         */\n        onMouseMove: function (e) {\n            var grab    = this.grabbed,\n                touch   = getTouch(e),\n                x       = touch.pageX,\n                y       = touch.pageY;\n\n            if (this.initDrag || this.dragging) {\n                e.preventDefault();\n            }\n\n            if (this.initDrag && distance(x, y, grab.x, grab.y) >= this.minDistance) {\n                this.dragstart(grab.elem);\n            }\n\n            if (this.dragging) {\n                this.drag(x, y);\n            }\n        },\n\n        /**\n         * Documents' 'mouseup' event handler.\n         */\n        onMouseUp: function () {\n            if (this.initDrag || this.dragging) {\n                this.initDrag = false;\n                this.$body.removeClass(this.noSelectClass);\n            }\n\n            if (this.dragging) {\n                this.dragend(this.dragArea);\n            }\n        },\n\n        /**\n         * Columns' 'mousedown' event handler.\n         *\n         * @param {(MouseEvent|TouchEvent)} e - Event object.\n         */\n        onMouseDown: function (e) {\n            var touch = getTouch(e);\n\n            this.grab(touch.pageX, touch.pageY, e.currentTarget);\n        }\n    });\n});\n","Magento_Ui/js/grid/resize.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/lib/view/utils/async',\n    'ko',\n    'underscore',\n    'mageUtils',\n    'uiRegistry',\n    'Magento_Ui/js/lib/ko/extender/bound-nodes',\n    'uiElement'\n], function ($, ko, _, utils, registry, boundedNodes, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            rootSelector: '${ $.columnsProvider }:.admin__data-grid-wrap',\n            tableSelector: '${ $.rootSelector } -> table.data-grid',\n            mainTableSelector: '[data-role=\"grid\"]',\n            columnSelector: '${ $.tableSelector } thead tr th',\n            fieldSelector: '${ $.tableSelector } tbody tr td',\n\n            imports: {\n                storageColumnsData: '${ $.storageConfig.path }.storageColumnsData'\n            },\n            storageColumnsData: {},\n            columnsElements: {},\n            tableWidth: 0,\n            sumColumnsWidth: 0,\n            showLines: 4,\n            resizableElementClass: 'shadow-div',\n            resizingColumnClass: '_resizing',\n            fixedLayoutClass: '_layout-fixed',\n            inResizeClass: '_in-resize',\n            visibleClass: '_resize-visible',\n            cellContentElement: 'div.data-grid-cell-content',\n            minColumnWidth: 40,\n            layoutFixedPolyfillIterator: 0,\n            windowResize: false,\n            resizable: false,\n            resizeConfig: {\n                maxRowsHeight: [],\n                curResizeElem: {},\n                depResizeElem: {},\n                previousWidth: null\n            }\n        },\n\n        /**\n         * Initialize application -\n         * binding functions context,\n         * set handlers for table elements\n         *\n         * @returns {Object} Chainable\n         */\n        initialize: function () {\n            _.bindAll(\n                this,\n                'initTable',\n                'initColumn',\n                'mousedownHandler',\n                'mousemoveHandler',\n                'mouseupHandler',\n                'refreshLastColumn',\n                'refreshMaxRowHeight',\n                'preprocessingWidth',\n                '_eventProxy',\n                'checkAfterResize'\n            );\n\n            this._super();\n            this.observe(['maxRowsHeight']);\n            this.maxRowsHeight([]);\n\n            $.async(this.tableSelector, this.initTable);\n            $.async(this.columnSelector, this.initColumn);\n\n            return this;\n        },\n\n        /**\n         * Set table element and adds handler to mousedown on headers\n         *\n         * @returns {Object} Chainable\n         */\n        initTable: function (table) {\n            if ($(table).is(this.mainTableSelector))\n            {\n                this.table = table;\n                this.tableWidth = $(table).outerWidth();\n                $(window).resize(this.checkAfterResize);\n            }\n\n            //TODO - Must be deleted when Firefox fixed problem with table-layout: fixed\n            //ticket to Firefox: https://bugs.webkit.org/show_bug.cgi?id=90068\n            if (navigator.userAgent.search(/Firefox/) > -1) {\n                this._layoutFixedPolyfill();\n            }\n\n            $(table).addClass(this.fixedLayoutClass);\n\n            return this;\n        },\n\n        /**\n         * Window resize handler,\n         * check changes on table width and\n         * set new width to variable\n         * after window resize start preprocessingWidth method\n         */\n        checkAfterResize: function () {\n            var tableWidth,\n                self = this;\n\n            setTimeout(function () {\n                tableWidth = $(self.table).outerWidth();\n\n                if (self.tableWidth !== tableWidth) {\n                    self.tableWidth = tableWidth;\n                } else {\n                    self.preprocessingWidth();\n                }\n            }, 300);\n        },\n\n        /**\n         * Check conditions to set minimal width\n         */\n        checkSumColumnsWidth: function () {\n            var table = $(this.table),\n                elems = table.find('th:not([style*=\"width: auto\"]):visible'),\n                elemsWidthMin = table.find('th[style*=\"width: ' + (this.minColumnWidth - 1) + 'px\"]:visible'),\n                elemsWidthAuto = table.find('th[style*=\"width: auto\"]:visible'),\n                model;\n\n            this.sumColumnsWidth = 0;\n            _.each(elems, function (elem) {\n                model = ko.dataFor(elem);\n                model.width && model.width !== 'auto' ? this.sumColumnsWidth += model.width : false;\n            }, this);\n\n            if (\n                    this.sumColumnsWidth + elemsWidthAuto.length *\n                    this.minColumnWidth + elemsWidthMin.length *\n                    this.minColumnWidth > this.tableWidth\n            ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Set minimal width to element with \"auto\" width\n         */\n        setWidthToColumnsWidthAuto: function () {\n            var elemsWidthAuto = $(this.table).find('th[style*=\"width: auto\"]:visible');\n\n            _.each(elemsWidthAuto, function (elem) {\n                $(elem).outerWidth(this.minColumnWidth - 1);\n            }, this);\n        },\n\n        /**\n         * Check conditions to set auto width\n         */\n        hasMinimal: function () {\n            var table = $(this.table),\n                elemsWidthMin = table.find('th[style*=\"width: ' + (this.minColumnWidth - 1) + 'px\"]:visible'),\n                elemsWidthAuto = table.find('th[style*=\"width: auto\"]:visible');\n\n            if (\n                    elemsWidthAuto && this.sumColumnsWidth + elemsWidthAuto.length *\n                    this.minColumnWidth + elemsWidthMin.length * this.minColumnWidth + 5 < this.tableWidth\n            ) {\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Set \"auto\" width to element with minimal width\n         */\n        setAuto: function () {\n            var elemsWidthAuto = $(this.table).find('th[style*=\"width: ' + (this.minColumnWidth - 1) + 'px\"]:visible');\n\n            _.each(elemsWidthAuto, function (elem) {\n                $(elem).outerWidth('auto');\n            }, this);\n        },\n\n        /**\n         * Check columns width and preprocessing\n         */\n        preprocessingWidth: function () {\n            if (this.checkSumColumnsWidth()) {\n                this.setWidthToColumnsWidthAuto();\n            } else if (this.hasMinimal()) {\n                this.setAuto();\n            }\n        },\n\n        /**\n         * Init columns elements,\n         * set width to current column element,\n         * add resizable element to columns header,\n         * check and add no-resize class to last column,\n         * stop parents events,\n         * add handler to visibility column\n         *\n         * @param {Object} column - columns header element (th)\n         */\n        initColumn: function (column) {\n            var model = ko.dataFor(column),\n                ctxIndex = this.getCtxIndex(ko.contextFor(column)),\n                table = this.table;\n\n            model.width = this.getDefaultWidth(column);\n\n            if (!this.hasColumn(model, ctxIndex, false)) {\n                this.columnsElements[model.index] = this.columnsElements[model.index] || {};\n                this.columnsElements[model.index][ctxIndex] = column;\n                this.initResizableElement(column);\n                this.setStopPropagationHandler(column);\n                $(column).outerWidth(model.width);\n            }\n\n            this.refreshLastColumn(column);\n            this.preprocessingWidth();\n\n            model.on('visible', this.refreshLastColumn.bind(this, column));\n            model.on('visible', this.preprocessingWidth.bind(this));\n        },\n\n        /**\n         * Hack for mozilla firefox\n         */\n        _layoutFixedPolyfill: function () {\n            var self = this;\n\n            setTimeout(function () {\n                if (self.layoutFixedPolyfillIterator < 20) {\n                    $(window).resize();\n                    self.layoutFixedPolyfillIterator++;\n                    self._layoutFixedPolyfill();\n                } else {\n                    return false;\n                }\n            }, 500);\n        },\n\n        /**\n         * Check element is resizable or not\n         * and append resizable element to DOM\n         *\n         * @param {Object} column - columns header element (th)\n         * @returns {Boolean}\n         */\n        initResizableElement: function (column) {\n            var model = ko.dataFor(column),\n                ctx = ko.contextFor(column),\n                tempalteDragElement = '<div class=\"' + ctx.$parent.resizeConfig.classResize + '\"></div>';\n\n            if (_.isUndefined(model.resizeEnabled) || model.resizeEnabled) {\n                $(column).append(tempalteDragElement);\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Check event target and if need stop parents event,\n         *\n         * @param {Object} column - columns header element (th)\n         * @returns {Boolean}\n         */\n        setStopPropagationHandler: function (column) {\n            var events,\n                click,\n                mousedown;\n\n            $(column).on('click', this._eventProxy);\n            $(column).on('mousedown', this._eventProxy);\n\n            events = $._data(column, 'events');\n\n            click = events.click;\n            mousedown = events.mousedown;\n            click.unshift(click.pop());\n            mousedown.unshift(mousedown.pop());\n\n            return this;\n        },\n\n        /**\n         * Check event target and stop event if need\n         *\n         * @param {Object} event\n         */\n        _eventProxy: function (event) {\n            if ($(event.target).is('.' + this.resizableElementClass)) {\n\n                if (event.type === 'click') {\n                    event.stopImmediatePropagation();\n                } else if (event.type === 'mousedown') {\n                    this.mousedownHandler(event);\n                }\n            }\n        },\n\n        /**\n         * Check visible columns and set disable class to resizable elements,\n         *\n         * @param {Object} column - columns header element (th)\n         */\n        refreshLastColumn: function (column) {\n            var i = 0,\n                columns = $(column).parent().children().not(':hidden'),\n                length = columns.length;\n\n            $('.' + this.visibleClass).removeClass(this.visibleClass);\n\n            $(column).parent().children().not(':hidden').last().addClass(this.visibleClass);\n\n            for (i; i < length; i++) {\n\n                if (!columns.eq(i).find('.' + this.resizableElementClass).length && i) {\n                    columns.eq(i - 1).addClass(this.visibleClass);\n                }\n            }\n\n        },\n\n        /**\n         * Refresh max height to row elements,\n         *\n         * @param {Object} elem - (td)\n         */\n        refreshMaxRowHeight: function (elem) {\n            var rowsH = this.maxRowsHeight(),\n                curEL = $(elem).find('div'),\n                height,\n                obj = this.hasRow($(elem).parent()[0], true);\n\n            curEL.css('white-space', 'nowrap');\n            height = curEL.height() * this.showLines;\n            curEL.css('white-space', 'normal');\n\n            if (obj) {\n                if (obj.maxHeight < height) {\n                    rowsH[_.indexOf(rowsH, obj)].maxHeight = height;\n                } else {\n                    return false;\n                }\n            } else {\n                rowsH.push({\n                    elem: $(elem).parent()[0],\n                    maxHeight: height\n                });\n            }\n\n            $(elem).parent().children().find(this.cellContentElement).css('max-height', height + 'px');\n            this.maxRowsHeight(rowsH);\n        },\n\n        /**\n         * Set resize class to elements when resizable\n         */\n        _setResizeClass: function () {\n            var rowElements = $(this.table).find('tr');\n\n            rowElements\n                .find('td:eq(' + this.resizeConfig.curResizeElem.ctx.$index() + ')')\n                .addClass(this.resizingColumnClass);\n            rowElements\n                .find('td:eq(' + this.resizeConfig.depResizeElem.ctx.$index() + ')')\n                .addClass(this.resizingColumnClass);\n        },\n\n        /**\n         * Remove resize class to elements when resizable\n         */\n        _removeResizeClass: function () {\n            var rowElements = $(this.table).find('tr');\n\n            rowElements\n                .find('td:eq(' + this.resizeConfig.curResizeElem.ctx.$index() + ')')\n                .removeClass(this.resizingColumnClass);\n            rowElements\n                .find('td:eq(' + this.resizeConfig.depResizeElem.ctx.$index() + ')')\n                .removeClass(this.resizingColumnClass);\n        },\n\n        /**\n         * Check conditions to resize\n         *\n         * @returns {Boolean}\n         */\n        _canResize: function (column) {\n            if (\n                $(column).hasClass(this.visibleClass) ||\n                !$(this.resizeConfig.depResizeElem.elems[0]).find('.' + this.resizableElementClass).length\n            ) {\n                return false;\n            }\n\n            return true;\n        },\n\n        /**\n         * Mouse down event handler,\n         * find current and dep column to resize\n         *\n         * @param {Object} event\n         */\n        mousedownHandler: function (event) {\n            var target = event.target,\n                column = $(target).parent()[0],\n                cfg = this.resizeConfig,\n                body = $('body');\n\n            event.stopImmediatePropagation();\n            cfg.curResizeElem.model = ko.dataFor(column);\n            cfg.curResizeElem.ctx = ko.contextFor(column);\n            cfg.curResizeElem.elems = this.hasColumn(cfg.curResizeElem.model, false, true);\n            cfg.curResizeElem.position = event.pageX;\n            cfg.depResizeElem.elems = this.getNextElements(cfg.curResizeElem.elems[0]);\n            cfg.depResizeElem.model = ko.dataFor(cfg.depResizeElem.elems[0]);\n            cfg.depResizeElem.ctx = ko.contextFor(cfg.depResizeElem.elems[0]);\n\n            this._setResizeClass();\n\n            if (!this._canResize(column)) {\n                return false;\n            }\n\n            event.stopPropagation();\n            this.resizable = true;\n            cfg.curResizeElem.model.width = $(cfg.curResizeElem.elems[0]).outerWidth();\n            cfg.depResizeElem.model.width = $(cfg.depResizeElem.elems[0]).outerWidth();\n            body.addClass(this.inResizeClass);\n            body.bind('mousemove', this.mousemoveHandler);\n            $(window).bind('mouseup', this.mouseupHandler);\n        },\n\n        /**\n         * Mouse move event handler,\n         * change columns width\n         *\n         * @param {Object} event\n         */\n        mousemoveHandler: function (event) {\n            var cfg = this.resizeConfig,\n                width = event.pageX - cfg.curResizeElem.position,\n                self = this;\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            if (\n                this.resizable &&\n                this.minColumnWidth < cfg.curResizeElem.model.width + width &&\n                this.minColumnWidth < cfg.depResizeElem.model.width - width &&\n                cfg.previousWidth !== width\n            ) {\n                cfg.curResizeElem.model.width += width;\n                cfg.depResizeElem.model.width -= width;\n\n                cfg.curResizeElem.elems.forEach(function (el) {\n                    $(el).outerWidth(cfg.curResizeElem.model.width);\n                });\n                cfg.depResizeElem.elems.forEach(function (el) {\n                    $(el).outerWidth(cfg.depResizeElem.model.width);\n                });\n\n                cfg.previousWidth = width;\n                cfg.curResizeElem.position = event.pageX;\n            } else if (width <= -(cfg.curResizeElem.model.width - this.minColumnWidth)) {\n\n                cfg.curResizeElem.elems.forEach(function (el) {\n                    $(el).outerWidth(self.minColumnWidth);\n                });\n                cfg.depResizeElem.elems.forEach(function (el) {\n                    $(el).outerWidth(\n                    cfg.depResizeElem.model.width +\n                    cfg.curResizeElem.model.width -\n                    self.minColumnWidth);\n                });\n\n            } else if (width >= cfg.depResizeElem.model.width - this.minColumnWidth) {\n\n                cfg.depResizeElem.elems.forEach(function (el) {\n                    $(el).outerWidth(self.minColumnWidth);\n                });\n                cfg.curResizeElem.elems.forEach(function (el) {\n                    $(el).outerWidth(\n                        cfg.curResizeElem.model.width +\n                        cfg.depResizeElem.model.width -\n                        self.minColumnWidth\n                    );\n                });\n            }\n        },\n\n        /**\n         * Mouse up event handler,\n         * change columns width\n         *\n         * @param {Object} event\n         */\n        mouseupHandler: function (event) {\n            var cfg = this.resizeConfig,\n                body = $('body');\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this._removeResizeClass();\n            this.storageColumnsData[cfg.curResizeElem.model.index] = cfg.curResizeElem.model.width;\n            this.storageColumnsData[cfg.depResizeElem.model.index] = cfg.depResizeElem.model.width;\n            this.resizable = false;\n\n            this.store('storageColumnsData');\n\n            body.removeClass(this.inResizeClass);\n            body.unbind('mousemove', this.mousemoveHandler);\n            $(window).unbind('mouseup', this.mouseupHandler);\n        },\n\n        /**\n         * Find dependency element\n         *\n         * @param {Object} element - current element\n         * @returns {Object} next element data\n         */\n        getNextElements: function (element) {\n            var nextElem = $(element).next()[0],\n                nextElemModel = ko.dataFor(nextElem),\n                nextElemData = this.hasColumn(nextElemModel, false, true);\n\n            if (nextElemData) {\n                if (nextElemModel.visible) {\n                    return nextElemData;\n                }\n\n                return this.getNextElements(nextElem);\n            }\n        },\n\n        /**\n         * Get default width\n         *\n         * @param {Object} column - (th) element\n         * @return {String} width for current column\n         */\n        getDefaultWidth: function (column) {\n            var model = ko.dataFor(column);\n\n            if (this.storageColumnsData[model.index]) {\n                return this.storageColumnsData[model.index];\n            }\n\n            if (model.resizeDefaultWidth) {\n                return parseInt(model.resizeDefaultWidth, 10);\n            }\n\n            return 'auto';\n        },\n\n        /**\n         * Check column is render or not\n         *\n         * @param {Object} model - cur column model\n         * @param {String|Boolean} ctxIndex - index of context, or false, if want to get cols from all ctx\n         * @param {Boolean} returned - need return column object or not\n         * @return {Boolean} if returned param is false, returned boolean value, else return current object data\n         */\n        hasColumn: function (model, ctxIndex, returned) {\n            var colElem = this.columnsElements[model.index] || {},\n                getFromAllCtx = ctxIndex === false;\n\n            if (colElem && (getFromAllCtx || colElem.hasOwnProperty(ctxIndex))) {\n\n                if (returned) {\n                    return getFromAllCtx ?\n                        _.values(colElem) :\n                        colElem[ctxIndex];\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        /**\n         * Check row is render or not\n         *\n         * @param {Object} elem - cur column element\n         * @param {Boolean} returned - need return column object or not\n         * @return {Boolean} if returned param is false, returned boolean falue, else return current object data\n         */\n        hasRow: function (elem, returned) {\n            var i = 0,\n                el = this.maxRowsHeight(),\n                length = el.length;\n\n            for (i; i < length; i++) {\n\n                if (this.maxRowsHeight()[i].elem === elem) {\n\n                    if (returned) {\n                        return this.maxRowsHeight()[i];\n                    }\n\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Generate index that will indentify context\n         *\n         * @param {Object} ctx\n         * @return {String}\n         */\n        getCtxIndex: function (ctx)\n        {\n            return ctx ? ctx.$parents.reduce(function (pv, cv) {\n                return (pv.index || pv) + (cv || {}).index;\n            }) : ctx;\n        }\n    });\n});\n","Magento_Ui/js/grid/provider.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mageUtils',\n    'uiElement',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate'\n], function ($, _, utils, Element, alert, $t) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            listens: {\n                params: 'reload'\n            }\n        },\n\n        /**\n         * Initializes provider component.\n         *\n         * @returns {Provider} Chainable.\n         */\n        initialize: function () {\n            utils.limit(this, 'reload', 300);\n            _.bindAll(this, 'onReload');\n\n            return this._super();\n        },\n\n        /**\n         * Initializes provider config.\n         *\n         * @returns {Provider} Chainable.\n         */\n        initConfig: function () {\n            this._super();\n\n            this.setData({\n                items: [],\n                totalRecords: 0\n            });\n\n            return this;\n        },\n\n        /**\n         *\n         * @param {Object} data\n         * @returns {Provider} Chainable.\n         */\n        setData: function (data) {\n            data = this.processData(data);\n\n            this.set('data', data);\n\n            return this;\n        },\n\n        /**\n         * Reloads data with current parameters.\n         */\n        reload: function () {\n            this.trigger('reload');\n\n            if (this.request && this.request.readyState !== 4) {\n                this.request.abort();\n            }\n\n            this.request = $.ajax({\n                url: this['update_url'],\n                method: 'GET',\n                data: this.get('params'),\n                dataType: 'json'\n            });\n\n            this.request\n                .done(this.onReload)\n                .error(this.onError);\n        },\n\n        /**\n         * Processes data before applying it.\n         *\n         * @param {Object} data - Data to be processed.\n         * @returns {Object}\n         */\n        processData: function (data) {\n            var items = data.items;\n\n            _.each(items, function (record, index) {\n                record._rowIndex = index;\n            });\n\n            return data;\n        },\n\n        /**\n         * Handles reload error.\n         */\n        onError: function (xhr) {\n            if (xhr.statusText === 'abort') {\n                return;\n            }\n\n            alert({\n                content: $t('Something went wrong.')\n            });\n        },\n\n        /**\n         * Handles successful data reload.\n         *\n         * @param {Object} data - Retrieved data object.\n         */\n        onReload: function (data) {\n            this.setData(data)\n                .trigger('reloaded');\n        }\n    });\n});\n","Magento_Ui/js/grid/export.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'uiElement'\n], function ($, _, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            template: 'ui/grid/exportButton',\n            checked: '',\n            modules: {\n                selections: '${ $.selectProvider }'\n            }\n        },\n\n        initialize: function () {\n            this._super()\n                .initChecked();\n        },\n\n        initObservable: function () {\n            this._super()\n                .observe('checked');\n\n            return this;\n        },\n\n        initChecked: function () {\n            if (!this.checked()) {\n                this.checked(\n                    this.options[0].value\n                );\n            }\n\n            return this;\n        },\n\n        getParams: function () {\n            var selections = this.selections(),\n                data = selections ? selections.getSelections() : null,\n                itemsType,\n                result = {};\n\n            if (data) {\n                itemsType = data.excludeMode ? 'excluded' : 'selected';\n                result.filters = data.params.filters;\n                result.search = data.params.search;\n                result.namespace = data.params.namespace;\n                result[itemsType] = data[itemsType];\n\n                if (!result[itemsType].length) {\n                    result[itemsType] = false;\n                }\n            }\n\n            return result;\n        },\n\n        getActiveOption: function () {\n            return _.findWhere(this.options, {\n                value: this.checked()\n            });\n        },\n\n        buildOptionUrl: function (option) {\n            var params = this.getParams();\n\n            if (!params) {\n                return 'javascript:void(0);';\n            }\n\n            return option.url + '?' + $.param(params);\n            //TODO: MAGETWO-40250\n        },\n\n        applyOption: function () {\n            var option = this.getActiveOption(),\n                url = this.buildOptionUrl(option);\n\n            location.href = url;\n\n        }\n    });\n});\n","Magento_Ui/js/grid/tree-massactions.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'Magento_Ui/js/grid/massactions'\n], function (ko, _, Massactions) {\n    'use strict';\n\n    return Massactions.extend({\n        defaults: {\n            template: 'ui/grid/tree-massactions',\n            submenuTemplate: 'ui/grid/submenu',\n            selectProvider: '',\n            modules: {\n                selections: '${ $.selectProvider }'\n            },\n            listens: {\n                opened: 'hideSubmenus'\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Massactions} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .recursiveObserveActions(this.actions());\n\n            return this;\n        },\n\n        /**\n         * Recursive initializes observable actions.\n         *\n         * @param {Array} actions - Action objects.\n         * @returns {Massactions} Chainable.\n         */\n        recursiveObserveActions: function (actions) {\n            _.each(actions, function (action) {\n                if (action.actions) {\n                    action.visible = ko.observable(false);\n                    action.parent = actions;\n                    this.recursiveObserveActions(action.actions);\n                }\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Applies specified action.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @returns {Massactions} Chainable.\n         */\n        applyAction: function (actionIndex) {\n            var action = this.getAction(actionIndex),\n                visibility;\n\n            if (action.visible) {\n                visibility = action.visible();\n\n                this.hideSubmenus(action.parent);\n                action.visible(!visibility);\n\n                return this;\n            }\n\n            return this._super(actionIndex);\n        },\n\n        /**\n         * Retrieves action object associated with a specified index.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @param {Array} actions - Action objects.\n         * @returns {Object} Action object.\n         */\n        getAction: function (actionIndex, actions) {\n            var currentActions = actions || this.actions(),\n                result = false;\n\n            _.find(currentActions, function (action) {\n                if (action.type === actionIndex) {\n                    result = action;\n\n                    return true;\n                }\n\n                if (action.actions) {\n                    result = this.getAction(actionIndex, action.actions);\n\n                    return result;\n                }\n            }, this);\n\n            return result;\n        },\n\n        /**\n         * Recursive hide all sub folders in given array.\n         *\n         * @param {Array} actions - Action objects.\n         * @returns {Massactions} Chainable.\n         */\n        hideSubmenus: function (actions) {\n            var currentActions = actions || this.actions();\n\n            _.each(currentActions, function (action) {\n                if (action.visible && action.visible()) {\n                    action.visible(false);\n                }\n\n                if (action.actions) {\n                    this.hideSubmenus(action.actions);\n                }\n            }, this);\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/grid/massactions.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    'mageUtils',\n    'Magento_Ui/js/lib/collapsible',\n    'Magento_Ui/js/modal/confirm',\n    'Magento_Ui/js/modal/alert',\n    'mage/translate'\n], function (_, registry, utils, Collapsible, confirm, alert, $t) {\n    'use strict';\n\n    return Collapsible.extend({\n        defaults: {\n            template: 'ui/grid/actions',\n            stickyTmpl: 'ui/grid/sticky/actions',\n            selectProvider: '',\n            actions: [],\n            noItemsMsg: $t('You haven\\'t selected any items!'),\n            modules: {\n                selections: '${ $.selectProvider }'\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Massactions} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe('actions');\n\n            return this;\n        },\n\n        /**\n         * Applies specified action.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @returns {Massactions} Chainable.\n         */\n        applyAction: function (actionIndex) {\n            var data = this.getSelections(),\n                action,\n                callback;\n\n            if (!data.total) {\n                alert({\n                    content: this.noItemsMsg\n                });\n\n                return this;\n            }\n\n            action   = this.getAction(actionIndex);\n            callback = this._getCallback(action, data);\n\n            action.confirm ?\n                this._confirm(action, callback) :\n                callback();\n\n            return this;\n        },\n\n        /**\n         * Retrieves selections data from the selections provider.\n         *\n         * @returns {Object|Undefined}\n         */\n        getSelections: function () {\n            var provider = this.selections(),\n                selections = provider && provider.getSelections();\n\n            return selections;\n        },\n\n        /**\n         * Retrieves action object associated with a specified index.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @returns {Object} Action object.\n         */\n        getAction: function (actionIndex) {\n            return _.findWhere(this.actions(), {\n                type: actionIndex\n            });\n        },\n\n        /**\n         * Adds new action. If action with a specfied identifier\n         * already exists, than the original one will be overrided.\n         *\n         * @param {Object} action - Action object.\n         * @returns {Massactions} Chainable.\n         */\n        addAction: function (action) {\n            var actions = this.actions(),\n                index = _.findIndex(actions, {\n                    type: action.type\n                });\n\n            ~index ?\n                actions[index] = action :\n                actions.push(action);\n\n            this.actions(actions);\n\n            return this;\n        },\n\n        /**\n         * Creates action callback based on its' data. If action doesn't spicify\n         * a callback function than the default one will be used.\n         *\n         * @private\n         * @param {Object} action - Actions' object.\n         * @param {Object} selections - Selections data.\n         * @returns {Function} Callback function.\n         */\n        _getCallback: function (action, selections) {\n            var callback = action.callback,\n                args     = [action, selections];\n\n            if (utils.isObject(callback)) {\n                args.unshift(callback.target);\n\n                callback = registry.async(callback.provider);\n            } else if (typeof callback != 'function') {\n                callback = this.defaultCallback.bind(this);\n            }\n\n            return function () {\n                callback.apply(null, args);\n            };\n        },\n\n        /**\n         * Default action callback. Sends selections data\n         * via POST request.\n         *\n         * @param {Object} action - Action data.\n         * @param {Object} data - Selections data.\n         */\n        defaultCallback: function (action, data) {\n            var itemsType = data.excludeMode ? 'excluded' : 'selected',\n                selections = {};\n\n            selections[itemsType] = data[itemsType];\n\n            if (!selections[itemsType].length) {\n                selections[itemsType] = false;\n            }\n\n            _.extend(selections, data.params || {});\n\n            utils.submit({\n                url: action.url,\n                data: selections\n            });\n        },\n\n        /**\n         * Shows actions' confirmation window.\n         *\n         * @param {Object} action - Actions' data.\n         * @param {Function} callback - Callback that will be\n         *      invoked if action is confirmed.\n         */\n        _confirm: function (action, callback) {\n            var confirmData = action.confirm;\n\n            confirm({\n                title: confirmData.title,\n                content: confirmData.message,\n                actions: {\n                    confirm: callback\n                }\n            });\n        }\n    });\n});\n","Magento_Ui/js/grid/paging/sizes.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'ko',\n    'underscore',\n    'mageUtils',\n    'uiElement'\n], function (ko, _, utils, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            template: 'ui/grid/paging/sizes',\n            value: 20,\n            minSize: 1,\n            maxSize: 999,\n            options: {\n                '20': {\n                    value: 20,\n                    label: 20\n                },\n                '30': {\n                    value: 30,\n                    label: 30\n                },\n                '50': {\n                    value: 50,\n                    label: 50\n                },\n                '100': {\n                    value: 100,\n                    label: 100\n                },\n                '200': {\n                    value: 200,\n                    label: 200\n                }\n            },\n            statefull: {\n                options: true,\n                value: true\n            },\n            listens: {\n                value: 'onValueChange',\n                options: 'onSizesChange'\n            }\n        },\n\n        /**\n         * Initializes sizes component.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .updateArray();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'value',\n                    'editing',\n                    'customVisible',\n                    'customValue'\n                ])\n                .track({\n                    optionsArray: []\n                });\n\n            this._value = ko.pureComputed({\n                read: ko.getObservable(this, 'value'),\n\n                /**\n                 * Validates input field prior to updating 'value' property.\n                 */\n                write: function (value) {\n                    value = this.normalize(value);\n\n                    this.value = value;\n                    this._value.notifySubscribers(value);\n                },\n\n                owner: this\n            });\n\n            return this;\n        },\n\n        /**\n         * Starts editing of the specified size.\n         *\n         * @param {Number} value - Value of the size.\n         * @returns {Sizes} Chainable.\n         */\n        edit: function (value) {\n            this.editing = value;\n\n            return this;\n        },\n\n        /**\n         * Discards changes made to the currently editable size.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        discardEditing: function () {\n            var value = this.editing;\n\n            if (value) {\n                this.updateSize(value, value);\n            }\n\n            return this;\n        },\n\n        /**\n         * Invokes 'discardEditing' and 'discardCustom' actions.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        discardAll: function () {\n            this.discardEditing()\n                .discardCustom();\n\n            return this;\n        },\n\n        /**\n         * Returns value of the first size.\n         *\n         * @returns {Number}\n         */\n        getFirst: function () {\n            return this.optionsArray[0].value;\n        },\n\n        /**\n         * Returns size which matches specified value.\n         *\n         * @param {Number} value - Value of the item.\n         * @returns {Object|Undefined}\n         */\n        getSize: function (value) {\n            return this.options[value];\n        },\n\n        /**\n         * Sets current size to the specified value.\n         *\n         * @param {Number} value - Value of the size.\n         * @returns {Sizes} Chainable.\n         */\n        setSize: function (value) {\n            this.value = value;\n\n            return this;\n        },\n\n        /**\n         * Adds a new value to sizes list.\n         *\n         * @param {Number} value - Value to be added.\n         * @returns {Sizes} Chainable.\n         */\n        addSize: function (value) {\n            var size;\n\n            if (!this.hasSize(value)) {\n                size = this.createSize(value);\n\n                this.set('options.' + value, size);\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes provided value from the sizes list.\n         *\n         * @param {Number} value - Value to be removed.\n         * @returns {Sizes} Chainable.\n         */\n        removeSize: function (value) {\n            if (!this.hasSize(value)) {\n                return this;\n            }\n\n            this.remove('options.' + value);\n\n            if (this.isSelected(value)) {\n                this.setSize(this.getFirst());\n            }\n\n            return this;\n        },\n\n        /**\n         * Updates existing value to the provided one. If new value\n         * is not specified, then sizes' '_value' property will be taken.\n         *\n         * @param {Number} value - Existing value that should be updated.\n         * @param {(Number|String)} [newValue=size._value] - New size value.\n         * @returns {Sizes} Chainable.\n         */\n        updateSize: function (value, newValue) {\n            var size = this.getSize(value);\n\n            if (!size) {\n                return this;\n            }\n\n            newValue = newValue || size._value;\n\n            if (isNaN(+newValue)) {\n                this.discardEditing();\n\n                return this;\n            }\n\n            newValue = this.normalize(newValue);\n\n            this.remove('options.' + value)\n                .addSize(newValue);\n\n            if (this.isSelected(value)) {\n                this.setSize(newValue);\n            }\n\n            return this;\n        },\n\n        /**\n         * Creates new editable size instance with the provided value.\n         *\n         * @param {Number} value - Value of the size.\n         * @returns {Object}\n         */\n        createSize: function (value) {\n            return {\n                value: value,\n                label: value,\n                _value: value,\n                editable: true\n            };\n        },\n\n        /**\n         * Checks if provided value exists in the sizes list.\n         *\n         * @param {Number} value - Value to be checked.\n         * @returns {Boolean}\n         */\n        hasSize: function (value) {\n            return !!this.getSize(value);\n        },\n\n        /**\n         * Hides and clears custom field.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        discardCustom: function () {\n            this.hideCustom()\n                .clearCustom();\n\n            return this;\n        },\n\n        /**\n         * Shows custom field.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        showCustom: function () {\n            this.customVisible = true;\n\n            return this;\n        },\n\n        /**\n         * Hides custom field.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        hideCustom: function () {\n            this.customVisible = false;\n\n            return this;\n        },\n\n        /**\n         * Empties value of the custom field.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        clearCustom: function () {\n            this.customValue = '';\n\n            return this;\n        },\n\n        /**\n         * Adds a new size specified in the custom field.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        applyCustom: function () {\n            var value = this.customValue;\n\n            value = this.normalize(value);\n\n            this.addSize(value)\n                .setSize(value)\n                .discardCustom();\n\n            return this;\n        },\n\n        /**\n         * Checks if custom field is visible.\n         *\n         * @returns {Boolean}\n         */\n        isCustomVisible: function () {\n            return this.customVisible;\n        },\n\n        /**\n         * Converts provided value to a number and puts\n         * it in range between 'minSize' and 'maxSize' properties.\n         *\n         * @param {(Number|String)} value - Value to be normalized.\n         * @returns {Number}\n         */\n        normalize: function (value) {\n            value = +value;\n\n            if (isNaN(value)) {\n                return this.getFirst();\n            }\n\n            return utils.inRange(Math.round(value), this.minSize, this.maxSize);\n        },\n\n        /**\n         * Updates the array of options.\n         *\n         * @returns {Sizes} Chainable.\n         */\n        updateArray: function () {\n            var array = _.values(this.options);\n\n            this.optionsArray = _.sortBy(array, 'value');\n\n            return this;\n        },\n\n        /**\n         * Checks if provided value is in editing state.\n         *\n         * @param {Number} value - Value to be checked.\n         * @returns {Boolean}\n         */\n        isEditing: function (value) {\n            return this.editing === value;\n        },\n\n        /**\n         * Checks if provided value is selected.\n         *\n         * @param {Number} value - Value to be checked.\n         * @returns {Boolean}\n         */\n        isSelected: function (value) {\n            return this.value === value;\n        },\n\n        /**\n         * Listener of the 'value' property changes.\n         */\n        onValueChange: function () {\n            this.discardAll()\n                .trigger('close');\n        },\n\n        /**\n         * Listener of the 'options' object changes.\n         */\n        onSizesChange: function () {\n            this.editing = false;\n\n            this.updateArray();\n        }\n    });\n});\n","Magento_Ui/js/grid/paging/paging.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'ko',\n    'underscore',\n    'mageUtils',\n    'uiLayout',\n    'uiElement'\n], function (ko, _, utils, layout, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            template: 'ui/grid/paging/paging',\n            totalTmpl: 'ui/grid/paging-total',\n            pageSize: 20,\n            current: 1,\n            selectProvider: '',\n\n            sizesConfig: {\n                component: 'Magento_Ui/js/grid/paging/sizes',\n                name: '${ $.name }_sizes',\n                storageConfig: {\n                    provider: '${ $.storageConfig.provider }',\n                    namespace: '${ $.storageConfig.namespace }'\n                }\n            },\n\n            imports: {\n                pageSize: '${ $.sizesConfig.name }:value',\n                totalSelected: '${ $.selectProvider }:totalSelected',\n                totalRecords: '${ $.provider }:data.totalRecords'\n            },\n\n            exports: {\n                pageSize: '${ $.provider }:params.paging.pageSize',\n                current: '${ $.provider }:params.paging.current'\n            },\n\n            listens: {\n                'pages': 'onPagesChange',\n                'pageSize': 'onPageSizeChange',\n                'totalRecords': 'updateCounter',\n                '${ $.provider }:params.filters': 'goFirst'\n            },\n\n            modules: {\n                sizes: '${ $.sizesConfig.name }'\n            }\n        },\n\n        /**\n         * Initializes paging component.\n         *\n         * @returns {Paging} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initSizes()\n                .updateCounter();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Paging} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'totalSelected',\n                    'totalRecords',\n                    'pageSize',\n                    'pages',\n                    'current'\n                ]);\n\n            this._current = ko.pureComputed({\n                read: ko.getObservable(this, 'current'),\n\n                /**\n                 * Validates page change according to user's input.\n                 * Sets current observable to result of validation.\n                 * Calls reload method then.\n                 */\n                write: function (value) {\n                    this.setPage(value)\n                        ._current.notifySubscribers(this.current);\n                },\n\n                owner: this\n            });\n\n            return this;\n        },\n\n        /**\n         * Initializes sizes component.\n         *\n         * @returns {Paging} Chainable.\n         */\n        initSizes: function () {\n            layout([this.sizesConfig]);\n\n            return this;\n        },\n\n        /**\n         * Sets cursor to the provied value.\n         *\n         * @param {(Number|String)} value - New value of the cursor.\n         * @returns {Paging} Chainable.\n         */\n        setPage: function (value) {\n            this.current = this.normalize(value);\n\n            return this;\n        },\n\n        /**\n         * Increments current page value.\n         *\n         * @returns {Paging} Chainable.\n         */\n        next: function () {\n            this.setPage(this.current + 1);\n\n            return this;\n        },\n\n        /**\n         * Decrements current page value.\n         *\n         * @returns {Paging} Chainable.\n         */\n        prev: function () {\n            this.setPage(this.current - 1);\n\n            return this;\n        },\n\n        /**\n         * Goes to the first page.\n         *\n         * @returns {Paging} Chainable.\n         */\n        goFirst: function () {\n            this.current = 1;\n\n            return this;\n        },\n\n        /**\n         * Goes to the last page.\n         *\n         * @returns {Paging} Chainable.\n         */\n        goLast: function () {\n            this.current = this.pages;\n\n            return this;\n        },\n\n        /**\n         * Checks if current page is the first one.\n         *\n         * @returns {Boolean}\n         */\n        isFirst: function () {\n            return this.current === 1;\n        },\n\n        /**\n         * Checks if current page is the last one.\n         *\n         * @returns {Boolean}\n         */\n        isLast: function () {\n            return this.current === this.pages;\n        },\n\n        /**\n         * Updates number of pages.\n         */\n        updateCounter: function () {\n            this.pages = Math.ceil(this.totalRecords / this.pageSize) || 1;\n\n            return this;\n        },\n\n        /**\n         * Calculates new page cursor based on the\n         * previous and current page size values.\n         *\n         * @returns {Number} Updated cursor value.\n         */\n        updateCursor: function () {\n            var cursor  = this.current - 1,\n                size    = this.pageSize,\n                oldSize = this.previousSize,\n                delta   = cursor * (oldSize  - size) / size;\n\n            delta = size > oldSize ?\n                Math.ceil(delta) :\n                Math.floor(delta);\n\n            cursor += delta + 1;\n\n            this.previousSize = size;\n\n            this.setPage(cursor);\n\n            return this;\n        },\n\n        /**\n         * Converts provided value to a number and puts\n         * it in range between 1 and total amount of pages.\n         *\n         * @param {(Number|String)} value - Value to be normalized.\n         * @returns {Number}\n         */\n        normalize: function (value) {\n            value = +value;\n\n            if (isNaN(value)) {\n                return 1;\n            }\n\n            return utils.inRange(Math.round(value), 1, this.pages);\n        },\n\n        /**\n         * Handles changes of the page size.\n         */\n        onPageSizeChange: function () {\n            this.updateCounter()\n                .updateCursor();\n        },\n\n        /**\n         * Handles changes of the pages amount.\n         */\n        onPagesChange: function () {\n            this.updateCursor();\n        }\n    });\n});\n","Magento_Ui/js/grid/editing/record.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiLayout',\n    'uiCollection'\n], function (_, utils, layout, Collection) {\n    'use strict';\n\n    return Collection.extend({\n        defaults: {\n            active: true,\n            hasChanges: false,\n            fields: [],\n            errorsCount: 0,\n            fieldTmpl: 'ui/grid/editing/field',\n            rowTmpl: 'ui/grid/editing/row',\n            templates: {\n                fields: {\n                    base: {\n                        parent: '${ $.$data.record.name }',\n                        name: '${ $.$data.column.index }',\n                        provider: '${ $.$data.record.name }',\n                        dataScope: 'data.${ $.$data.column.index }',\n                        imports: {\n                            disabled: '${ $.$data.record.parentName }:fields.${ $.$data.column.index }.disabled'\n                        },\n                        isEditor: true\n                    },\n                    text: {\n                        component: 'Magento_Ui/js/form/element/abstract',\n                        template: 'ui/form/element/input'\n                    },\n                    date: {\n                        component: 'Magento_Ui/js/form/element/date',\n                        template: 'ui/form/element/date',\n                        dateFormat: 'MMM d, y h:mm:ss a'\n                    },\n                    select: {\n                        component: 'Magento_Ui/js/form/element/select',\n                        template: 'ui/form/element/select',\n                        options: '${ JSON.stringify($.$data.column.options) }'\n                    }\n                }\n            },\n            listens: {\n                elems: 'updateFields',\n                data: 'updateState'\n            },\n            imports: {\n                onColumnsUpdate: '${ $.columnsProvider }:elems'\n            },\n            modules: {\n                columns: '${ $.columnsProvider }',\n                editor: '${ $.editorProvider }'\n            }\n        },\n\n        /**\n         * Initializes record component.\n         *\n         * @returns {Record} Chainable.\n         */\n        initialize: function () {\n            _.bindAll(this, 'countErrors');\n            utils.limit(this, 'updateState', 10);\n\n            return this._super();\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Record} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track('errorsCount hasChanges')\n                .observe('active fields');\n\n            return this;\n        },\n\n        /**\n         * Adds listeners on a field.\n         *\n         * @returns {Record} Chainable.\n         */\n        initElement: function (field) {\n            field.on('error', this.countErrors);\n\n            return this._super();\n        },\n\n        /**\n         * Creates new instance of a field.\n         *\n         * @param {Column} column - Column instance which contains field definition.\n         * @returns {Record} Chainable.\n         */\n        initField: function (column) {\n            var field = this.buildField(column);\n\n            layout([field]);\n\n            return this;\n        },\n\n        /**\n         * Builds fields' configuration described in a provided column.\n         *\n         * @param {Column} column - Column instance which contains field definition.\n         * @returns {Object} Complete fields' configuration.\n         */\n        buildField: function (column) {\n            var fields = this.templates.fields,\n                field  = column.editor;\n\n            if (_.isObject(field) && field.editorType) {\n                field = utils.extend({}, fields[field.editorType], field);\n            } else if (_.isString(field)) {\n                field = fields[field];\n            }\n\n            field = utils.extend({}, fields.base, field);\n\n            return utils.template(field, {\n                record: this,\n                column: column\n            }, true, true);\n        },\n\n        /**\n         * Creates fields for the specfied columns.\n         *\n         * @param {Array} columns - An array of column instances.\n         * @returns {Record} Chainable.\n         */\n        createFields: function (columns) {\n            columns.forEach(function (column) {\n                if (column.editor && !this.hasChild(column.index)) {\n                    this.initField(column);\n                }\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Returns instance of a column found by provided index.\n         *\n         * @param {String} index - Index of a column (e.g. 'title').\n         * @returns {Column}\n         */\n        getColumn: function (index) {\n            return this.columns().getChild(index);\n        },\n\n        /**\n         * Returns records' current data object.\n         *\n         * @returns {Object}\n         */\n        getData: function () {\n            return this.filterData(this.data);\n        },\n\n        /**\n         * Returns saved records' data. Data will be processed\n         * with a 'filterData' and 'normalizeData' methods.\n         *\n         * @returns {Object} Saved records' data.\n         */\n        getSavedData: function () {\n            var editor      = this.editor(),\n                savedData   = editor.getRowData(this.index);\n\n            savedData = this.filterData(savedData);\n\n            return this.normalizeData(savedData);\n        },\n\n        /**\n         * Replaces current records' data with the provided one.\n         *\n         * @param {Object} data - New records data.\n         * @param {Boolean} [partial=false] - Flag that defines whether\n         *      to completely replace current data or to extend it.\n         * @returns {Record} Chainable.\n         */\n        setData: function (data, partial) {\n            var currentData = partial ? this.data : {};\n\n            data = this.normalizeData(data);\n            data = utils.extend({}, currentData, data);\n\n            this.set('data', data);\n\n            return this;\n        },\n\n        /**\n         * Filters provided object extracting from it values\n         * that can be matched with an existing fields.\n         *\n         * @param {Object} data - Object to be processed.\n         * @returns {Object}\n         */\n        filterData: function (data) {\n            var fields = _.pluck(this.elems(), 'index');\n\n            _.each(this.preserveFields, function (enabled, field) {\n                if (enabled && !_.contains(fields, field)) {\n                    fields.push(field);\n                }\n            });\n\n            return _.pick(data, fields);\n        },\n\n        /**\n         * Parses values of a provided object with\n         * a 'normalizeData' method of a corresponding field.\n         *\n         * @param {Object} data - Data to be processed.\n         * @returns {Object}\n         */\n        normalizeData: function (data) {\n            var index;\n\n            this.elems.each(function (elem) {\n                index = elem.index;\n\n                if (data.hasOwnProperty(index)) {\n                    data[index] = elem.normalizeData(data[index]);\n                }\n            });\n\n            return data;\n        },\n\n        /**\n         * Clears values of all fields.\n         *\n         * @returns {Record} Chainable.\n         */\n        clear: function () {\n            this.elems.each('clear');\n\n            return this;\n        },\n\n        /**\n         * Validates all of the available fields.\n         *\n         * @returns {Array} An array with validatation results.\n         */\n        validate: function () {\n            return this.elems.map('validate');\n        },\n\n        /**\n         * Checks if all fields are valid.\n         *\n         * @returns {Boolean}\n         */\n        isValid: function () {\n            return _.every(this.validate(), 'valid');\n        },\n\n        /**\n         * Counts total errors ammount accros all fields.\n         *\n         * @returns {Number}\n         */\n        countErrors: function () {\n            var errorsCount = this.elems.filter('error').length;\n\n            this.errorsCount = errorsCount;\n\n            return errorsCount;\n        },\n\n        /**\n         * Returns difference between current data and its'\n         * initial state, retrieved from the records collection.\n         *\n         * @returns {Object} Object with changes descriptions.\n         */\n        checkChanges: function () {\n            var savedData   = this.getSavedData(),\n                data        = this.getData();\n\n            return utils.compare(savedData, data);\n        },\n\n        /**\n         * Updates 'fields' array filling it with available edtiors\n         * or with column instances if associated field is not present.\n         *\n         * @returns {Record} Chainable.\n         */\n        updateFields: function () {\n            var fields;\n\n            fields = this.columns().elems.map(function (column) {\n                return this.getChild(column.index) || column;\n            }, this);\n\n            this.fields(fields);\n\n            return this;\n        },\n\n        /**\n         * Updates state of a 'hasChanges' property.\n         *\n         * @returns {Record} Chainable.\n         */\n        updateState: function () {\n            var diff = this.checkChanges();\n\n            this.hasChanges = !diff.equal;\n\n            return this;\n        },\n\n        /**\n         * Checks if provided column is an actions column.\n         *\n         * @param {Column} column - Column to be checked.\n         * @returns {Boolean}\n         */\n        isActionsColumn: function (column) {\n            return column.dataType === 'actions';\n        },\n\n        /**\n         * Listener of columns provider child array changes.\n         *\n         * @param {Array} columns - Modified child elements array.\n         */\n        onColumnsUpdate: function (columns) {\n            this.createFields(columns)\n                .updateFields();\n        }\n    });\n});\n","Magento_Ui/js/grid/editing/client.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mageUtils',\n    'uiClass'\n], function ($, _, utils, Class) {\n    'use strict';\n\n    return Class.extend({\n        defaults: {\n            validateBeforeSave: true,\n            requestConfig: {\n                dataType: 'json',\n                type: 'POST'\n            }\n        },\n\n        /**\n         * Initializes client instance.\n         *\n         * @returns {Client} Chainable.\n         */\n        initialize: function () {\n            _.bindAll(this, 'onSuccess', 'onError');\n\n            return this._super();\n        },\n\n        /**\n         * Sends XMLHttpRequest with a provided configuration.\n         *\n         * @param {Object} config - Configuration of request.\n         * @returns {jQueryPromise}\n         */\n        send: function (config) {\n            var deffer  = $.Deferred();\n\n            config = utils.extend({}, this.requestConfig, config);\n\n            $.ajax(config)\n                .done(_.partial(this.onSuccess, deffer))\n                .fail(_.partial(this.onError, deffer));\n\n            return deffer.promise();\n        },\n\n        /**\n         * Proxy save method which might invoke\n         * data valiation prior to its' saving.\n         *\n         * @param {Object} data - Data to be processed.\n         * @returns {jQueryPromise}\n         */\n        save: function (data) {\n            var save = this._save.bind(this, data);\n\n            return this.validateBeforeSave ?\n                this.validate(data).pipe(save) :\n                save();\n        },\n\n        /**\n         * Sends request to validate provided data.\n         *\n         * @param {Object} data - Data to be validated.\n         * @returns {jQueryPromise}\n         */\n        validate: function (data) {\n            return this.send({\n                url: this.validateUrl,\n                data: data\n            });\n        },\n\n        /**\n         * Sends request to save provided data.\n         *\n         * @private\n         * @param {Object} data - Data to be validated.\n         * @returns {jQueryPromise}\n         */\n        _save: function (data) {\n            return this.send({\n                url: this.saveUrl,\n                data: data\n            });\n        },\n\n        /**\n         * Creates error object with a provided message.\n         *\n         * @param {String} msg - Errors' message.\n         * @returns {Object}\n         */\n        createError: function (msg) {\n            return {\n                type: 'error',\n                message: msg\n            };\n        },\n\n        /**\n         * Handles ajax error callback.\n         *\n         * @param {jQueryPromise} promise - Promise to be rejected.\n         * @param {jQueryXHR} xhr - See 'jquery' ajax error callback.\n         * @param {String} status - See 'jquery' ajax error callback.\n         * @param {(String|Object)} err - See 'jquery' ajax error callback.\n         */\n        onError: function (promise, xhr, status, err) {\n            var msg;\n\n            msg = xhr.status !== 200 ?\n                xhr.status + ' (' + xhr.statusText + ')' :\n                err;\n\n            promise.reject(this.createError(msg));\n        },\n\n        /**\n         * Handles ajax success callback.\n         *\n         * @param {jQueryPromise} promise - Promise to be resoloved.\n         * @param {*} data - See 'jquery' ajax success callback.\n         */\n        onSuccess: function (promise, data) {\n            var errors;\n\n            if (data.error) {\n                errors = _.map(data.messages, this.createError, this);\n\n                promise.reject(errors);\n            } else {\n                promise.resolve(data);\n            }\n        }\n    });\n});\n","Magento_Ui/js/grid/editing/bulk.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    './record'\n], function (_, utils, Record) {\n    'use strict';\n\n    /**\n     * Removes empty properties from the provided object.\n     *\n     * @param {Object} data - Object to be processed.\n     * @returns {Object}\n     */\n    function removeEmpty(data) {\n        data = utils.flatten(data);\n        data = _.omit(data, utils.isEmpty);\n\n        return utils.unflatten(data);\n    }\n\n    return Record.extend({\n        defaults: {\n            template: 'ui/grid/editing/bulk',\n            active: false,\n            templates: {\n                fields: {\n                    select: {\n                        caption: ' '\n                    }\n                }\n            },\n            imports: {\n                active: '${ $.editorProvider }:isMultiEditing'\n            },\n            listens: {\n                data: 'updateState',\n                active: 'updateState'\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Bulk} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track({\n                    hasData: false\n                });\n\n            return this;\n        },\n\n        /**\n         * Extends original method to disable possible\n         * 'required-entry' validation rule.\n         *\n         * @returns {Object} Columns' field definition.\n         */\n        buildField: function () {\n            var field = this._super(),\n                rules = field.validation;\n\n            if (rules) {\n                delete rules['required-entry'];\n            }\n\n            return field;\n        },\n\n        /**\n         * Applies current data to all active records.\n         *\n         * @returns {Bulk} Chainable.\n         */\n        apply: function () {\n            if (this.isValid()) {\n                this.applyData()\n                    .clear();\n            }\n\n            return this;\n        },\n\n        /**\n         * Sets available data to all active records.\n         *\n         * @param {Object} [data] -  If not specified, then current fields data will be used.\n         * @returns {Bulk} Chainable.\n         */\n        applyData: function (data) {\n            data = data || this.getData();\n\n            this.editor('setData', data, true);\n\n            return this;\n        },\n\n        /**\n         * Returns data of all non-empty fields.\n         *\n         * @returns {Object} Fields data without empty values.\n         */\n        getData: function () {\n            return removeEmpty(this._super());\n        },\n\n        /**\n         * Updates own 'hasData' property and defines\n         * whether regular rows editing can be resumed.\n         *\n         * @returns {Bulk} Chainable.\n         */\n        updateState: function () {\n            var fields  = _.keys(this.getData()),\n                hasData = !!fields.length;\n\n            this.hasData = hasData;\n\n            if (!this.active()) {\n                fields = [];\n            }\n\n            this.editor('disableFields', fields);\n            this.editor('canSave', !fields.length);\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/grid/editing/editor.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiLayout',\n    'mage/translate',\n    'uiCollection'\n], function (_, utils, layout, $t, Collection) {\n    'use strict';\n\n    return Collection.extend({\n        defaults: {\n            rowButtonsTmpl: 'ui/grid/editing/row-buttons',\n            headerButtonsTmpl: 'ui/grid/editing/header-buttons',\n            successMsg: $t('You have successfully saved your edits.'),\n            errorsCount: 0,\n            isMultiEditing: false,\n            isSingleEditing: false,\n            rowsData: [],\n            fields: {},\n\n            templates: {\n                record: {\n                    parent: '${ $.$data.editor.name }',\n                    name: '${ $.$data.recordId }',\n                    component: 'Magento_Ui/js/grid/editing/record',\n                    columnsProvider: '${ $.$data.editor.columnsProvider }',\n                    editorProvider: '${ $.$data.editor.name }',\n                    preserveFields: {\n                        '${ $.$data.editor.indexField }': true\n                    }\n                }\n            },\n            bulkConfig: {\n                component: 'Magento_Ui/js/grid/editing/bulk',\n                name: '${ $.name }_bulk',\n                editorProvider: '${ $.name }',\n                columnsProvider: '${ $.columnsProvider }'\n            },\n            clientConfig: {\n                component: 'Magento_Ui/js/grid/editing/client',\n                name: '${ $.name }_client'\n            },\n            viewConfig: {\n                component: 'Magento_Ui/js/grid/editing/editor-view',\n                name: '${ $.name }_view',\n                model: '${ $.name }',\n                columnsProvider: '${ $.columnsProvider }'\n            },\n            imports: {\n                rowsData: '${ $.dataProvider }:data.items'\n            },\n            listens: {\n                '${ $.dataProvider }:reloaded': 'cancel',\n                '${ $.selectProvider }:selected': 'onSelectionsChange'\n            },\n            modules: {\n                source: '${ $.dataProvider }',\n                client: '${ $.clientConfig.name }',\n                columns: '${ $.columnsProvider }',\n                bulk: '${ $.bulkConfig.name }',\n                selections: '${ $.selectProvider }'\n            }\n        },\n\n        /**\n         * Initializes editor component.\n         *\n         * @returns {Editor} Chainable.\n         */\n        initialize: function () {\n            _.bindAll(this, 'updateState', 'countErrors', 'onDataSaved', 'onSaveError');\n\n            this._super()\n                .initBulk()\n                .initClient()\n                .initView();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Editor} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'errorsCount',\n                    'isMultiEditing',\n                    'isSingleEditing'\n                ])\n                .observe({\n                    canSave: true,\n                    activeRecords: [],\n                    messages: []\n                });\n\n            return this;\n        },\n\n        /**\n         * Initializes bulk editing component.\n         *\n         * @returns {Editor} Chainable.\n         */\n        initBulk: function () {\n            layout([this.bulkConfig]);\n\n            return this;\n        },\n\n        /**\n         * Initializes editors' view component.\n         *\n         * @returns {Editor} Chainable.\n         */\n        initView: function () {\n            layout([this.viewConfig]);\n\n            return this;\n        },\n\n        /**\n         * Initializes client component.\n         *\n         * @returns {Editor} Chainable.\n         */\n        initClient: function () {\n            layout([this.clientConfig]);\n\n            return this;\n        },\n\n        /**\n         * Creates instance of a new record.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Editor} Chainable.\n         */\n        initRecord: function (id, isIndex) {\n            var record = this.buildRecord(id, isIndex);\n\n            layout([record]);\n\n            return this;\n        },\n\n        /**\n         * Adds listeners on a new recrod.\n         *\n         * @param {Record} record\n         * @returns {Editor} Chainable.\n         */\n        initElement: function (record) {\n            record.on({\n                'active': this.updateState,\n                'errorsCount': this.countErrors\n            });\n\n            this.updateState();\n\n            return this._super();\n        },\n\n        /**\n         * Creates configuration for a new record associated with a row data.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Object} Record configuration.\n         */\n        buildRecord: function (id, isIndex) {\n            var recordId = this.getId(id, isIndex),\n                recordTmpl = this.templates.record,\n                record;\n\n            if (this.getRecord(recordId)) {\n                return this;\n            }\n\n            record = utils.template(recordTmpl, {\n                editor: this,\n                recordId: id\n            });\n\n            record.recordId = id;\n            record.data     = this.getRowData(id);\n\n            return record;\n        },\n\n        /**\n         * Starts editing of a specfied record. If records'\n         * instance doesn't exist, than it will be created.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Editor} Chainable.\n         */\n        edit: function (id, isIndex) {\n            var recordId = this.getId(id, isIndex),\n                record   = this.getRecord(recordId);\n\n            record ?\n                record.active(true) :\n                this.initRecord(recordId);\n\n            return this;\n        },\n\n        /**\n         * Drops list of selections while activating only the specified record.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Editor} Chainable.\n         */\n        startEdit: function (id, isIndex) {\n            var recordId = this.getId(id, isIndex);\n\n            this.selections()\n                .deselectAll()\n                .select(recordId);\n\n            return this.edit(recordId);\n        },\n\n        /**\n         * Hides records and resets theirs data.\n         *\n         * @returns {Editor} Chainable.\n         */\n        cancel: function () {\n            this.reset()\n                .hide()\n                .clearMessages()\n                .bulk('clear');\n\n            return this;\n        },\n\n        /**\n         * Hides records.\n         *\n         * @returns {Editor} Chainable.\n         */\n        hide: function () {\n            this.activeRecords.each('active', false);\n\n            return this;\n        },\n\n        /**\n         * Resets active records.\n         *\n         * @returns {Editor} Chainable.\n         */\n        reset: function () {\n            this.elems.each(function (record) {\n                this.resetRecord(record.recordId);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Validates and saves data of active records.\n         *\n         * @returns {Editor} Chainable.\n         */\n        save: function () {\n            var data;\n\n            if (!this.isValid()) {\n                return this;\n            }\n\n            data = {\n                items: this.getData()\n            };\n\n            this.clearMessages()\n                .columns('showLoader');\n\n            this.client()\n                .save(data)\n                .done(this.onDataSaved)\n                .fail(this.onSaveError);\n\n            return this;\n        },\n\n        /**\n         * Validates all active records.\n         *\n         * @returns {Array} An array of records and theirs validation results.\n         */\n        validate: function () {\n            return this.activeRecords.map(function (record) {\n                return {\n                    target: record,\n                    valid: record.isValid()\n                };\n            });\n        },\n\n        /**\n         * Checks if all active records are valid.\n         *\n         * @returns {Boolean}\n         */\n        isValid: function () {\n            return _.every(this.validate(), 'valid');\n        },\n\n        /**\n         * Returns active records data, indexed by a theirs ids.\n         *\n         * @returns {Object} Collection of records data.\n         */\n        getData: function () {\n            var data = this.activeRecords.map('getData');\n\n            return _.indexBy(data, this.indexField);\n        },\n\n        /**\n         * Sets provided data to all active records.\n         *\n         * @param {Object} data - See 'setData' method of a 'Record'.\n         * @param {Boolean} partial - See 'setData' method of a 'Record'.\n         * @returns {Editor} Chainable.\n         */\n        setData: function (data, partial) {\n            this.activeRecords.each('setData', data, partial);\n\n            return this;\n        },\n\n        /**\n         * Resets specific records' data\n         * to the data present in asscotiated row.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Editor} Chainable.\n         */\n        resetRecord: function (id, isIndex) {\n            var record  = this.getRecord(id, isIndex),\n                data    = this.getRowData(id, isIndex);\n\n            if (record && data) {\n                record.setData(data);\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns instance of a specified record.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Record}\n         */\n        getRecord: function (id, isIndex) {\n            return this.elems.findWhere({\n                recordId: this.getId(id, isIndex)\n            });\n        },\n\n        /**\n         * Creates record name based on a provided id.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {String}\n         */\n        formRecordName: function (id, isIndex) {\n            id = this.getId(id, isIndex);\n\n            return this.name + '.' + id;\n        },\n\n        /**\n         * Disables editing of specfied fields.\n         *\n         * @param {Array} fields - An array of fields indeces to be disabled.\n         * @returns {Editor} Chainable.\n         */\n        disableFields: function (fields) {\n            var columns = this.columns().elems(),\n                data    = utils.copy(this.fields);\n\n            columns.forEach(function (column) {\n                var index = column.index,\n                    field = data[index] = data[index] || {};\n\n                field.disabled = _.contains(fields, index);\n            });\n\n            this.set('fields', data);\n\n            return this;\n        },\n\n        /**\n         * Converts index of a row into the record id.\n         *\n         * @param {(Number|String)} id - Records' identifier or its' index in the rows array.\n         * @param {Boolean} [isIndex=false] - Flag that indicates if first\n         *      parameter is an index or identifier.\n         * @returns {String} Records' id.\n         */\n        getId: function (id, isIndex) {\n            var rowsData = this.rowsData,\n                record;\n\n            if (isIndex === true) {\n                record  = rowsData[id];\n                id      = record ? record[this.indexField] : false;\n            }\n\n            return id;\n        },\n\n        /**\n         * Returns data of a specified row.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See 'getId' method.\n         * @returns {Object}\n         */\n        getRowData: function (id, isIndex) {\n            id = this.getId(id, isIndex);\n\n            return _.find(this.rowsData, function (row) {\n                return row[this.indexField] === id;\n            }, this);\n        },\n\n        /**\n         * Checks if specified record is active.\n         *\n         * @param {(Number|String)} id - See 'getId' method.\n         * @param {Boolean} [isIndex=false] - See'getId' method.\n         * @returns {Boolean}\n         */\n        isActive: function (id, isIndex) {\n            var record = this.getRecord(id, isIndex);\n\n            return _.contains(this.activeRecords(), record);\n        },\n\n        /**\n         * Checks if editor has active records.\n         *\n         * @returns {Boolean}\n         */\n        hasActive: function () {\n            return !!this.activeRecords().length;\n        },\n\n        /**\n         * Counts number of active records.\n         *\n         * @returns {Number}\n         */\n        countActive: function () {\n            return this.activeRecords().length;\n        },\n\n        /**\n         * Counts number of invalid fields accros all active records.\n         *\n         * @returns {Number}\n         */\n        countErrors: function () {\n            var errorsCount = 0;\n\n            this.activeRecords.each(function (record) {\n                errorsCount += record.errorsCount;\n            });\n\n            this.errorsCount = errorsCount;\n\n            return errorsCount;\n        },\n\n        /**\n         * Checks if editor has any errors.\n         *\n         * @returns {Boolean}\n         */\n        hasErrors: function () {\n            return !!this.countErrors();\n        },\n\n        /**\n         * Handles changes of the records 'active' property.\n         *\n         * @returns {Editor} Chainable.\n         */\n        updateState: function () {\n            var active      = this.elems.filter('active'),\n                activeCount = active.length,\n                columns     = this.columns().elems;\n\n            columns.each('disableAction', !!activeCount);\n\n            this.isMultiEditing = activeCount > 1;\n            this.isSingleEditing = activeCount === 1;\n\n            this.activeRecords(active);\n\n            return this;\n        },\n\n        /**\n         * Returns list of selections from a current page.\n         *\n         * @returns {Array}\n         */\n        getSelections: function () {\n            return this.selections().getPageSelections();\n        },\n\n        /**\n         * Starts editing of selected records. If record\n         * is not in the selections list, then it will get hidden.\n         *\n         * @returns {Editor} Chainable.\n         */\n        editSelected: function () {\n            var selections = this.getSelections();\n\n            this.elems.each(function (record) {\n                if (!_.contains(selections, record.recordId)) {\n                    record.active(false);\n                }\n            });\n\n            selections.forEach(function (id) {\n                this.edit(id);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Checks if there is any additional messages.\n         *\n         * @returns {Boolean}\n         */\n        hasMessages: function () {\n            return this.messages().length;\n        },\n\n        /**\n         * Adds new additional message or a set of messages.\n         *\n         * @param {(Object|Array)} message - Messages to be added.\n         * @returns {Editor} Chainable.\n         */\n        addMessage: function (message) {\n            var messages = this.messages();\n\n            Array.isArray(message) ?\n                messages.push.apply(messages, message) :\n                messages.push(message);\n\n            this.messages(messages);\n\n            return this;\n        },\n\n        /**\n         * Removes all additional messages.\n         *\n         * @returns {Editor} Chainable.\n         */\n        clearMessages: function () {\n            this.messages.removeAll();\n\n            return this;\n        },\n\n        /**\n         * Listener of the selections data changes.\n         */\n        onSelectionsChange: function () {\n            if (this.hasActive()) {\n                this.editSelected();\n            }\n        },\n\n        /**\n         * Handles successful save request.\n         */\n        onDataSaved: function () {\n            var msg = {\n                type: 'success',\n                message: this.successMsg\n            };\n\n            this.addMessage(msg)\n                .source('reload');\n        },\n\n        /**\n         * Handles failed save request.\n         *\n         * @param {(Array|Object)} errors - List of errors or a single error object.\n         */\n        onSaveError: function (errors) {\n            this.addMessage(errors)\n                .columns('hideLoader');\n        }\n    });\n});\n","Magento_Ui/js/grid/editing/editor-view.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'ko',\n    'Magento_Ui/js/lib/view/utils/async',\n    'underscore',\n    'uiRegistry',\n    'uiClass'\n], function (ko, $, _, registry, Class) {\n    'use strict';\n\n    return Class.extend({\n        defaults: {\n            rootSelector: '${ $.columnsProvider }:.admin__data-grid-wrap',\n            tableSelector: '${ $.rootSelector } -> table',\n            rowSelector: '${ $.tableSelector } tbody tr.data-row',\n            headerButtonsTmpl:\n                '<!-- ko template: headerButtonsTmpl --><!-- /ko -->',\n            bulkTmpl:\n                '<!-- ko scope: bulk -->' +\n                    '<!-- ko template: getTemplate() --><!-- /ko -->' +\n                '<!-- /ko -->',\n            rowTmpl:\n                '<!-- ko with: _editor -->' +\n                    '<!-- ko if: isActive($row()._rowIndex, true) -->' +\n                        '<!-- ko with: getRecord($row()._rowIndex, true) -->' +\n                            '<!-- ko template: rowTmpl --><!-- /ko -->' +\n                        '<!-- /ko -->' +\n                        '<!-- ko if: isSingleEditing -->' +\n                            '<!-- ko template: rowButtonsTmpl --><!-- /ko -->' +\n                        '<!-- /ko -->' +\n                    '<!-- /ko -->' +\n               '<!-- /ko -->'\n        },\n\n        /**\n         * Initializes view component.\n         *\n         * @returns {View} Chainable.\n         */\n        initialize: function () {\n            _.bindAll(\n                this,\n                'initRoot',\n                'initTable',\n                'initRow',\n                'rowBindings',\n                'tableBindings'\n            );\n\n            this._super();\n\n            this.model = registry.get(this.model);\n\n            $.async(this.rootSelector, this.initRoot);\n            $.async(this.tableSelector, this.initTable);\n            $.async(this.rowSelector, this.initRow);\n\n            return this;\n        },\n\n        /**\n         * Initializes columns root container.\n         *\n         * @param {HTMLElement} node\n         * @returns {View} Chainable.\n         */\n        initRoot: function (node) {\n            $(this.headerButtonsTmpl)\n                .insertBefore(node)\n                .applyBindings(this.model);\n\n            return this;\n        },\n\n        /**\n         * Initializes table element.\n         *\n         * @param {HTMLTableElement} table\n         * @returns {View} Chainable.\n         */\n        initTable: function (table) {\n            $(table).bindings(this.tableBindings);\n\n            this.initBulk(table);\n\n            return this;\n        },\n\n        /**\n         * Initializes bulk editor element\n         * for the provided table.\n         *\n         * @param {HTMLTableElement} table\n         * @returns {View} Chainable.\n         */\n        initBulk: function (table) {\n            var tableBody = $('tbody', table)[0];\n\n            $(this.bulkTmpl)\n                .prependTo(tableBody)\n                .applyBindings(this.model);\n\n            return this;\n        },\n\n        /**\n         * Initializes table row.\n         *\n         * @param {HTMLTableRowElement} row\n         * @returns {View} Chainable.\n         */\n        initRow: function (row) {\n            var $editingRow;\n\n            $(row).extendCtx({\n                    _editor: this.model\n                }).bindings(this.rowBindings);\n\n            $editingRow = $(this.rowTmpl)\n                .insertBefore(row)\n                .applyBindings(row);\n\n            ko.utils.domNodeDisposal.addDisposeCallback(row, this.removeEditingRow.bind(this, $editingRow));\n\n            return this;\n        },\n\n        /**\n         * Returns row bindings.\n         *\n         * @param {Object} ctx - Current context of a row.\n         * @returns {Object}\n         */\n        rowBindings: function (ctx) {\n            var model = this.model;\n\n            return {\n                visible: ko.computed(function () {\n                    var record = ctx.$row(),\n                        index = record && record._rowIndex;\n\n                    return !model.isActive(index, true);\n                })\n            };\n        },\n\n        /**\n         * Returns table bindings.\n         *\n         * @returns {Object}\n         */\n        tableBindings: function () {\n            var model = this.model;\n\n            return {\n                css: {\n                    '_in-edit': ko.computed(function () {\n                        return model.hasActive();\n                    })\n                }\n            };\n        },\n\n        /**\n         * Removes specified array of nodes.\n         *\n         * @param {ArrayLike} row\n         */\n        removeEditingRow: function (row) {\n            _.toArray(row).forEach(ko.removeNode);\n        }\n    });\n});\n","Magento_Ui/js/grid/columns/multiselect.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mage/translate',\n    './column'\n], function (_, $t, Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            headerTmpl: 'ui/grid/columns/multiselect',\n            bodyTmpl: 'ui/grid/cells/multiselect',\n            controlVisibility: false,\n            sortable: false,\n            draggable: false,\n            menuVisible: false,\n            excludeMode: false,\n            allSelected: false,\n            indetermine: false,\n            disabled: [],\n            selected: [],\n            excluded: [],\n            fieldClass: {\n                'data-grid-checkbox-cell': true\n            },\n            actions: [{\n                value: 'selectAll',\n                label: $t('Select All')\n            }, {\n                value: 'deselectAll',\n                label: $t('Deselect All')\n            }, {\n                value: 'selectPage',\n                label: $t('Select All on This Page')\n            }, {\n                value: 'deselectPage',\n                label: $t('Deselect All on This Page')\n            }],\n\n            imports: {\n                totalRecords: '${ $.provider }:data.totalRecords',\n                rows: '${ $.provider }:data.items'\n            },\n\n            listens: {\n                '${ $.provider }:params.filters': 'deselectAll',\n                selected: 'onSelectedChange',\n                rows: 'onRowsChange'\n            },\n\n            modules: {\n                source: '${ $.provider }'\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .observe([\n                    'disabled',\n                    'selected',\n                    'excluded',\n                    'excludeMode',\n                    'totalSelected',\n                    'allSelected',\n                    'indetermine',\n                    'totalRecords',\n                    'rows'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Selects specified record.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Multiselect} Chainable.\n         */\n        select: function (id, isIndex) {\n            this._setSelection(id, isIndex, true);\n\n            return this;\n        },\n\n        /**\n         * Deselects specified record.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Multiselect} Chainable.\n         */\n        deselect: function (id, isIndex) {\n            this._setSelection(id, isIndex, false);\n\n            return this;\n        },\n\n        /**\n         * Toggles selection of a specified record.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Multiselect} Chainable.\n         */\n        toggleSelect: function (id, isIndex) {\n            this._setSelection(id, isIndex, !this.isSelected(id, isIndex));\n\n            return this;\n        },\n\n        /**\n         * Checks if specified record is selected.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @returns {Boolean}\n         */\n        isSelected: function (id, isIndex) {\n            id = this.getId(id, isIndex);\n\n            return this.selected.contains(id);\n        },\n\n        /**\n         * Selects/deselects specified record base on a 'select' parameter value.\n         *\n         * @param {*} id - See definition of 'getId' method.\n         * @param {Boolean} [isIndex=false] - See definition of 'getId' method.\n         * @param {Boolean} select - Whether to select/deselect record.\n         * @returns {Multiselect} Chainable.\n         */\n        _setSelection: function (id, isIndex, select) {\n            var selected = this.selected;\n\n            id = this.getId(id, isIndex);\n\n            if (!select && this.isSelected(id)) {\n                selected.remove(id);\n            } else if (select) {\n                selected.push(id);\n            }\n\n            return this;\n        },\n\n        /**\n         * Selects all records, even those that\n         * are not visible on the page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        selectAll: function () {\n            this.excludeMode(true);\n\n            this.clearExcluded()\n                .selectPage();\n\n            return this;\n        },\n\n        /**\n         * Deselects all records.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        deselectAll: function () {\n            this.excludeMode(false);\n\n            this.clearExcluded();\n            this.selected.removeAll();\n\n            return this;\n        },\n\n        /**\n         * Selects or deselects all records.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        toggleSelectAll: function () {\n            this.allSelected() ?\n                this.deselectAll() :\n                this.selectAll();\n\n            return this;\n        },\n\n        /**\n         * Selects all records on the current page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        selectPage: function () {\n            var selected = _.union(this.selected(), this.getIds());\n\n            selected = _.difference(selected, this.disabled());\n\n            this.selected(selected);\n\n            return this;\n        },\n\n        /**\n         * Deselects all records on the current page.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        deselectPage: function () {\n            var pageIds = this.getIds();\n\n            this.selected.remove(function (value) {\n                return !!~pageIds.indexOf(value);\n            });\n\n            return this;\n        },\n\n        /**\n         * Clears the array of not selected records.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        clearExcluded: function () {\n            this.excluded.removeAll();\n\n            return this;\n        },\n\n        /**\n         * Retrieve all id's from available records.\n         *\n         * @param {Boolean} [exclude] - Whether to exclude not selected ids' from result.\n         * @returns {Array} An array of ids'.\n         */\n        getIds: function (exclude) {\n            var items = this.rows(),\n                ids = _.pluck(items, this.indexField);\n\n            return exclude ?\n                _.difference(ids, this.excluded()) :\n                ids;\n        },\n\n        /**\n         * Returns identifier of a record.\n         *\n         * @param {*} id - Id of a record or its' index in a rows array.\n         * @param {Boolean} [isIndex=false] - Flag that specifies whith what\n         *      kind of identifier we are dealing with.\n         * @returns {*}\n         */\n        getId: function (id, isIndex) {\n            var record = this.rows()[id];\n\n            if (isIndex && record) {\n                id = record[this.indexField];\n            }\n\n            return id;\n        },\n\n        /**\n         * Recalculates list of the excluded records.\n         * Changes value of `excluded`.\n         *\n         * @param {Array} selected - List of the currently selected records.\n         * @returns {Multiselect} Chainable.\n         */\n        updateExcluded: function (selected) {\n            var excluded = this.excluded(),\n                fromPage = _.difference(this.getIds(), selected);\n\n            excluded = _.union(excluded, fromPage);\n            excluded = _.difference(excluded, selected);\n\n            this.excluded(excluded);\n\n            return this;\n        },\n\n        /**\n         * Calculates number of selected records and\n         * updates 'totalSelected' property.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        countSelected: function () {\n            var total = this.totalRecords(),\n                excluded = this.excluded().length,\n                selected = this.selected().length;\n\n            if (this.excludeMode()) {\n                selected = total - excluded;\n            }\n\n            this.totalSelected(selected);\n\n            return this;\n        },\n\n        /**\n         * Returns selected items on a current page.\n         *\n         * @returns {Array}\n         */\n        getPageSelections: function () {\n            var ids = this.getIds();\n\n            return this.selected.filter(function (id) {\n                return _.contains(ids, id);\n            });\n        },\n\n        /**\n         * Returns selections data.\n         *\n         * @returns {Object}\n         */\n        getSelections: function () {\n            return {\n                excluded: this.excluded(),\n                selected: this.selected(),\n                total: this.totalSelected(),\n                excludeMode: this.excludeMode(),\n                params: this.getFiltering()\n            };\n        },\n\n        /**\n         * Extracts filtering data from data provider.\n         *\n         * @returns {Object} Current filters state.\n         */\n        getFiltering: function () {\n            var source = this.source(),\n                keys = ['filters', 'search', 'namespace'];\n\n            if (!source) {\n                return {};\n            }\n\n            return _.pick(source.get('params'), keys);\n        },\n\n        /**\n         * Defines if provided select/deselect actions is relevant.\n         * E.g. there is no need in a 'select page' action if only one\n         * page is available.\n         *\n         * @param {String} actionId - Id of the action to be checked.\n         * @returns {Boolean}\n         */\n        isActionRelevant: function (actionId) {\n            var pageIds         = this.getIds().length,\n                multiplePages   = pageIds < this.totalRecords(),\n                relevant        = true;\n\n            switch (actionId) {\n                case 'selectPage':\n                    relevant = multiplePages && !this.isPageSelected(true);\n                    break;\n\n                case 'deselectPage':\n                    relevant =  multiplePages && this.isPageSelected();\n                    break;\n\n                case 'selectAll':\n                    relevant = !this.allSelected();\n                    break;\n\n                case 'deselectAll':\n                    relevant = this.totalSelected() > 0;\n            }\n\n            return relevant;\n        },\n\n        /**\n         * Checks if current page has selected records.\n         *\n         * @param {Boolean} [all=false] - If set to 'true' checks that every\n         *      record on the page is selected. Otherwise checks that\n         *      page has some selected records.\n         * @returns {Boolean}\n         */\n        isPageSelected: function (all) {\n            var pageIds = this.getIds(),\n                selected = this.selected(),\n                excluded = this.excluded(),\n                iterator = all ? 'every' : 'some';\n\n            if (this.allSelected()) {\n                return true;\n            }\n\n            if (this.excludeMode()) {\n                return pageIds[iterator](function (id) {\n                    return !~excluded.indexOf(id);\n                });\n            }\n\n            return pageIds[iterator](function (id) {\n                return !!~selected.indexOf(id);\n            });\n        },\n\n        /**\n         * Updates values of the 'allSelected'\n         * and 'indetermine' properties.\n         *\n         * @returns {Multiselect} Chainable.\n         */\n        updateState: function () {\n            var selected        = this.selected().length,\n                excluded        = this.excluded().length,\n                totalSelected   = this.totalSelected(),\n                totalRecords    = this.totalRecords(),\n                allSelected     = totalRecords && totalSelected === totalRecords;\n\n            if (this.excludeMode()) {\n                if (excluded === totalRecords) {\n                    this.deselectAll();\n                }\n            } else if (totalRecords && selected === totalRecords) {\n                this.selectAll();\n            }\n\n            this.allSelected(allSelected);\n            this.indetermine(totalSelected && !allSelected);\n\n            return this;\n        },\n\n        /**\n         * Overrides base method, because this component\n         * can't have global field action.\n         *\n         * @returns {Boolean} False.\n         */\n        hasFieldAction: function () {\n            return false;\n        },\n\n        /**\n         * Callback method to handle changes of selected items.\n         *\n         * @param {Array} selected - An array of currently selected items.\n         */\n        onSelectedChange: function (selected) {\n            this.updateExcluded(selected)\n                .countSelected()\n                .updateState();\n        },\n\n        /**\n         * Is invoked when rows has changed. Recalculates selected items\n         * based on \"selectMode\" property.\n         */\n        onRowsChange: function () {\n            var newSelections;\n\n            if (this.excludeMode()) {\n                newSelections = _.union(this.getIds(true), this.selected());\n\n                this.selected(newSelections);\n            }\n        }\n    });\n});\n","Magento_Ui/js/grid/columns/column.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiRegistry',\n    'mageUtils',\n    'uiElement'\n], function (_, registry, utils, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            headerTmpl: 'ui/grid/columns/text',\n            bodyTmpl: 'ui/grid/cells/text',\n            disableAction: false,\n            controlVisibility: true,\n            sortable: true,\n            sorting: false,\n            visible: true,\n            draggable: true,\n            fieldClass: {},\n            ignoreTmpls: {\n                fieldAction: true\n            },\n            statefull: {\n                visible: true,\n                sorting: true\n            },\n            imports: {\n                exportSorting: 'sorting'\n            },\n            listens: {\n                '${ $.provider }:params.sorting.field': 'onSortChange'\n            },\n            modules: {\n                source: '${ $.provider }'\n            }\n        },\n\n        /**\n         * Initializes column component.\n         *\n         * @returns {Column} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initFieldClass();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Column} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'visible',\n                    'sorting',\n                    'disableAction'\n                ])\n                .observe([\n                    'dragging'\n                ]);\n\n            return this;\n        },\n\n        /**\n         * Extends list of field classes.\n         *\n         * @returns {Column} Chainable.\n         */\n        initFieldClass: function () {\n            _.extend(this.fieldClass, {\n                _dragging: this.dragging\n            });\n\n            return this;\n        },\n\n        /**\n         * Applies specified stored state of a column or one of its' properties.\n         *\n         * @param {String} state - Defines what state should be used: saved or default.\n         * @param {String} [property] - Defines what columns' property should be applied.\n         *      If not specified, then all columns stored properties will be used.\n         * @returns {Column} Chainable.\n         */\n        applyState: function (state, property) {\n            var namespace = this.storageConfig.root;\n\n            if (property) {\n                namespace += '.' + property;\n            }\n\n            this.storage('applyStateOf', state, namespace);\n\n            return this;\n        },\n\n        /**\n         * Sets columns' sorting. If column is currently sorted,\n         * than its' direction will be toggled.\n         *\n         * @param {*} [enable=true] - If false, than sorting will\n         *      be removed from a column.\n         * @returns {Column} Chainable.\n         */\n        sort: function (enable) {\n            if (!this.sortable) {\n                return this;\n            }\n\n            enable !== false ?\n                this.toggleSorting() :\n                this.sorting = false;\n\n            return this;\n        },\n\n        /**\n         * Sets descending columns' sorting.\n         *\n         * @returns {Column} Chainable.\n         */\n        sortDescending: function () {\n            if (this.sortable) {\n                this.sorting = 'desc';\n            }\n\n            return this;\n        },\n\n        /**\n         * Sets ascending columns' sorting.\n         *\n         * @returns {Column} Chainable.\n         */\n        sortAscending: function () {\n            if (this.sortable) {\n                this.sorting = 'asc';\n            }\n\n            return this;\n        },\n\n        /**\n         * Toggles sorting direction.\n         *\n         * @returns {Column} Chainable.\n         */\n        toggleSorting: function () {\n            this.sorting === 'asc' ?\n                this.sortDescending() :\n                this.sortAscending();\n\n            return this;\n        },\n\n        /**\n         * Checks if column is sorted.\n         *\n         * @returns {Boolean}\n         */\n        isSorted: function () {\n            return !!this.sorting;\n        },\n\n        /**\n         * Exports sorting data to the dataProvider if\n         * sorting of a column is enabled.\n         */\n        exportSorting: function () {\n            if (!this.sorting) {\n                return;\n            }\n\n            this.source('set', 'params.sorting', {\n                field: this.index,\n                direction: this.sorting\n            });\n        },\n\n        /**\n         * Checks if column has an assigned action that will\n         * be performed when clicking on one of its' fields.\n         *\n         * @returns {Boolean}\n         */\n        hasFieldAction: function () {\n            return !!this.fieldAction;\n        },\n\n        /**\n         * Applies action described in a 'fieldAction' property.\n         *\n         * @param {Number} rowIndex - Index of a row which initiates action.\n         * @returns {Column} Chainable.\n         *\n         * @example Example of fieldAction definition, which is equivalent to\n         *      referencing to external component named 'listing.multiselect'\n         *      and calling its' method 'toggleSelect' with params [rowIndex, true] =>\n         *\n         *      {\n         *          provider: 'listing.multiselect',\n         *          target: 'toggleSelect',\n         *          params: ['${ $.$data.rowIndex }', true]\n         *      }\n         */\n        applyFieldAction: function (rowIndex) {\n            var action = this.fieldAction,\n                callback;\n\n            if (!this.hasFieldAction() || this.disableAction) {\n                return this;\n            }\n\n            action = utils.template(action, {\n                column: this,\n                rowIndex: rowIndex\n            }, true);\n\n            callback = this._getFieldCallback(action);\n\n            if (_.isFunction(callback)) {\n                callback();\n            }\n\n            return this;\n        },\n\n        /**\n         * Returns field action handler if it was specified.\n         *\n         * @param {Object} record - Record object with which action is associated.\n         * @returns {Function|Undefined}\n         */\n        getFieldHandler: function (record) {\n            if (this.hasFieldAction()) {\n                return this.applyFieldAction.bind(this, record._rowIndex);\n            }\n        },\n\n        /**\n         * Creates action callback based on its' data.\n         *\n         * @param {Object} action - Actions' object.\n         * @returns {Function|Boolean} Callback function or false\n         *      value if it was impossible create a callback.\n         */\n        _getFieldCallback: function (action) {\n            var args     = action.params || [],\n                callback = action.target;\n\n            if (action.provider && action.target) {\n                args.unshift(action.target);\n\n                callback = registry.async(action.provider);\n            }\n\n            if (!_.isFunction(callback)) {\n                return false;\n            }\n\n            return function () {\n                callback.apply(callback, args);\n            };\n        },\n\n        /**\n         * Ment to preprocess data associated with a current columns' field.\n         *\n         * @param {Object} record - Data to be preprocessed.\n         * @returns {String}\n         */\n        getLabel: function (record) {\n            return record[this.index];\n        },\n\n        /**\n         * Returns list of classes that should be applied to a field.\n         *\n         * @returns {Object}\n         */\n        getFieldClass: function () {\n            return this.fieldClass;\n        },\n\n        /**\n         * Returns path to the columns' header template.\n         *\n         * @returns {String}\n         */\n        getHeader: function () {\n            return this.headerTmpl;\n        },\n\n        /**\n         * Returns path to the columns' body template.\n         *\n         * @returns {String}\n         */\n        getBody: function () {\n            return this.bodyTmpl;\n        },\n\n        /**\n         * Listener of the providers' sorting state changes.\n         *\n         * @param {Srting} field - Field by which current sorting is performed.\n         */\n        onSortChange: function (field) {\n            if (field !== this.index) {\n                this.sort(false);\n            }\n        }\n    });\n});\n","Magento_Ui/js/grid/columns/date.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'mageUtils',\n    'moment',\n    './column'\n], function (utils, moment, Column) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            dateFormat: 'MMM D, YYYY h:mm:ss A'\n        },\n\n        /**\n         * Overrides base method to normalize date format.\n         *\n         * @returns {DateColumn} Chainable.\n         */\n        initConfig: function () {\n            this._super();\n\n            this.dateFormat = utils.normalizeDate(this.dateFormat);\n\n            return this;\n        },\n\n        /**\n         * Formats incoming date based on the 'dateFormat' property.\n         *\n         * @returns {String} Formatted date.\n         */\n        getLabel: function () {\n            var date = moment(this._super());\n\n            date = date.isValid() ?\n                date.format(this.dateFormat) :\n                '';\n\n            return date;\n        }\n    });\n});\n","Magento_Ui/js/grid/columns/onoff.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mage/translate',\n    './multiselect',\n    'uiRegistry'\n], function (_, $t, Column, registry) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            headerTmpl: 'ui/grid/columns/onoff',\n            bodyTmpl: 'ui/grid/cells/onoff',\n            fieldClass: {\n                'admin__scope-old': true,\n                'data-grid-onoff-cell': true,\n                'data-grid-checkbox-cell': false\n            },\n            imports: {\n                selectedData: '${ $.provider }:data.selectedData'\n            },\n            listens: {\n                '${ $.provider }:reloaded': 'setDefaultSelections'\n            }\n        },\n\n        /**\n         * @param {Number} id\n         * @returns {*}\n         */\n        getLabel: function (id) {\n            return this.selected.indexOf(id) !== -1 ? $t('On') : $t('Off');\n        },\n\n        /**\n         * Sets the ids for preselected elements\n         * @returns void\n         */\n        setDefaultSelections: function () {\n            var positionCacheValid = registry.get('position_cache_valid'),\n                selectedFromCache = registry.get('selected_cache'),\n                key,\n                i;\n\n            if (positionCacheValid && this.selected().length === 0) {\n                // Check selected data\n                selectedFromCache = JSON.parse(selectedFromCache);\n\n                for (i = 0; i < selectedFromCache.length; i++) {\n                    this.selected.push(selectedFromCache[i]);\n                }\n\n                registry.set('position_cache_valid', true);\n                registry.set('selected_cache', JSON.stringify(this.selected()));\n\n                return;\n            }\n\n            if (positionCacheValid && this.selected().length > 0) {\n                registry.set('position_cache_valid', true);\n                registry.set('selected_cache', JSON.stringify(this.selected()));\n\n                return;\n            }\n\n            if (this.selectedData.length === 0) {\n                registry.set('position_cache_valid', true);\n                registry.set('selected_cache', JSON.stringify([]));\n\n                return;\n            }\n\n            // Check selected data\n            for (key in this.selectedData) {\n                if (this.selectedData.hasOwnProperty(key) && this.selected().indexOf(key) === -1) {\n                    this.selected.push(key);\n                }\n            }\n            // Uncheck unselected data\n            for (i = 0; i < this.selected().length; i++) {\n                key = this.selected()[i];\n                this.selectedData.hasOwnProperty(key) || this.selected.splice(this.selected().indexOf(key), 1);\n                this.selectedData.hasOwnProperty(key) || i--;\n            }\n            registry.set('position_cache_valid', true);\n            registry.set('selected_cache', JSON.stringify(this.selected()));\n        },\n\n        /**\n         * Show/hide action in the massaction menu\n         * @param {Number} actionId\n         * @returns {Boolean}\n         */\n        isActionRelevant: function (actionId) {\n            var relevant = true;\n\n            switch (actionId) {\n                case 'selectPage':\n                    relevant = !this.isPageSelected(true);\n                    break;\n\n                case 'deselectPage':\n                    relevant =  this.isPageSelected();\n                    break;\n            }\n\n            return relevant;\n        },\n\n        /**\n         * Updates values of the 'allSelected'\n         * and 'indetermine' properties.\n         *\n         * @returns {Object} Chainable.\n         */\n        updateState: function () {\n            var positionCacheValid = registry.get('position_cache_valid'),\n                totalRecords    = this.totalRecords(),\n                selected        = this.selected().length,\n                excluded        = this.excluded().length,\n                totalSelected   = this.totalSelected(),\n                allSelected;\n\n            if (positionCacheValid && this.selected().length > 0) {\n                registry.set('position_cache_valid', true);\n                registry.set('selected_cache', JSON.stringify(this.selected()));\n            }\n\n            // When filters are enabled then totalRecords is unknown\n            if (this.getFiltering()) {\n                if (this.getFiltering().search !== '') {\n                    totalRecords = -1;\n                }\n            }\n\n            allSelected = totalRecords && totalSelected === totalRecords;\n\n            if (this.excludeMode()) {\n                if (excluded === totalRecords) {\n                    this.deselectAll();\n                }\n            } else if (totalRecords && selected === totalRecords) {\n                this.selectAll();\n            }\n\n            this.allSelected(allSelected);\n            this.indetermine(totalSelected && !allSelected);\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/grid/columns/actions.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiRegistry',\n    './column',\n    'Magento_Ui/js/modal/confirm'\n], function (_, utils, registry, Column, confirm) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/actions',\n            sortable: false,\n            draggable: false,\n            actions: [],\n            rows: [],\n            rowsProvider: '${ $.parentName }',\n            fieldClass: {\n                'data-grid-actions-cell': true\n            },\n            templates: {\n                actions: {}\n            },\n            imports: {\n                rows: '${ $.rowsProvider }:rows'\n            },\n            listens: {\n                rows: 'updateActions'\n            }\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {ActionsColumn} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track('actions');\n\n            return this;\n        },\n\n        /**\n         * Returns specific action of a specified row\n         * or all action objects associated with it.\n         *\n         * @param {Number} rowIndex - Index of a row.\n         * @param {String} [actionIndex] - Action identifier.\n         * @returns {Array|Object}\n         */\n        getAction: function (rowIndex, actionIndex) {\n            var rowActions = this.actions[rowIndex];\n\n            return rowActions && actionIndex ?\n                rowActions[actionIndex] :\n                rowActions;\n        },\n\n        /**\n         * Returns visible actions for a specified row.\n         *\n         * @param {Number} rowIndex - Index of a row.\n         * @returns {Array} Visible actions.\n         */\n        getVisibleActions: function (rowIndex) {\n            var rowActions = this.getAction(rowIndex);\n\n            return _.filter(rowActions, this.isActionVisible, this);\n        },\n\n        /**\n         * Adds new action. If action with a specfied identifier\n         * already exists, than the original will be overrided.\n         *\n         * @param {String} index - Actions' identifier.\n         * @param {Object} action - Actions' data.\n         * @returns {ActionsColumn} Chainable.\n         */\n        addAction: function (index, action) {\n            var actionTmpls = this.templates.actions;\n\n            actionTmpls[index] = action;\n\n            this.updateActions();\n\n            return this;\n        },\n\n        /**\n         * Recreates actions for each row.\n         *\n         * @returns {ActionsColumn} Chainable.\n         */\n        updateActions: function () {\n            this.actions = this.rows.map(this._formatActions, this);\n\n            return this;\n        },\n\n        /**\n         * Processes actions, setting additional information to them and\n         * evaluating ther properties as a string templates.\n         *\n         * @private\n         * @param {Object} row - Row object.\n         * @param {Number} rowIndex - Index of a row.\n         * @returns {Array}\n         */\n        _formatActions: function (row, rowIndex) {\n            var rowActions      = row[this.index] || {},\n                recordId        = row[this.indexField],\n                customActions   = this.templates.actions;\n\n            /**\n             * Actions iterator.\n             */\n            function iterate(action, index) {\n                action = utils.extend({\n                    index: index,\n                    rowIndex: rowIndex,\n                    recordId: recordId\n                }, action);\n\n                return utils.template(action, row, true);\n            }\n\n            rowActions      = _.mapObject(rowActions, iterate);\n            customActions   = _.map(customActions, iterate);\n\n            customActions.forEach(function (action) {\n                rowActions[action.index] = action;\n            });\n\n            return rowActions;\n        },\n\n        /**\n         * Applies specified action.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @param {Number} rowIndex - Index of a row.\n         * @returns {ActionsColumn} Chainable.\n         */\n        applyAction: function (actionIndex, rowIndex) {\n            var action = this.getAction(rowIndex, actionIndex),\n                callback = this._getCallback(action);\n\n            action.confirm ?\n                this._confirm(action, callback) :\n                callback();\n\n            return this;\n        },\n\n        /**\n         * Creates handler for the provided action if it's required.\n         *\n         * @param {Object} action - Action object.\n         * @returns {Function|Undefined}\n         */\n        getActionHandler: function (action) {\n            var index = action.index,\n                rowIndex = action.rowIndex;\n\n            if (this.isHandlerRequired(index, rowIndex)) {\n                return this.applyAction.bind(this, index, rowIndex);\n            }\n        },\n\n        /**\n         * Checks if specified action requires a handler function.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @param {Number} rowIndex - Index of a row.\n         * @returns {Boolean}\n         */\n        isHandlerRequired: function (actionIndex, rowIndex) {\n            var action = this.getAction(rowIndex, actionIndex);\n\n            return _.isObject(action.callback) || action.confirm || !action.href;\n        },\n\n        /**\n         * Creates action callback based on its' data. If action doesn't spicify\n         * a callback function than the default one will be used.\n         *\n         * @private\n         * @param {Object} action - Actions' object.\n         * @returns {Function} Callback function.\n         */\n        _getCallback: function (action) {\n            var args = [action.index, action.recordId, action],\n                callback = action.callback;\n\n            if (utils.isObject(callback)) {\n                args.unshift(callback.target);\n\n                callback = registry.async(callback.provider);\n            } else if (!_.isFunction(callback)) {\n                callback = this.defaultCallback.bind(this);\n            }\n\n            return function () {\n                callback.apply(callback, args);\n            };\n        },\n\n        /**\n         * Default action callback. Redirects to\n         * the specified in actions' data url.\n         *\n         * @param {String} actionIndex - Actions' identifier.\n         * @param {(Number|String)} recordId - Id of the record accociated\n         *      with a specfied action.\n         * @param {Object} action - Actions' data.\n         */\n        defaultCallback: function (actionIndex, recordId, action) {\n            window.location.href = action.href;\n        },\n\n        /**\n         * Shows actions' confirmation window.\n         *\n         * @param {Object} action - Actions' data.\n         * @param {Function} callback - Callback that will be\n         *      invoked if action is confirmed.\n         */\n        _confirm: function (action, callback) {\n            var confirmData = action.confirm;\n\n            confirm({\n                title: confirmData.title,\n                content: confirmData.message,\n                actions: {\n                    confirm: callback\n                }\n            });\n        },\n\n        /**\n         * Checks if row has only one visible action.\n         *\n         * @param {Number} rowIndex - Row index.\n         * @returns {Boolean}\n         */\n        isSingle: function (rowIndex) {\n            return this.getVisibleActions(rowIndex).length === 1;\n        },\n\n        /**\n         * Checks if row has more than one visible action.\n         *\n         * @param {Number} rowIndex - Row index.\n         * @returns {Boolean}\n         */\n        isMultiple: function (rowIndex) {\n            return this.getVisibleActions(rowIndex).length > 1;\n        },\n\n        /**\n         * Checks if action should be displayed.\n         *\n         * @param {Object} action - Action object.\n         * @returns {Boolean}\n         */\n        isActionVisible: function (action) {\n            return action.hidden !== true;\n        },\n\n        /**\n         * Overrides base method, because this component\n         * can't have global field action.\n         *\n         * @returns {Boolean} False.\n         */\n        hasFieldAction: function () {\n            return false;\n        }\n    });\n});\n","Magento_Ui/js/grid/columns/select.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    './column'\n], function (_, Column) {\n    'use strict';\n\n    return Column.extend({\n\n        /*eslint-disable eqeqeq*/\n        /**\n         * Retrieves label associated with a provided value.\n         *\n         * @returns {String}\n         */\n        getLabel: function () {\n            var options = this.options || [],\n                values = this._super(),\n                label = [];\n\n            if (!Array.isArray(values)) {\n                values = [values];\n            }\n\n            values = values.map(function (value) {\n                return value + '';\n            });\n\n            options.forEach(function (item) {\n                if (_.contains(values, item.value + '')) {\n                    label.push(item.label);\n                }\n            });\n\n            return label.join(', ');\n        }\n\n        /*eslint-enable eqeqeq*/\n    });\n});\n","Magento_Ui/js/grid/columns/thumbnail.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    './column',\n    'jquery',\n    'mage/template',\n    'text!Magento_Ui/templates/grid/cells/thumbnail/preview.html',\n    'underscore',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate'\n], function (Column, $, mageTemplate, thumbnailPreviewTemplate, _) {\n    'use strict';\n\n    return Column.extend({\n        defaults: {\n            bodyTmpl: 'ui/grid/cells/thumbnail',\n            fieldClass: {\n                'data-grid-thumbnail-cell': true\n            }\n        },\n        getSrc: function (row) {\n            return row[this.index + '_src']\n        },\n        getOrigSrc: function (row) {\n            return row[this.index + '_orig_src'];\n        },\n        getLink: function (row) {\n            return row[this.index + '_link'];\n        },\n        getAlt: function (row) {\n            return _.escape(row[this.index + '_alt']);\n        },\n        isPreviewAvailable: function() {\n            return this.has_preview || false;\n        },\n        preview: function (row) {\n            var modalHtml = mageTemplate(\n                thumbnailPreviewTemplate,\n                {\n                    src: this.getOrigSrc(row), alt: this.getAlt(row), link: this.getLink(row),\n                    linkText: $.mage.__('Go to Details Page')\n                }\n            );\n            var previewPopup = $('<div/>').html(modalHtml);\n            previewPopup.modal({\n                title: this.getAlt(row),\n                innerScroll: true,\n                modalClass: '_image-box',\n                buttons: []}).trigger('openModal');\n        },\n        getFieldHandler: function (row) {\n            if (this.isPreviewAvailable()) {\n                return this.preview.bind(this, row);\n            }\n        }\n    });\n});\n","Magento_Ui/js/grid/sticky/sticky.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'Magento_Ui/js/lib/view/utils/async',\n    'underscore',\n    'uiComponent',\n    'Magento_Ui/js/lib/view/utils/raf'\n], function ($, _, Component, raf) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            listingSelector: '${ $.listingProvider }::not([data-role = \"sticky-el-root\"])',\n            toolbarSelector: '${ $.toolbarProvider }::not([data-role = \"sticky-el-root\"])',\n            bulkRowSelector: '[data-role = \"data-grid-bulk-row\"]',\n            bulkRowHeaderSelector: '.data-grid-info-panel:visible',\n            tableSelector: 'table',\n            columnSelector: 'thead tr th',\n            rowSelector: 'tbody tr',\n            toolbarCollapsiblesSelector: '[data-role=\"toolbar-menu-item\"]',\n            toolbarCollapsiblesActiveClass: '_active',\n            template: 'ui/grid/sticky/sticky',\n            stickyContainerSelector: '.sticky-header',\n            stickyElementSelector: '[data-role = \"sticky-el-root\"]',\n            leftDataGridCapSelector: '.data-grid-cap-left',\n            rightDataGridCapSelector: '.data-grid-cap-right',\n            visible: false,\n            enableToolbar: true,\n            enableHeader: true,\n            modules: {\n                toolbar: '${ $.toolbarProvider }',\n                listing: '${ $.listingProvider }'\n            },\n            otherStickyElsSize: 77,\n            containerNode: null,\n            listingNode: null,\n            toolbarNode: null,\n            stickyListingNode: null,\n            stickyToolbarNode: null,\n            storedOriginalToolbarElements: [],\n            cache: {},\n            flags: {},\n            dirtyFlag: 'dirty'\n        },\n\n        /**\n         * Initializes Sticky component.\n         *\n         * @returns {Object} Chainable.\n         */\n        initialize: function () {\n            this._super();\n            _.bindAll(this,\n                'adjustStickyElems',\n                'initListingNode',\n                'initToolbarNode',\n                'initContainerNode',\n                'initColumns',\n                'initStickyListingNode',\n                'initStickyToolbarNode',\n                'initLeftDataGridCap',\n                'initRightDataGridCap'\n            );\n\n            $.async(this.listingSelector,\n                this.initListingNode);\n            $.async(this.toolbarSelector,\n                this.initToolbarNode);\n\n            $.async(this.stickyContainerSelector,\n                this,\n                this.initContainerNode);\n\n            return this;\n        },\n\n        /**\n         * Init observables\n         *\n         * @returns {Object} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track('visible');\n\n            return this;\n        },\n\n        /**\n         * Init original listing node\n         *\n         * @param {HTMLElement} node\n         */\n        initListingNode: function (node) {\n            if ($(node).is(this.stickyElementSelector)) {\n                return;\n            }\n            this.listingNode = $(node);\n            $.async(this.columnSelector, node, this.initColumns);\n        },\n\n        /**\n         * Init original toolbar node\n         *\n         * @param {HTMLElement} node\n         */\n        initToolbarNode: function (node) {\n            if ($(node).is(this.stickyElementSelector)) {\n                return;\n            }\n            this.toolbarNode = $(node);\n        },\n\n        /**\n         * Init sticky listing node\n         *\n         * @param {HTMLElement} node\n         */\n        initStickyListingNode: function (node) {\n            this.stickyListingNode = $(node);\n            this.checkPos();\n            this.initListeners();\n        },\n\n        /**\n         * Init sticky toolbar node\n         *\n         * @param {HTMLElement} node\n         */\n        initStickyToolbarNode: function (node) {\n            this.stickyToolbarNode = $(node);\n        },\n\n        /**\n         * Init sticky header container node\n         *\n         * @param {HTMLElement} node\n         */\n        initContainerNode: function (node) {\n            this.containerNode = $(node);\n\n            $.async(this.leftDataGridCapSelector,\n                node,\n                this.initLeftDataGridCap);\n            $.async(this.rightDataGridCapSelector,\n                node,\n                this.initRightDataGridCap);\n\n            $.async(this.stickyElementSelector,\n                this.listing(),\n                this.initStickyListingNode);\n            $.async(this.stickyElementSelector,\n                this.toolbar(),\n                this.initStickyToolbarNode);\n        },\n\n        /**\n         * Init columns (each time when amount of columns is changed)\n         *\n         */\n        initColumns: function () {\n            this.columns = this.listingNode.find(this.columnSelector);\n        },\n\n        /**\n         * Init left DataGridCap\n         *\n         * @param {HTMLElement} node\n         */\n        initLeftDataGridCap: function (node) {\n            this.leftDataGridCap = $(node);\n        },\n\n        /**\n         * Init right DataGridCap\n         *\n         * @param {HTMLElement} node\n         */\n        initRightDataGridCap: function (node) {\n            this.rightDataGridCap = $(node);\n        },\n\n        /**\n         * Init listeners\n         *\n         * @returns {Object} Chainable.\n         */\n        initListeners: function () {\n            this.adjustStickyElems();\n            this.initOnResize()\n                .initOnScroll()\n                .initOnListingScroll();\n\n            return this;\n        },\n\n        /**\n         * Start to listen to window scroll event\n         *\n         * @returns {Object} Chainable.\n         */\n        initOnScroll: function () {\n            this.lastHorizontalScrollPos = $(window).scrollLeft();\n            document.addEventListener('scroll', function () {\n                this.flags.scrolled = true;\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Start to listen to original listing scroll event\n         *\n         * @returns {Object} Chainable.\n         */\n        initOnListingScroll: function () {\n            $(this.listingNode).scroll(function (e) {\n                this.flags.listingScrolled = true;\n                this.flags.listingScrolledValue = $(e.target).scrollLeft();\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Start to listen to window resize event\n         *\n         * @returns {Object} Chainable.\n         */\n        initOnResize: function () {\n            $(window).resize(function () {\n                this.flags.resized = true;\n            }.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Adjust sticky header elements according to flags of the events that have happened in the endless RAF loop\n         */\n        adjustStickyElems: function () {\n            if (this.flags.resized ||\n                this.flags.scrolled) {\n                this.checkPos();\n            }\n\n            if (this.visible) {\n                this.checkTableElemsWidth();\n\n                if (this.flags.originalWidthChanged) {\n                    this.adjustContainerElemsWidth();\n                }\n\n                if (this.flags.resized) {\n                    this.onResize();\n                }\n\n                if (this.flags.scrolled) {\n                    this.onWindowScroll();\n                }\n\n                if (this.flags.listingScrolled) {\n                    this.onListingScroll(this.flags.listingScrolledValue);\n                }\n            }\n            _.each(this.flags, function (val, key) {\n                if (val === this.dirtyFlag) {\n                    this.flags[key] = false;\n                } else if (val) {\n                    this.flags[key] = this.dirtyFlag;\n                }\n            }, this);\n\n            raf(this.adjustStickyElems);\n        },\n\n        /**\n         * Handles window scroll\n         */\n        onWindowScroll: function () {\n            var scrolled = $(window).scrollLeft(),\n                horizontal = this.lastHorizontalScrollPos !== scrolled;\n\n            if (horizontal) {\n                this.adjustOffset()\n                    .adjustDataGridCapPositions();\n                this.lastHorizontalScrollPos = scrolled;\n            } else {\n                this.checkPos();\n            }\n        },\n\n        /**\n         * Handles original listing scroll\n         *\n         * @param {Number} scrolled\n         */\n        onListingScroll: function (scrolled) {\n            this.adjustOffset(scrolled);\n        },\n\n        /**\n         * Handles window resize\n         */\n        onResize: function () {\n            this.checkPos();\n            this.adjustContainerElemsWidth()\n                .adjustDataGridCapPositions();\n        },\n\n        /**\n         * Check if original table or columns change it dimensions and sets appropriate flag\n         */\n        checkTableElemsWidth: function () {\n            var newWidth = this.getTableWidth();\n\n            if (this.cache.tableWidth !== newWidth) {\n                this.cache.tableWidth = newWidth;\n                this.flags.originalWidthChanged = true;\n            } else if (this.cache.colChecksum !== this.getColsChecksum()) {\n                this.cache.colChecksum = this.getColsChecksum();\n                this.flags.originalWidthChanged = true;\n            }\n        },\n\n        /**\n         * Get the checksum of original columns width\n         *\n         * @returns {Number}.\n         */\n        getColsChecksum: function () {\n            return _.reduce(this.columns,\n            function (pv, cv) {\n                return ($(pv).width() || pv) + '' + $(cv).width();\n            });\n        },\n\n        /**\n         * Get the width of the sticky table wrapper\n         *\n         * @returns {Number}.\n         */\n        getListingWidth: function () {\n            return this.listingNode.width();\n        },\n\n        /**\n         * Get the width of the original table\n         *\n         * @returns {Number}.\n         */\n        getTableWidth: function () {\n            return this.listingNode.find(this.tableSelector).width();\n        },\n\n        /**\n         * Get the top elem: header or toolbar\n         *\n         * @returns {HTMLElement}.\n         */\n        getTopElement: function () {\n            return this.toolbarNode || this.listingNode;\n        },\n\n        /**\n         * Get the height of the other sticky elem (Page header)\n         *\n         * @returns {Number}.\n         */\n        getOtherStickyElementsSize: function () {\n            return this.otherStickyElsSize;\n        },\n\n        /**\n         * Get original bulk row height, if is visible\n         *\n         * @returns {Number}.\n         */\n        getBulkRowHeight: function () {\n            return this.listingNode.find(this.bulkRowSelector).filter(':visible').height();\n        },\n\n        /**\n         * Get top Y coord of the sticky header\n         *\n         * @returns {Number}.\n         */\n        getListingTopYCoord: function () {\n            var bulkRowHeight = this.getBulkRowHeight();\n\n            return this.listingNode.find('tbody').offset().top -\n                this.containerNode.height() -\n                $(window).scrollTop() +\n                bulkRowHeight;\n        },\n\n        /**\n         * Check if sticky header must be visible\n         *\n         * @returns {Boolean}.\n         */\n        getMustBeSticky: function () {\n            var stickyTopCondition = this.getListingTopYCoord() - this.getOtherStickyElementsSize(),\n                stickyBottomCondition = this.listingNode.offset().top +\n                    this.listingNode.height() -\n                    $(window).scrollTop() +\n                    this.getBulkRowHeight() -\n                    this.getOtherStickyElementsSize();\n\n            return stickyTopCondition < 0 && stickyBottomCondition > 0;\n        },\n\n        /**\n         * Resize sticky header and cols\n         *\n         * @returns {Object} Chainable.\n         */\n        adjustContainerElemsWidth: function () {\n            this.resizeContainer()\n                .resizeCols()\n                .resizeBulk();\n\n            return this;\n        },\n\n        /**\n         * Resize sticky header\n         *\n         * @returns {Object} Chainable.\n         */\n        resizeContainer: function () {\n            var listingWidth = this.getListingWidth();\n\n            this.stickyListingNode.innerWidth(listingWidth);\n            this.stickyListingNode.find(this.tableSelector).innerWidth(this.getTableWidth());\n\n            if (this.stickyToolbarNode) {\n                this.stickyToolbarNode.innerWidth(listingWidth);\n            }\n\n            return this;\n        },\n\n        /**\n         * Resize sticky cols\n         *\n         * @returns {Object} Chainable.\n         */\n        resizeCols: function () {\n            var cols = this.listingNode.find(this.columnSelector);\n\n            this.stickyListingNode.find(this.columnSelector).each(function (ind) {\n                var originalColWidth =  $(cols[ind]).width();\n\n                $(this).width(originalColWidth);\n            });\n\n            return this;\n        },\n\n        /**\n         * Resize bulk row header\n         *\n         * @returns {Object} Chainable.\n         */\n        resizeBulk: function () {\n            var bulk = this.containerNode.find(this.bulkRowHeaderSelector)[0];\n\n            if (bulk) {\n                $(bulk).innerWidth(this.getListingWidth());\n            }\n\n            return this;\n        },\n\n        /**\n         * Reset viewport to the top of listing\n         */\n        resetToTop: function () {\n            var posOfTopEl = this.getTopElement().offset().top - this.getOtherStickyElementsSize() || 0;\n\n            $(window).scrollTop(posOfTopEl);\n        },\n\n        /**\n         * Adjust sticky header offset\n         *\n         * @param {Number} val\n         * @returns {Object} Chainable.\n         */\n        adjustOffset: function (val) {\n            val = val || this.listingNode.scrollLeft();\n            this.stickyListingNode.offset({\n                left: this.listingNode.offset().left - val\n            });\n\n            return this;\n        },\n\n        /**\n         * Adjust both DataGridCap position\n         *\n         * @returns {Object} Chainable.\n         */\n        adjustDataGridCapPositions: function () {\n            this.adjustLeftDataGridCapPos()\n                .adjustRightDataGridCapPos();\n\n            return this;\n        },\n\n        /**\n         * Adjust left DataGridCap position\n         *\n         * @returns {Object} Chainable.\n         */\n        adjustLeftDataGridCapPos: function () {\n            this.leftDataGridCap.offset({\n                left: this.listingNode.offset().left - this.leftDataGridCap.width()\n            });\n\n            return this;\n        },\n\n        /**\n         * Adjust right DataGridCap position\n         *\n         * @returns {Object} Chainable.\n         */\n        adjustRightDataGridCapPos: function () {\n            this.rightDataGridCap.offset({\n                left: this.listingNode.offset().left + this.listingNode.width()\n            });\n\n            return this;\n        },\n\n        /**\n         * Hides the oiginal toolbar opened dropdowns/collapsibles etc\n         */\n        collapseOriginalElements: function () {\n            this.toolbarNode\n                .find(this.toolbarCollapsiblesSelector)\n                .css('visibility', 'hidden');\n            $(this.listingNode.find(this.bulkRowSelector)[0]).css('visibility', 'hidden');\n        },\n\n        /**\n         * Restores the oiginal toolbar opened dropdowns/collapsibles etc\n         */\n        restoreOriginalElements: function () {\n            this.toolbarNode\n                .find(this.toolbarCollapsiblesSelector)\n                .css('visibility', 'visible');\n            $(this.listingNode.find(this.bulkRowSelector)[0]).css('visibility', 'visible');\n        },\n\n        /**\n         * Toggle the visibility of sticky header\n         *\n         * @returns {Object} Chainable.\n         */\n        toggleContainerVisibility: function () {\n            this.visible = !this.visible;\n\n            return this;\n        },\n\n        /**\n         * Checks position of the listing to know if need to show/hide sticky header\n         *\n         * @returns {Boolean} whether the visibility of the sticky header was toggled.\n         */\n        checkPos: function () {\n            var isSticky = this.visible,\n                mustBeSticky = this.getMustBeSticky(),\n                needChange = isSticky !== mustBeSticky;\n\n            if (needChange) {\n                if (mustBeSticky) {\n                    this.collapseOriginalElements();\n                    this.toggleContainerVisibility();\n                    this.adjustContainerElemsWidth()\n                        .adjustOffset()\n                        .adjustDataGridCapPositions();\n\n                } else {\n                    this.toggleContainerVisibility();\n                    this.restoreOriginalElements();\n                }\n            }\n\n            return needChange;\n        }\n    });\n});\n","Magento_Ui/js/grid/filters/range.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiLayout',\n    'mageUtils',\n    'Magento_Ui/js/form/components/group'\n], function (_, layout, utils, Group) {\n    'use strict';\n\n    return Group.extend({\n        defaults: {\n            template: 'ui/grid/filters/elements/group',\n            isRange: true,\n            templates: {\n                base: {\n                    parent: '${ $.$data.group.name }',\n                    provider: '${ $.$data.group.provider }'\n                },\n                date: {\n                    component: 'Magento_Ui/js/form/element/date',\n                    template: 'ui/grid/filters/elements/date',\n                    dateFormat: 'MM/dd/YYYY'\n                },\n                text: {\n                    component: 'Magento_Ui/js/form/element/abstract',\n                    template: 'ui/grid/filters/elements/input'\n                },\n                ranges: {\n                    from: {\n                        label: 'from',\n                        dataScope: 'from'\n                    },\n                    to: {\n                        label: 'to',\n                        dataScope: 'to'\n                    }\n                }\n            }\n        },\n\n        /**\n         * Initializes range component.\n         *\n         * @returns {Range} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initChildren();\n\n            return this;\n        },\n\n        /**\n         * Creates instances of child components.\n         *\n         * @returns {Range} Chainable.\n         */\n        initChildren: function () {\n            var children = this.buildChildren();\n\n            layout(children);\n\n            return this;\n        },\n\n        /**\n         * Creates configuration for the child components.\n         *\n         * @returns {Object}\n         */\n        buildChildren: function () {\n            var templates   = this.templates,\n                typeTmpl    = templates[this.rangeType],\n                tmpl        = utils.extend({}, templates.base, typeTmpl),\n                children    = {};\n\n            _.each(templates.ranges, function (range, key) {\n                children[key] = utils.extend({}, tmpl, range);\n            });\n\n            return utils.template(children, {\n                group: this\n            }, true, true);\n        },\n\n        /**\n         * Clears childrens data.\n         *\n         * @returns {Range} Chainable.\n         */\n        clear: function () {\n            this.elems.each('clear');\n\n            return this;\n        },\n\n        /**\n         * Checks if some children has data.\n         *\n         * @returns {Boolean}\n         */\n        hasData: function () {\n            return this.elems.some('hasData');\n        }\n    });\n});\n","Magento_Ui/js/grid/filters/filters.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiLayout',\n    'uiCollection'\n], function (_, utils, layout, Collection) {\n    'use strict';\n\n    /**\n     * Extracts and formats preview of an element.\n     *\n     * @param {Object} elem - Element whose preview should be extracted.\n     * @returns {Object} Formatted data.\n     */\n    function extractPreview(elem) {\n        return {\n            label: elem.label,\n            preview: elem.getPreview(),\n            elem: elem\n        };\n    }\n\n    /**\n     * Removes empty properties from the provided object.\n     *\n     * @param {Object} data - Object to be processed.\n     * @returns {Object}\n     */\n    function removeEmpty(data) {\n        return utils.mapRecursive(data, utils.removeEmptyValues.bind(utils));\n    }\n\n    return Collection.extend({\n        defaults: {\n            template: 'ui/grid/filters/filters',\n            stickyTmpl: 'ui/grid/sticky/filters',\n            _processed: [],\n            applied: {\n                placeholder: true\n            },\n            filters: {\n                placeholder: true\n            },\n            templates: {\n                filters: {\n                    base: {\n                        parent: '${ $.$data.filters.name }',\n                        name: '${ $.$data.column.index }',\n                        provider: '${ $.$data.filters.name }',\n                        dataScope: '${ $.$data.column.index }',\n                        label: '${ $.$data.column.label }',\n                        imports: {\n                            visible: '${ $.$data.column.name }:visible'\n                        }\n                    },\n                    text: {\n                        component: 'Magento_Ui/js/form/element/abstract',\n                        template: 'ui/grid/filters/elements/input'\n                    },\n                    select: {\n                        component: 'Magento_Ui/js/form/element/select',\n                        template: 'ui/grid/filters/elements/select',\n                        options: '${ JSON.stringify($.$data.column.options) }',\n                        caption: ' '\n                    },\n                    dateRange: {\n                        component: 'Magento_Ui/js/grid/filters/range',\n                        rangeType: 'date'\n                    },\n                    textRange: {\n                        component: 'Magento_Ui/js/grid/filters/range',\n                        rangeType: 'text'\n                    }\n                }\n            },\n            chipsConfig: {\n                name: '${ $.name }_chips',\n                provider: '${ $.chipsConfig.name }',\n                component: 'Magento_Ui/js/grid/filters/chips'\n            },\n            listens: {\n                active: 'updatePreviews',\n                applied: 'cancel updateActive'\n            },\n            statefull: {\n                applied: true\n            },\n            exports: {\n                applied: '${ $.provider }:params.filters'\n            },\n            imports: {\n                'onColumnsUpdate': '${ $.columnsProvider }:elems'\n            },\n            modules: {\n                columns: '${ $.columnsProvider }',\n                chips: '${ $.chipsConfig.provider }'\n            }\n        },\n\n        /**\n         * Initializes filters component.\n         *\n         * @returns {Filters} Chainable.\n         */\n        initialize: function () {\n            _.bindAll(this, 'updateActive');\n\n            this._super()\n                .initChips()\n                .cancel();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Filters} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track({\n                    active: [],\n                    previews: []\n                });\n\n            return this;\n        },\n\n        /**\n         * Initializes chips component.\n         *\n         * @returns {Filters} Chainable.\n         */\n        initChips: function () {\n            layout([this.chipsConfig]);\n\n            this.chips('insertChild', this.name);\n\n            return this;\n        },\n\n        /**\n         * Called when another element was added to filters collection.\n         *\n         * @returns {Filters} Chainable.\n         */\n        initElement: function (elem) {\n            this._super();\n\n            elem.on('elems', this.updateActive);\n\n            this.updateActive();\n\n            return this;\n        },\n\n        /**\n         * Clears filters data.\n         *\n         * @param {Object} [filter] - If provided, then only specified\n         *      filter will be cleared. Otherwise, clears all data.\n         * @returns {Filters} Chainable.\n         */\n        clear: function (filter) {\n            filter ?\n                filter.clear() :\n                _.invoke(this.active, 'clear');\n\n            this.apply();\n\n            return this;\n        },\n\n        /**\n         * Sets filters data to the applied state.\n         *\n         * @returns {Filters} Chainable.\n         */\n        apply: function () {\n            this.set('applied', removeEmpty(this.filters));\n\n            return this;\n        },\n\n        /**\n         * Resets filters to the last applied state.\n         *\n         * @returns {Filters} Chainable.\n         */\n        cancel: function () {\n            this.set('filters', utils.copy(this.applied));\n\n            return this;\n        },\n\n        /**\n         * Sets provided data to filter components (without applying it).\n         *\n         * @param {Object} data - Filters data.\n         * @param {Boolean} [partial=false] - Flag that defines whether\n         *      to completely replace current filters data or to extend it.\n         * @returns {Filters} Chainable.\n         */\n        setData: function (data, partial) {\n            var filters = partial ? this.filters : {};\n\n            data = utils.extend({}, filters, data);\n\n            this.set('filters', data);\n\n            return this;\n        },\n\n        /**\n         * Creates instance of a filter associated with the provided column.\n         *\n         * @param {Column} column - Column component for which to create a filter.\n         * @returns {Filters} Chainable.\n         */\n        addFilter: function (column) {\n            var index       = column.index,\n                processed   = this._processed,\n                filter;\n\n            if (!column.filter || _.contains(processed, index)) {\n                return this;\n            }\n\n            filter = this.buildFilter(column);\n\n            processed.push(index);\n\n            layout([filter]);\n\n            return this;\n        },\n\n        /**\n         * Creates filter component configuration associated with the provided column.\n         *\n         * @param {Column} column - Column component whith a basic filter declaration.\n         * @returns {Object} Filters' configuration.\n         */\n        buildFilter: function (column) {\n            var filters = this.templates.filters,\n                filter  = column.filter,\n                type    = filters[filter.filterType];\n\n            if (_.isObject(filter) && type) {\n                filter = utils.extend({}, type, filter);\n            } else if (_.isString(filter)) {\n                filter = filters[filter];\n            }\n\n            filter = utils.extend({}, filters.base, filter);\n\n            return utils.template(filter, {\n                filters: this,\n                column: column\n            }, true, true);\n        },\n\n        /**\n         * Returns an array of range filters.\n         *\n         * @returns {Array}\n         */\n        getRanges: function () {\n            return this.elems.filter(function (filter) {\n                return filter.isRange;\n            });\n        },\n\n        /**\n         * Returns an array of non-range filters.\n         *\n         * @returns {Array}\n         */\n        getPlain: function () {\n            return this.elems.filter(function (filter) {\n                return !filter.isRange;\n            });\n        },\n\n        /**\n         * Tells wether specified filter should be visible.\n         *\n         * @param {Object} filter\n         * @returns {Boolean}\n         */\n        isFilterVisible: function (filter) {\n            return filter.visible() || this.isFilterActive(filter);\n        },\n\n        /**\n         * Checks if specified filter is active.\n         *\n         * @param {Object} filter\n         * @returns {Boolean}\n         */\n        isFilterActive: function (filter) {\n            return _.contains(this.active, filter);\n        },\n\n        /**\n         * Checks if collection has visible filters.\n         *\n         * @returns {Boolean}\n         */\n        hasVisible: function () {\n            return this.elems.some(this.isFilterVisible, this);\n        },\n\n        /**\n         * Finds filters whith a not empty data\n         * and sets them to the 'active' filters array.\n         *\n         * @returns {Filters} Chainable.\n         */\n        updateActive: function () {\n            var applied = _.keys(this.applied);\n\n            this.active = this.elems.filter(function (elem) {\n                return _.contains(applied, elem.index);\n            });\n\n            return this;\n        },\n\n        /**\n         * Returns number of applied filters.\n         *\n         * @returns {Number}\n         */\n        countActive: function () {\n            return this.active.length;\n        },\n\n        /**\n         * Extract previews of a specified filters.\n         *\n         * @param {Array} filters - Filters to be processed.\n         * @returns {Filters} Chainable.\n         */\n        updatePreviews: function (filters) {\n            var previews = filters.map(extractPreview);\n\n            this.previews = _.compact(previews);\n\n            return this;\n        },\n\n        /**\n         * Listener of the columns provider children array changes.\n         *\n         * @param {Array} columns - Current columns list.\n         */\n        onColumnsUpdate: function (columns) {\n            columns.forEach(this.addFilter, this);\n        }\n    });\n});\n","Magento_Ui/js/grid/filters/chips.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiCollection'\n], function (_, Collection) {\n    'use strict';\n\n    return Collection.extend({\n        defaults: {\n            template: 'ui/grid/filters/chips',\n            stickyTmpl: 'ui/grid/sticky/chips'\n        },\n\n        /**\n         * Defines if some of components' children has available previews.\n         *\n         * @returns {Boolean}\n         */\n        hasPreviews: function () {\n            return this.elems().some(function (elem) {\n                return !!elem.previews.length;\n            });\n        },\n\n        /**\n         * Calls clear method on all of its' children.\n         *\n         * @returns {Chips} Chainable.\n         */\n        clear: function () {\n            _.invoke(this.elems(), 'clear');\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/grid/controls/columns.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    'mage/translate',\n    'uiCollection'\n], function (_, utils, $t, Collection) {\n    'use strict';\n\n    return Collection.extend({\n        defaults: {\n            template: 'ui/grid/controls/columns',\n            minVisible: 1,\n            maxVisible: 30,\n            viewportSize: 18,\n            imports: {\n                addColumns: '${ $.columnsData.provider }:elems'\n            },\n            templates: {\n                headerMsg: $t('${ $.visible } out of ${ $.total } visible')\n            }\n        },\n\n        /**\n         * Resets columns visibility to theirs default state.\n         *\n         * @returns {Columns} Chainable.\n         */\n        reset: function () {\n            this.elems.each('applyState', 'default', 'visible');\n\n            return this;\n        },\n\n        /**\n         * Applies last saved state of columns visibility.\n         *\n         * @returns {Columns} Chainable.\n         */\n        cancel: function () {\n            this.elems.each('applyState', '', 'visible');\n\n            return this;\n        },\n\n        /**\n         * Adds columns whose visibility can be controlled to the component.\n         *\n         * @param {Array} columns - Elements array that will be added to component.\n         * @returns {Columns} Chainable.\n         */\n        addColumns: function (columns) {\n            columns = _.where(columns, {\n                controlVisibility: true\n            });\n\n            this.insertChild(columns);\n\n            return this;\n        },\n\n        /**\n         * Defines whether child elements array length\n         * is greater than the 'viewportSize' property.\n         *\n         * @returns {Boolean}\n         */\n        hasOverflow: function () {\n            return this.elems().length > this.viewportSize;\n        },\n\n        /**\n         * Helper, checks\n         *  - if less than one item choosen\n         *  - if more then viewportMaxSize choosen\n         *\n         * @param {Object} elem\n         * @returns {Boolean}\n         */\n        isDisabled: function (elem) {\n            var visible = this.countVisible();\n\n            return elem.visible ?\n                    visible === this.minVisible :\n                    visible === this.maxVisible;\n        },\n\n        /**\n         * Counts number of visible columns.\n         *\n         * @returns {Number}\n         */\n        countVisible: function () {\n            return this.elems.filter('visible').length;\n        },\n\n        /**\n         * Compile header message from headerMessage setting.\n         *\n         * @returns {String}\n         */\n        getHeaderMessage: function () {\n            return utils.template(this.templates.headerMsg, {\n                visible: this.countVisible(),\n                total: this.elems().length\n            });\n        }\n    });\n});\n","Magento_Ui/js/grid/controls/bookmarks/storage.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'mageUtils',\n    'Magento_Ui/js/lib/core/storage',\n    'uiClass'\n], function ($, utils, storage, Class) {\n    'use strict';\n\n    function removeNs(ns, path) {\n        return path.replace(ns + '.', '');\n    }\n\n    return Class.extend({\n        defaults: {\n            ajaxSettings: {\n                method: 'POST',\n                data: {\n                    namespace: '${ $.namespace }'\n                }\n            }\n        },\n\n        /**\n         * Delegates call to the localStorage adapter.\n         */\n        get: function () {\n            return {};\n        },\n\n        /**\n         * Sends request to store specified data.\n         *\n         * @param {String} path - Path by which data should be stored.\n         * @param {*} value - Value to be sent.\n         */\n        set: function (path, value) {\n            var property = removeNs(this.namespace, path),\n                data = {},\n                config;\n\n            utils.nested(data, property, value);\n\n            config = utils.extend({\n                url: this.saveUrl,\n                data: {\n                    data: JSON.stringify(data)\n                }\n            }, this.ajaxSettings);\n\n            $.ajax(config);\n        },\n\n        /**\n         * Sends request to remove specified data.\n         *\n         * @param {String} path - Path to the property to be removed.\n         */\n        remove: function (path) {\n            var property = removeNs(this.namespace, path),\n                config;\n\n            config = utils.extend({\n                url: this.deleteUrl,\n                data: {\n                    data: property\n                }\n            }, this.ajaxSettings);\n\n            $.ajax(config);\n        }\n    });\n});\n","Magento_Ui/js/grid/controls/bookmarks/bookmarks.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    'mage/translate',\n    'uiLayout',\n    'uiCollection'\n], function (_, utils, $t, layout, Collection) {\n    'use strict';\n\n    /**\n     * Removes 'current' namespace from a 'path' string.\n     *\n     * @param {String} path\n     * @returns {String} Path without namespace.\n     */\n    function removeStateNs(path) {\n        path = typeof path == 'string' ? path.split('.') : [];\n\n        if (path[0] === 'current') {\n            path.shift();\n        }\n\n        return path.join('.');\n    }\n\n    return Collection.extend({\n        defaults: {\n            template: 'ui/grid/controls/bookmarks/bookmarks',\n            viewTmpl: 'ui/grid/controls/bookmarks/view',\n            newViewLabel: $t('New View'),\n            defaultIndex: 'default',\n            activeIndex: 'default',\n            hasChanges: false,\n            storageConfig: {\n                provider: '${ $.storageConfig.name }',\n                name: '${ $.name }_storage',\n                component: 'Magento_Ui/js/grid/controls/bookmarks/storage'\n            },\n            views: {\n                default: {\n                    label: $t('Default View'),\n                    index: 'default',\n                    editable: false\n                }\n            },\n            listens: {\n                activeIndex: 'onActiveIndexChange',\n                activeView: 'checkState',\n                current: 'onStateChange'\n            }\n        },\n\n        /**\n         * Initializes bookmarks component.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        initialize: function () {\n            utils.limit(this, 'checkState', 5);\n            utils.limit(this, 'saveState', 2000);\n            utils.limit(this, '_defaultPolyfill', 3000);\n\n            this._super()\n                .restore()\n                .initStorage()\n                .initViews();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track([\n                    'hasChanges',\n                    'editing',\n                    'activeView',\n                    'customVisible',\n                    'customLabel'\n                ])\n                .track({\n                    viewsArray: []\n                });\n\n            return this;\n        },\n\n        /**\n         * Creates custom storage instance.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        initStorage: function () {\n            layout([this.storageConfig]);\n\n            return this;\n        },\n\n        /**\n         * Creates instances of a previously saved views.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        initViews: function () {\n            _.each(this.views, function (config) {\n                this.addView(config);\n            }, this);\n\n            this.activeView = this.getActiveView();\n\n            return this;\n        },\n\n        /**\n         * Creates complete configuration for a view.\n         *\n         * @param {Object} [config] - Additional configuration object.\n         * @returns {Object}\n         */\n        buildView: function (config) {\n            var view = {\n                label: this.newViewLabel,\n                index: '_' + Date.now(),\n                editable: true\n            };\n\n            utils.extend(view, config || {});\n\n            view.data   = view.data || utils.copy(this.current);\n            view.value  = view.label;\n\n            this.observe.call(view, true, 'label value');\n\n            return view;\n        },\n\n        /**\n         * Creates instance of a view with a provided configuration.\n         *\n         * @param {Object} [config] - View configuration.\n         * @param {Boolean} [saveView=false] - Whether to save created view automatically or not.\n         * @param {Boolean} [applyView=false] - Whether to apply created view automatically or not.\n         * @returns {View} Created view.\n         */\n        addView: function (config, saveView, applyView) {\n            var view    = this.buildView(config),\n                index   = view.index;\n\n            this.views[index] = view;\n\n            if (saveView) {\n                this.saveView(index);\n            }\n\n            if (applyView) {\n                this.applyView(index);\n            }\n\n            this.updateArray();\n\n            return view;\n        },\n\n        /**\n         * Removes specified view.\n         *\n         * @param {String} index - Index of a view to be removed.\n         * @returns {Bookmarks} Chainable.\n         */\n        removeView: function (index) {\n            var viewPath = this.getViewPath(index);\n\n            if (this.isViewActive(index)) {\n                this.applyView(this.defaultIndex);\n            }\n\n            this.endEdit(index)\n                .remove(viewPath)\n                .removeStored(viewPath)\n                .updateArray();\n\n            return this;\n        },\n\n        /**\n         * Saves data of a specified view.\n         *\n         * @param {String} index - Index of a view to be saved.\n         * @returns {Bookmarks} Chainable.\n         */\n        saveView: function (index) {\n            var viewPath = this.getViewPath(index);\n\n            this.updateViewLabel(index)\n                .endEdit(index)\n                .store(viewPath)\n                .checkState();\n\n            return this;\n        },\n\n        /**\n         * Sets specified view as active\n         * and applies its' state.\n         *\n         * @param {String} index - Index of a view to be applied.\n         * @returns {Bookmarks} Chainable.\n         */\n        applyView: function (index) {\n            this.applyStateOf(index)\n                .set('activeIndex', index);\n\n            return this;\n        },\n\n        /**\n         * Updates data of a specified view if it's\n         * currently active and saves its' data.\n         *\n         * @param {String} index - Index of a view.\n         * @returns {Bookmarks} Chainable.\n         */\n        updateAndSave: function (index) {\n            if (this.isViewActive(index)) {\n                this.updateActiveView(index);\n            }\n\n            this.saveView(index);\n\n            return this;\n        },\n\n        /**\n         * Returns instance of a specified view.\n         *\n         * @param {String} index - Index of a view to be retrieved.\n         * @returns {View}\n         */\n        getView: function (index) {\n            return this.views[index];\n        },\n\n        /**\n         * Returns instance of an active view.\n         *\n         * @returns {View}\n         */\n        getActiveView: function () {\n            return this.views[this.activeIndex];\n        },\n\n        /**\n         * Checks if specified view is active.\n         *\n         * @param {String} index - Index of a view to be checked.\n         * @returns {Boolean}\n         */\n        isViewActive: function (index) {\n            return this.activeView === this.getView(index);\n        },\n\n        /**\n         * Sets current state as a data of an active view.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        updateActiveView: function () {\n            this.setViewData(this.activeIndex, this.current);\n\n            return this;\n        },\n\n        /**\n         * Replaces label a view with a provided one.\n         * If new label is not specified, then views'\n         * 'value' property will be taken.\n         *\n         * @param {String} index - Index of a view.\n         * @param {String} [label=view.value] - New labels' value.\n         * @returns {Bookmarks} Chainable.\n         */\n        updateViewLabel: function (index, label) {\n            var view    = this.getView(index),\n                current = view.label;\n\n            label = (label || view.value).trim() || current;\n            label = this.uniqueLabel(label, current);\n\n            view.label = view.value = label;\n\n            return this;\n        },\n\n        /**\n         * Retrieves data of a specified view.\n         *\n         * @param {String} index - Index of a view whose data should be retrieved.\n         * @param {String} [property] - If not specified then whole views' data will be retrieved.\n         * @returns {Object} Views' data.\n         */\n        getViewData: function (index, property) {\n            var view = this.getView(index),\n                data = view.data;\n\n            if (property) {\n                data = utils.nested(data, property);\n            }\n\n            return utils.copy(data);\n        },\n\n        /**\n         * Sets data to the specified view.\n         *\n         * @param {String} index - Index of a view whose data will be replaced.\n         * @param {Object} data - New view data.\n         * @returns {Bookmarks} Chainable.\n         */\n        setViewData: function (index, data) {\n            var path = this.getViewPath(index) + '.data';\n\n            this.set(path, utils.copy(data));\n\n            return this;\n        },\n\n        /**\n         * Starts editing of a specified view.\n         *\n         * @param {String} index - Index of a view.\n         * @returns {Bookmarks} Chainable.\n         */\n        editView: function (index) {\n            this.editing = index;\n\n            return this;\n        },\n\n        /**\n         * Ends editing of specified view\n         * and restores its' label.\n         *\n         * @param {String} index - Index of a view.\n         * @returns {Bookmarks} Chainable.\n         */\n        endEdit: function (index) {\n            var view;\n\n            if (!this.isEditing(index)) {\n                return this;\n            }\n\n            index   = index || this.editing;\n            view    = this.getView(index);\n\n            view.value = view.label;\n\n            this.editing = false;\n\n            return this;\n        },\n\n        /**\n         * Checks if specified view is in editing state.\n         *\n         * @param {String} index - Index of a view to be checked.\n         * @returns {Bollean}\n         */\n        isEditing: function (index) {\n            return this.editing === index;\n        },\n\n        /**\n         * Generates label unique among present views, based\n         * on the incoming label pattern.\n         *\n         * @param {String} [label=this.newViewLabel] - Label pattern.\n         * @param {String} [exclude]\n         * @returns {String}\n         */\n        uniqueLabel: function (label, exclude) {\n            var labels      = _.pluck(this.views, 'label'),\n                hasParenth  = _.last(label) === ')',\n                index       = 2,\n                result,\n                suffix;\n\n            labels = _.without(labels, exclude);\n            result = label = label || this.newViewLabel;\n\n            for (index = 2; _.contains(labels, result); index++) {\n                suffix = '(' + index + ')';\n\n                if (!hasParenth) {\n                    suffix = ' ' + suffix;\n                }\n\n                result = label + suffix;\n            }\n\n            return result;\n        },\n\n        /**\n         * Applies state of a specified view, without\n         * making it active.\n         *\n         * @param {String} [state=this.activeIndex]\n         * @param {String} [property]\n         * @returns {Bookmarks} Chainable.\n         */\n        applyStateOf: function (state, property) {\n            var index    = state || this.activeIndex,\n                dataPath = removeStateNs(property),\n                viewData = this.getViewData(index, dataPath);\n\n            dataPath = dataPath ?\n                'current.' + dataPath :\n                'current';\n\n            this.set(dataPath, viewData);\n\n            return this;\n        },\n\n        /**\n         * Saves current state.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        saveState: function () {\n            this.store('current');\n\n            return this;\n        },\n\n        /**\n         * Applies state of an active view.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        resetState: function () {\n            this.applyStateOf(this.activeIndex);\n\n            return this;\n        },\n\n        /**\n         * Checks if current state is different\n         * from the state of an active view.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        checkState: function () {\n            var viewData = this.getViewData(this.activeIndex),\n                diff     = utils.compare(viewData, this.current);\n\n            this.hasChanges = !diff.equal;\n\n            return this;\n        },\n\n        /**\n         * Returns path to the view instance,\n         * based on a provided index.\n         *\n         * @param {String} index - Index of a view.\n         * @returns {String}\n         */\n        getViewPath: function (index) {\n            return 'views.' + index;\n        },\n\n        /**\n         * Updates the array of views.\n         *\n         * @returns {Bookmarks} Chainable\n         */\n        updateArray: function () {\n            this.viewsArray = _.values(this.views);\n\n            return this;\n        },\n\n        /**\n         * Shows custom view field and creates unique label for it.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        showCustom: function () {\n            this.customLabel    = this.uniqueLabel();\n            this.customVisible  = true;\n\n            return this;\n        },\n\n        /**\n         * Hides custom view field.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        hideCustom: function () {\n            this.customVisible = false;\n\n            return this;\n        },\n\n        /**\n         * Checks if custom view field is visible.\n         *\n         * @returns {Boolean}\n         */\n        isCustomVisible: function () {\n            return this.customVisible;\n        },\n\n        /**\n         * Creates new view instance with a label specified\n         * in a custom view field.\n         *\n         * @returns {Bookmarks} Chainable.\n         */\n        applyCustom: function () {\n            var label = this.customLabel.trim();\n\n            this.hideCustom()\n                .addView({\n                    label: this.uniqueLabel(label)\n                }, true, true);\n\n            return this;\n        },\n\n        /**\n         * Defines default data if it wasn't gathered previously.\n         * Assumes that if theres is no views available,\n         * then current data object is the default configuration.\n         *\n         * @private\n         * @returns {Bookmarks} Chainbale.\n         */\n        _defaultPolyfill: function () {\n            var data = this.getViewData(this.defaultIndex);\n\n            if (!_.size(data)) {\n                this.setViewData(this.defaultIndex, this.current)\n                    .saveView(this.defaultIndex);\n            }\n\n            this.defaultDefined = true;\n\n            return this;\n        },\n\n        /**\n         * Listener of the activeIndex property.\n         */\n        onActiveIndexChange: function () {\n            this.activeView = this.getActiveView();\n\n            this.store('activeIndex');\n        },\n\n        /**\n         * Listener of the activeIndex property.\n         */\n        onStateChange: function () {\n            this.checkState();\n            this.saveState();\n\n            if (!this.defaultDefined) {\n                this._defaultPolyfill();\n            }\n        }\n    });\n});\n","Magento_Ui/js/grid/search/search.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiLayout',\n    'mage/translate',\n    'mageUtils',\n    'uiElement'\n], function (_, layout, $t, utils, Element) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            template: 'ui/grid/search/search',\n            placeholder: $t('Search by keyword'),\n            label: $t('Keyword'),\n            value: '',\n            statefull: {\n                value: true\n            },\n            imports: {\n                inputValue: 'value',\n                updatePreview: 'value'\n            },\n            exports: {\n                value: '${ $.provider }:params.search'\n            },\n            modules: {\n                chips: '${ $.chipsProvider }'\n            }\n        },\n\n        /**\n         * Initializes search component.\n         *\n         * @returns {Search} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initChips();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties.\n         *\n         * @returns {Search} Chainable.\n         */\n        initObservable: function () {\n            this._super()\n                .track('inputValue value')\n                .track({\n                    previews: []\n                });\n\n            return this;\n        },\n\n        /**\n         * Initializes chips component.\n         *\n         * @returns {Search} Chainbale.\n         */\n        initChips: function () {\n            this.chips('insertChild', this, 0);\n\n            return this;\n        },\n\n        /**\n         * Clears search.\n         *\n         * @returns {Search} Chainable.\n         */\n        clear: function () {\n            this.value = '';\n\n            return this;\n        },\n\n        /**\n         * Resets input value to the last applied state.\n         *\n         * @returns {Search} Chainable.\n         */\n        cancel: function () {\n            this.inputValue = this.value;\n\n            return this;\n        },\n\n        /**\n         * Applies search query.\n         *\n         * @param {String} [value=inputValue] - If not specfied, then\n         *      value of the input field will be used.\n         * @returns {Search} Chainable.\n         */\n        apply: function (value) {\n            value = value || this.inputValue;\n\n            this.value = this.inputValue = value;\n\n            return this;\n        },\n\n        /**\n         * Updates preview data.\n         *\n         * @returns {Search} Chainable.\n         */\n        updatePreview: function () {\n            var preview = [];\n\n            if (this.value) {\n                preview.push({\n                    elem: this,\n                    label: this.label,\n                    preview: this.value\n                });\n            }\n\n            this.previews = preview;\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/modal/alert.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'jquery/ui',\n    'Magento_Ui/js/modal/confirm',\n    'mage/translate'\n], function ($, _) {\n    'use strict';\n\n    $.widget('mage.alert', $.mage.confirm, {\n        options: {\n            modalClass: 'confirm',\n            title: $.mage.__('Attention'),\n            actions: {\n\n                /**\n                 * Callback always - called on all actions.\n                 */\n                always: function () {}\n            },\n            buttons: [{\n                text: $.mage.__('OK'),\n                class: 'action-primary action-accept',\n\n                /**\n                 * Click handler.\n                 */\n                click: function () {\n                    this.closeModal(true);\n                }\n            }]\n        },\n\n        /**\n         * Close modal window.\n         */\n        closeModal: function () {\n            this.options.actions.always();\n            this.element.bind('alertclosed', _.bind(this._remove, this));\n\n            return this._super();\n        }\n    });\n\n    return function (config) {\n        return $('<div></div>').html(config.content).alert(config);\n    };\n});\n","Magento_Ui/js/modal/modalToggle.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'Magento_Ui/js/modal/modal'\n], function($){\n    'use strict';\n\n    return function(config, el) {\n        var widget = $(config.content).modal(config);\n\n        $(el).on(config.toggleEvent, function() {\n            var state = widget.data('mage-modal').options.isOpen;\n\n            if (state) {\n                widget.modal('closeModal');\n            } else {\n                widget.modal('openModal');\n            }\n\n            return false;\n        });\n\n        return widget;\n    };\n});\n","Magento_Ui/js/modal/confirm.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'jquery/ui',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate'\n], function ($, _) {\n    'use strict';\n\n    $.widget('mage.confirm', $.mage.modal, {\n        options: {\n            modalClass: 'confirm',\n            title: '',\n            focus: '.action-accept',\n            actions: {\n\n                /**\n                 * Callback always - called on all actions.\n                 */\n                always: function () {},\n\n                /**\n                 * Callback confirm.\n                 */\n                confirm: function () {},\n\n                /**\n                 * Callback cancel.\n                 */\n                cancel: function () {}\n            },\n            buttons: [{\n                text: $.mage.__('Cancel'),\n                class: 'action-secondary action-dismiss',\n\n                /**\n                 * Click handler.\n                 */\n                click: function (event) {\n                    this.closeModal(event);\n                }\n            }, {\n                text: $.mage.__('OK'),\n                class: 'action-primary action-accept',\n\n                /**\n                 * Click handler.\n                 */\n                click: function (event) {\n                    this.closeModal(event, true);\n                }\n            }]\n        },\n\n        /**\n         * Create widget.\n         */\n        _create: function () {\n            this._super();\n            this.modal.find(this.options.modalCloseBtn).off().on('click', _.bind(this.closeModal, this));\n            this.openModal();\n        },\n\n        /**\n         * Remove modal window.\n         */\n        _remove: function () {\n            this.modal.remove();\n        },\n\n        /**\n         * Open modal window.\n         */\n        openModal: function () {\n            return this._super();\n        },\n\n        /**\n         * Close modal window.\n         */\n        closeModal: function (event, result) {\n            result = result || false;\n\n            if (result) {\n                this.options.actions.confirm(event);\n            } else {\n                this.options.actions.cancel(event);\n            }\n            this.options.actions.always(event);\n            this.element.bind('confirmclosed', _.bind(this._remove, this));\n\n            return this._super();\n        }\n    });\n\n    return function (config) {\n        return $('<div></div>').html(config.content).confirm(config);\n    };\n});\n","Magento_Ui/js/modal/prompt.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'jquery/ui',\n    'Magento_Ui/js/modal/modal',\n    'mage/translate'\n], function ($, _) {\n    'use strict';\n\n    $.widget('mage.prompt', $.mage.modal, {\n        options: {\n            modalClass: 'prompt',\n            promptField: '[data-role=\"promptField\"]',\n            value: '',\n            actions: {\n\n                /**\n                 * Callback always - called on all actions.\n                 */\n                always: function () {},\n\n                /**\n                 * Callback confirm.\n                 */\n                confirm: function () {},\n\n                /**\n                 * Callback cancel.\n                 */\n                cancel: function () {}\n            },\n            buttons: [{\n                text: $.mage.__('Cancel'),\n                class: 'action-secondary action-dismiss',\n\n                /**\n                 * Click handler.\n                 */\n                click: function () {\n                    this.closeModal();\n                }\n            }, {\n                text: $.mage.__('OK'),\n                class: 'action-primary action-accept',\n\n                /**\n                 * Click handler.\n                 */\n                click: function () {\n                    this.closeModal(true);\n                }\n            }]\n        },\n\n        /**\n         * Create widget.\n         */\n        _create: function () {\n            this.options.focus = this.options.promptField;\n            this._super();\n            this.modal.find(this.options.modalContent).append(\n                '<div class=\"prompt-message\">' +\n                    '<input data-role=\"promptField\" id=\"prompt-field\" class=\"admin__control-text\" type=\"text\"/>' +\n                '</div>'\n            );\n            this.modal.find(this.options.modalCloseBtn).off().on('click',  _.bind(this.closeModal, this, false));\n            this.openModal();\n        },\n\n        /**\n         * Compile template and append to wrapper.\n         */\n        _renderModal: function () {\n            this._super();\n            this.element.wrap('<label for=\"prompt-field\"></label>');\n        },\n\n        /**\n         * Remove widget\n         */\n        _remove: function () {\n            this.modal.remove();\n        },\n\n        /**\n         * Open modal window\n         */\n        openModal: function () {\n            this._super();\n            this.modal.find(this.options.promptField).val(this.options.value);\n        },\n\n        /**\n         * Close modal window\n         */\n        closeModal: function (result) {\n            var value;\n\n            if (result) {\n                value = this.modal.find(this.options.promptField).val();\n                this.options.actions.confirm(value);\n            } else {\n                this.options.actions.cancel();\n            }\n            this.options.actions.always();\n            this.element.bind('promptclosed', _.bind(this._remove, this));\n\n            return this._super();\n        }\n    });\n\n    return function (config) {\n        return $('<div></div>').html(config.content).prompt(config);\n    };\n});\n","Magento_Ui/js/modal/modal.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'jquery',\n    'underscore',\n    'mage/template',\n    'text!ui/template/modal/modal-popup.html',\n    'text!ui/template/modal/modal-slide.html',\n    'text!ui/template/modal/modal-custom.html',\n    'Magento_Ui/js/lib/key-codes',\n    'jquery/ui',\n    'mage/translate'\n], function ($, _, template, popupTpl, slideTpl, customTpl, keyCodes) {\n    'use strict';\n\n    /**\n     * Detect browser transition end event.\n     * @return {String|undefined} - transition event.\n     */\n    var transitionEvent =  (function () {\n        var transition,\n            elementStyle = document.createElement('div').style,\n            transitions = {\n                'transition': 'transitionend',\n                'OTransition': 'oTransitionEnd',\n                'MozTransition': 'transitionend',\n                'WebkitTransition': 'webkitTransitionEnd'\n            };\n\n        for (transition in transitions) {\n            if (elementStyle[transition] !== undefined && transitions.hasOwnProperty(transition)) {\n                return transitions[transition];\n            }\n        }\n    })();\n\n    /**\n     * Modal Window Widget\n     */\n    $.widget('mage.modal', {\n        options: {\n            type: 'popup',\n            title: '',\n            modalClass: '',\n            focus: '[data-role=\"closeBtn\"]',\n            autoOpen: false,\n            clickableOverlay: true,\n            popupTpl: popupTpl,\n            slideTpl: slideTpl,\n            customTpl: customTpl,\n            modalVisibleClass: '_show',\n            parentModalClass: '_has-modal',\n            innerScrollClass: '_inner-scroll',\n            responsive: false,\n            innerScroll: false,\n            modalBlock: '[data-role=\"modal\"]',\n            modalCloseBtn: '[data-role=\"closeBtn\"]',\n            modalContent: '[data-role=\"content\"]',\n            modalAction: '[data-role=\"action\"]',\n            focusableScope: '[data-role=\"focusable-scope\"]',\n            focusableStart: '[data-role=\"focusable-start\"]',\n            focusableEnd: '[data-role=\"focusable-end\"]',\n            appendTo: 'body',\n            wrapperClass: 'modals-wrapper',\n            overlayClass: 'modals-overlay',\n            responsiveClass: 'modal-slide',\n            trigger: '',\n            modalLeftMargin: 45,\n            closeText: $.mage.__('Close'),\n            buttons: [{\n                text: $.mage.__('Ok'),\n                class: '',\n                attr: {},\n\n                /**\n                 * Default action on button click\n                 */\n                click: function (event) {\n                    this.closeModal(event);\n                }\n            }]\n        },\n        keyEventHandlers: {\n\n            /**\n             * Tab key press handler,\n             * set focus to elements\n             */\n            tabKey: function () {\n                if (document.activeElement === this.modal[0]) {\n                    this._setFocus('start');\n                }\n            },\n\n            /**\n             * Escape key press handler,\n             * close modal window\n             */\n            escapeKey: function () {\n                if (this.options.isOpen && this.modal.find(document.activeElement).length ||\n                    this.options.isOpen && this.modal[0] === document.activeElement) {\n                    this.closeModal();\n                }\n            }\n        },\n\n        /**\n         * Creates modal widget.\n         */\n        _create: function () {\n            _.bindAll(\n                this,\n                'keyEventSwitcher',\n                '_tabSwitcher',\n                'closeModal'\n            );\n\n            this.options.transitionEvent = transitionEvent;\n            this._createWrapper();\n            this._renderModal();\n            this._createButtons();\n            $(this.options.trigger).on('click', _.bind(this.toggleModal, this));\n            this._on(this.modal.find(this.options.modalCloseBtn), {\n                'click': this.closeModal\n            });\n            this._on(this.element, {\n                'openModal': this.openModal,\n                'closeModal': this.closeModal\n            });\n            this.options.autoOpen ? this.openModal() : false;\n        },\n\n        /**\n         * Returns element from modal node.\n         * @return {Object} - element.\n         */\n        _getElem: function (elem) {\n            return this.modal.find(elem);\n        },\n\n        /**\n         * Gets visible modal count.\n         * * @return {Number} - visible modal count.\n         */\n        _getVisibleCount: function () {\n            var modals = this.modalWrapper.find(this.options.modalBlock);\n\n            return modals.filter('.' + this.options.modalVisibleClass).length;\n        },\n\n        /**\n         * Gets count of visible modal by slide type.\n         * * @return {Number} - visible modal count.\n         */\n        _getVisibleSlideCount: function () {\n            var elems = this.modalWrapper.find('[data-type=\"slide\"]');\n\n            return elems.filter('.' + this.options.modalVisibleClass).length;\n        },\n\n        /**\n         * Listener key events.\n         * Call handler function if it exists\n         */\n        keyEventSwitcher: function (event) {\n            var key = keyCodes[event.keyCode];\n\n            if (this.keyEventHandlers.hasOwnProperty(key)) {\n                this.keyEventHandlers[key].apply(this, arguments);\n            }\n        },\n\n        /**\n         * Toggle modal.\n         * * @return {Element} - current element.\n         */\n        toggleModal: function () {\n            if (this.options.isOpen === true) {\n                this.closeModal();\n            } else {\n                this.openModal();\n            }\n        },\n\n        /**\n         * Open modal.\n         * * @return {Element} - current element.\n         */\n        openModal: function () {\n            this.options.isOpen = true;\n            this.focussedElement = document.activeElement;\n            this._createOverlay();\n            this._setActive();\n            this._setKeyListener();\n            this.modal.one(this.options.transitionEvent, _.bind(this._trigger, this, 'opened'));\n            this.modal.one(this.options.transitionEvent, _.bind(this._setFocus, this, 'end', 'opened'));\n            this.modal.addClass(this.options.modalVisibleClass);\n\n            if (!this.options.transitionEvent) {\n                this._trigger('opened');\n            }\n\n            return this.element;\n        },\n\n        /**\n         * Set focus to element.\n         * @param {String} position - can be \"start\" and \"end\"\n         *      positions.\n         *      If position is \"end\" - sets focus to first\n         *      focusable element in modal window scope.\n         *      If position is \"start\" - sets focus to last\n         *      focusable element in modal window scope\n         *\n         *  @param {String} type - can be \"opened\" or false\n         *      If type is \"opened\" - looks to \"this.options.focus\"\n         *      property and sets focus\n         */\n        _setFocus: function (position, type) {\n            var focusableElements,\n                infelicity;\n\n            if (type === 'opened' && this.options.focus) {\n                this.modal.find($(this.options.focus)).focus();\n            } else if (type === 'opened' && !this.options.focus) {\n                this.modal.find(this.options.focusableScope).focus();\n            } else if (position === 'end') {\n                this.modal.find(this.options.modalCloseBtn).focus();\n            } else if (position === 'start') {\n                infelicity = 2; //Constant for find last focusable element\n                focusableElements = this.modal.find(':focusable');\n                focusableElements.eq(focusableElements.length - infelicity).focus();\n            }\n        },\n\n        /**\n         * Set events listener when modal is opened.\n         */\n        _setKeyListener: function () {\n            this.modal.find(this.options.focusableStart).bind('focusin', this._tabSwitcher);\n            this.modal.find(this.options.focusableEnd).bind('focusin', this._tabSwitcher);\n            this.modal.bind('keydown', this.keyEventSwitcher);\n        },\n\n        /**\n         * Remove events listener when modal is closed.\n         */\n        _removeKeyListener: function () {\n            this.modal.find(this.options.focusableStart).unbind('focusin', this._tabSwitcher);\n            this.modal.find(this.options.focusableEnd).unbind('focusin', this._tabSwitcher);\n            this.modal.unbind('keydown', this.keyEventSwitcher);\n        },\n\n        /**\n         * Switcher for focus event.\n         * @param {Object} e - event\n         */\n        _tabSwitcher: function (e) {\n            var target = $(e.target);\n\n            if (target.is(this.options.focusableStart)) {\n                this._setFocus('start');\n            } else if (target.is(this.options.focusableEnd)) {\n                this._setFocus('end');\n            }\n        },\n\n        /**\n         * Close modal.\n         * * @return {Element} - current element.\n         */\n        closeModal: function () {\n            var that = this;\n\n            this._removeKeyListener();\n            this.options.isOpen = false;\n            this.modal.one(this.options.transitionEvent, function () {\n                that._close();\n            });\n            this.modal.removeClass(this.options.modalVisibleClass);\n\n            if (!this.options.transitionEvent) {\n                that._close();\n            }\n\n            return this.element;\n        },\n\n        /**\n         * Helper for closeModal function.\n         */\n        _close: function () {\n            var trigger = _.bind(this._trigger, this, 'closed', this.modal);\n\n            $(this.focussedElement).focus();\n            this._destroyOverlay();\n            this._unsetActive();\n            _.defer(trigger, this);\n        },\n\n        /**\n         * Set z-index and margin for modal and overlay.\n         */\n        _setActive: function () {\n            var zIndex = this.modal.zIndex();\n\n            this.prevOverlayIndex = this.overlay.zIndex();\n            this.modal.zIndex(zIndex + this._getVisibleCount());\n            this.overlay.zIndex(zIndex + (this._getVisibleCount() - 1));\n\n            if (this._getVisibleSlideCount()) {\n                this.modal.css('marginLeft', this.options.modalLeftMargin * this._getVisibleSlideCount());\n            }\n        },\n\n        /**\n         * Unset styles for modal and set z-index for previous modal.\n         */\n        _unsetActive: function () {\n            this.modal.removeAttr('style');\n\n            if (this.overlay) {\n                this.overlay.zIndex(this.prevOverlayIndex);\n            }\n        },\n\n        /**\n         * Creates wrapper to hold all modals.\n         */\n        _createWrapper: function () {\n            this.modalWrapper = $('.' + this.options.wrapperClass);\n\n            if (!this.modalWrapper.length) {\n                this.modalWrapper = $('<div></div>')\n                    .addClass(this.options.wrapperClass)\n                    .appendTo(this.options.appendTo);\n            }\n        },\n\n        /**\n         * Compile template and append to wrapper.\n         */\n        _renderModal: function () {\n            $(template(\n                this.options[this.options.type + 'Tpl'],\n                {\n                    data: this.options\n                })).appendTo(this.modalWrapper);\n            this.modal = this.modalWrapper.find(this.options.modalBlock).last();\n            this.element.show().appendTo(this._getElem(this.options.modalContent));\n        },\n\n        /**\n         * Creates buttons pane.\n         */\n        _createButtons: function () {\n            var that = this;\n\n            this.buttons = this._getElem(this.options.modalAction);\n            _.each(this.options.buttons, function (btn, key) {\n                var button = that.buttons[key];\n\n                if (btn.attr) {\n                    $(button).attr(btn.attr);\n                }\n                $(button).on('click', _.bind(btn.click, that));\n            });\n        },\n\n        /**\n         * Creates overlay, append it to wrapper, set previous click event on overlay.\n         */\n        _createOverlay: function () {\n            var events;\n\n            this.overlay = $('.' + this.options.overlayClass);\n\n            if (!this.overlay.length) {\n                $(this.options.appendTo).addClass(this.options.parentModalClass);\n                this.overlay = $('<div></div>')\n                    .addClass(this.options.overlayClass)\n                    .appendTo(this.modalWrapper);\n            }\n            events = $._data(this.overlay.get(0), 'events');\n            events ? this.prevOverlayHandler = events.click[0].handler : false;\n            this.options.clickableOverlay ? this.overlay.unbind().on('click', this.closeModal) : false;\n        },\n\n        /**\n         * Destroy overlay.\n         */\n        _destroyOverlay: function () {\n            if (this._getVisibleCount()) {\n                this.overlay.unbind().on('click', this.prevOverlayHandler);\n            } else {\n                $(this.options.appendTo).removeClass(this.options.parentModalClass);\n                this.overlay.remove();\n                this.overlay = null;\n            }\n        }\n    });\n\n    return $.mage.modal;\n});\n","Magento_Ui/js/form/client.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'mageUtils',\n    'uiClass'\n], function ($, _, utils, Class) {\n    'use strict';\n\n    function beforeSave(data, url) {\n        var save = $.Deferred();\n\n        data = utils.serialize(data);\n\n        data.form_key = window.FORM_KEY;\n\n        if (!url) {\n            save.resolve();\n        }\n\n        $('body').trigger('processStart');\n\n        $.ajax({\n            url: url,\n            data: data,\n            success: function (resp) {\n                if (!resp.error) {\n                    save.resolve();\n                    return true;\n                }\n\n                $('body').notification('clear');\n                $.each(resp.messages, function(key, message) {\n                    $('body').notification('add', {\n                        error: resp.error,\n                        message: message,\n                        insertMethod: function(message) {\n                            $('.page-main-actions').after(message);\n                        }\n                    });\n                });\n            },\n            complete: function () {\n                $('body').trigger('processStop');\n            }\n        });\n\n        return save.promise();\n    }\n\n    return Class.extend({\n\n        /**\n         * Assembles data and submits it using 'utils.submit' method\n         */\n        save: function (data, options) {\n            var url = this.urls.beforeSave,\n                save = this._save.bind(this, data, options);\n\n            beforeSave(data, url).then(save);\n\n            return this;\n        },\n\n        _save: function (data, options) {\n            var url = this.urls.save;\n\n            options = options || {};\n\n            if (!options.redirect) {\n                url += 'back/edit';\n            }\n\n            utils.submit({\n                url: url,\n                data: data\n            }, options.attributes);\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/form/provider.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiElement',\n    './client'\n], function (_, Element, Client) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            clientConfig: {\n                urls: {\n                    save: '${ $.submit_url }',\n                    beforeSave: '${ $.validate_url }'\n                }\n            }\n        },\n\n        /**\n         * Initializes provider component.\n         *\n         * @returns {Provider} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initClient();\n\n            return this;\n        },\n\n        /**\n         * Initializes client component.\n         *\n         * @returns {Provider} Chainable.\n         */\n        initClient: function () {\n            this.client = new Client(this.clientConfig);\n\n            return this;\n        },\n\n        /**\n         * Saves currently available data.\n         *\n         * @param {Object} [options] - Addtitional request options.\n         * @returns {Provider} Chainable.\n         */\n        save: function (options) {\n            var data = this.get('data');\n\n            this.client.save(data, options);\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/form/adapter.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore'\n], function($, _){\n    'use strict';\n\n    var buttons = {\n        'reset':            '#reset',\n        'save':             \"#save\",\n        'saveAndContinue':  '#save_and_continue'\n    };\n\n    function initListener(callback, action){\n        var selector    = buttons[action],\n            elem        = $(selector)[0];\n\n        if (!elem) {\n            return;\n        }\n\n        if(elem.onclick){\n            elem.onclick = null;\n        }\n\n        $(elem).off()\n                .on('click', callback);\n    }\n\n    return {\n        on: function(handlers){\n            _.each(handlers, initListener);\n        }\n    }\n});\n","Magento_Ui/js/form/form.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiCollection',\n    'Magento_Ui/js/lib/spinner',\n    './adapter'\n], function (_, Collection, loader, adapter) {\n    'use strict';\n\n    function collectData(selector) {\n        var items = document.querySelectorAll(selector),\n            result = {};\n\n        items = Array.prototype.slice.call(items);\n\n        items.forEach(function (item) {\n            result[item.name] = item.value;\n        });\n\n        return result;\n    }\n\n    return Collection.extend({\n        initialize: function () {\n            this._super()\n                .initAdapter()\n                .hideLoader();\n\n            return this;\n        },\n\n        initAdapter: function () {\n            adapter.on({\n                'reset': this.reset.bind(this),\n                'save': this.save.bind(this, true),\n                'saveAndContinue': this.save.bind(this, false)\n            });\n\n            return this;\n        },\n\n        initConfig: function () {\n            this._super();\n\n            this.selector = '[data-form-part=' + this.namespace + ']';\n\n            return this;\n        },\n\n        hideLoader: function () {\n            loader.get(this.name).hide();\n\n            return this;\n        },\n\n        save: function (redirect) {\n            this.validate();\n\n            if (!this.source.get('params.invalid')) {\n                this.submit(redirect);\n            }\n        },\n\n        /**\n         * Submits form\n         */\n        submit: function (redirect) {\n            var additional = collectData(this.selector),\n                source = this.source;\n\n            _.each(additional, function (value, name) {\n                source.set('data.' + name, value);\n            });\n\n            source.save({\n                redirect: redirect,\n                attributes: {\n                    id: this.namespace\n                }\n            });\n        },\n\n        /**\n         * Validates each element and returns true, if all elements are valid.\n         */\n        validate: function () {\n            this.source.set('params.invalid', false);\n            this.source.trigger('data.validate');\n        },\n\n        reset: function () {\n            this.source.trigger('data.reset');\n        }\n    });\n});\n","Magento_Ui/js/form/components/area.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    './tab'\n], function (_, Tab) {\n    'use strict';\n\n    return Tab.extend({\n        defaults: {\n            uniqueNs:   'params.activeArea',\n            template:   'ui/area',\n            changed:    false,\n            loading:    false\n        },\n\n        /**\n         * Extends instance with defaults. Invokes parent initialize method.\n         * Calls initListeners and pushParams methods.\n         */\n        initialize: function () {\n            _.bindAll(this, 'onChildrenUpdate', 'onContentLoading');\n\n            return this._super();\n        },\n\n        /**\n         * Calls initObservable of parent class.\n         * Defines observable properties of instance.\n         * @return {Object} - reference to instance\n         */\n        initObservable: function () {\n            this._super()\n                .observe('changed loading');\n\n            return this;\n        },\n\n        /**\n         * Calls parent's initElement method.\n         * Assignes callbacks on various events of incoming element.\n         * @param  {Object} elem\n         * @return {Object} - reference to instance\n         */\n        initElement: function (elem) {\n            this._super();\n\n            elem.on({\n                'update':   this.onChildrenUpdate,\n                'loading':  this.onContentLoading\n            });\n\n            return this;\n        },\n\n        /**\n         * Is being invoked on children update.\n         * Sets changed property to one incoming.\n         * Invokes setActive method if settings\n         * contain makeVisible property set to true.\n         *\n         * @param  {Boolean} hasChanged\n         */\n        onChildrenUpdate: function (hasChanged) {\n            if (!hasChanged) {\n                hasChanged = _.some(this.delegate('hasChanged'));\n            }\n\n            this.changed(hasChanged);\n        },\n\n        /**\n         * Callback that sets loading property to true.\n         */\n        onContentLoading: function (isLoading) {\n            this.loading(isLoading);\n        }\n    });\n});\n","Magento_Ui/js/form/components/fieldset.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'Magento_Ui/js/lib/collapsible'\n], function (Collapsible) {\n    'use strict';\n\n    return Collapsible.extend({\n        defaults: {\n            template: 'ui/form/fieldset',\n            collapsible: false,\n            opened: true\n        }\n    });\n});\n","Magento_Ui/js/form/components/html.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'uiComponent'\n], function ($, _, Component) {\n    'use strict';\n\n    return Component.extend({\n        defaults: {\n            content:        '',\n            showSpinner:    false,\n            loading:        false,\n            template:       'ui/content/content'\n        },\n\n        /**\n         * Extends instance with default config, calls 'initialize' method of\n         *     parent, calls 'initAjaxConfig'\n         */\n        initialize: function () {\n            _.bindAll(this, 'onContainerToggle', 'onDataLoaded');\n\n            this._super()\n                .initAjaxConfig();\n\n            return this;\n        },\n\n        /**\n         * Calls 'initObservable' method of parent, initializes observable\n         * properties of instance\n         *\n         * @return {Object} - reference to instance\n         */\n        initObservable: function () {\n            this._super()\n                .observe('content loading');\n\n            return this;\n        },\n\n        initContainer: function (parent) {\n            this._super();\n\n            parent.on('active', this.onContainerToggle);\n\n            return this;\n        },\n\n        /**\n         * Initializes default ajax config on instance\n         *\n         * @return {Object} - reference to instance\n         */\n        initAjaxConfig: function () {\n            this.ajaxConfig = {\n                url: this.url,\n                data: {\n                    FORM_KEY: window.FORM_KEY\n                },\n                success:    this.onDataLoaded\n            };\n\n            return this;\n        },\n\n        /**\n         * Calls 'loadData' if both 'active' variable and 'shouldLoad'\n         * property are truthy\n         *\n         * @param  {Boolean} active\n         */\n        onContainerToggle: function (active) {\n            if (active && this.shouldLoad()) {\n                this.loadData();\n            }\n        },\n\n        /**\n         * Defines if instance has 'content' property defined.\n         *\n         * @return {Boolean} [description]\n         */\n        hasData: function () {\n            return !!this.content();\n        },\n\n        /**\n         * Defines if instance should load external data\n         *\n         * @return {Boolean}\n         */\n        shouldLoad: function () {\n            return this.url && !this.hasData() && !this.loading();\n        },\n\n        /**\n         * Sets loading property to true, makes ajax call\n         *\n         * @return {Object} - reference to instance\n         */\n        loadData: function () {\n            this.loading(true);\n\n            $.ajax(this.ajaxConfig);\n\n            return this;\n        },\n\n        /**\n         * Ajax's request success handler. Calls 'updateContent' passing 'data'\n         * to it, then sets 'loading' property to false.\n         *\n         * @param  {String} data\n         */\n        onDataLoaded: function (data) {\n            this.updateContent(data)\n                .loading(false);\n        },\n\n        /**\n         * Sets incoming data 'content' property's value\n         *\n         * @param  {String} content\n         * @return {Object} - reference to instance\n         */\n        updateContent: function (content) {\n            this.content(content);\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/form/components/tab_group.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'Magento_Ui/js/lib/collapsible'\n], function (_, Collapsible) {\n    'use strict';\n\n    return Collapsible.extend({\n        defaults: {\n            listens: {\n                '${ $.provider }:data.validate': 'onValidate'\n            },\n            collapsible: false,\n            opened: true\n        },\n\n        /**\n         * Invokes initElement method of parent class, calls 'initActivation' method\n         * passing element to it.\n         * @param {Object} elem\n         * @returns {Object} - reference to instance\n         */\n        initElement: function (elem) {\n            this._super()\n                .initActivation(elem);\n\n            return this;\n        },\n\n        /**\n         * Activates element if one is first or if one has 'active' propert\n         * set to true.\n         *\n         * @param  {Object} elem\n         * @returns {Object} - reference to instance\n         */\n        initActivation: function (elem) {\n            var elems   = this.elems(),\n                isFirst = !elems.indexOf(elem);\n\n            if (isFirst || elem.active()) {\n                elem.activate();\n            }\n\n            return this;\n        },\n\n        /**\n         * Delegates 'validate' method on element, then reads 'invalid' property\n         * of params storage, and if defined, activates element, sets\n         * 'allValid' property of instance to false and sets invalid's\n         * 'focused' property to true.\n         *\n         * @param {Object} elem\n         */\n        validate: function (elem) {\n            var source = this.source,\n                result  = elem.delegate('validate'),\n                invalid = false;\n\n            _.some(result, function (item) {\n                return !item.valid && (invalid = item.target);\n            });\n\n            if (invalid && !source.get('params.invalid')) {\n                source.set('params.invalid', true);\n\n                elem.activate();\n                invalid.focused(true);\n            }\n        },\n\n        /**\n         * Sets 'allValid' property of instance to true, then calls 'validate' method\n         * of instance for each element.\n         */\n        onValidate: function () {\n            var elems;\n\n            elems = this.elems.sortBy(function (elem) {\n                return !elem.active();\n            });\n\n            elems.forEach(this.validate, this);\n        }\n    });\n});\n","Magento_Ui/js/form/components/group.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'uiCollection'\n], function (_, Collection) {\n    'use strict';\n\n    return Collection.extend({\n        defaults: {\n            visible: true,\n            label: '',\n            required: false,\n            template: 'ui/group/group',\n            fieldTemplate: 'ui/form/field',\n            breakLine: true,\n            validateWholeGroup: false,\n            additionalClasses: {}\n        },\n\n        /**\n         * Extends this with defaults and config.\n         * Then calls initObservable, iniListenes and extractData methods.\n         */\n        initialize: function () {\n            this._super()\n                ._setClasses();\n\n            return this;\n        },\n\n        /**\n         * Calls initObservable of parent class.\n         * Defines observable properties of instance.\n         *\n         * @return {Object} - reference to instance\n         */\n        initObservable: function () {\n            this._super()\n                .observe('visible')\n                .observe({\n                    required: !!+this.required\n                });\n\n            return this;\n        },\n\n        /**\n         * Extends 'additionalClasses' object.\n         *\n         * @returns {Group} Chainable.\n         */\n        _setClasses: function () {\n            var addtional = this.additionalClasses,\n                classes;\n\n            if (_.isString(addtional)) {\n                addtional = this.additionalClasses.split(' ');\n                classes = this.additionalClasses = {};\n\n                addtional.forEach(function (name) {\n                    classes[name] = true;\n                }, this);\n            }\n\n            _.extend(this.additionalClasses, {\n                required:   this.required,\n                _error:     this.error,\n                _disabled:  this.disabled\n            });\n\n            return this;\n        },\n\n        /**\n         * Defines if group has only one element.\n         * @return {Boolean}\n         */\n        isSingle: function () {\n            return this.elems.getLength() === 1;\n        },\n\n        /**\n         * Defines if group has multiple elements.\n         * @return {Boolean}\n         */\n        isMultiple: function () {\n            return this.elems.getLength() > 1;\n        },\n\n        /**\n         * Returns an array of child components previews.\n         *\n         * @returns {Array}\n         */\n        getPreview: function () {\n            return this.elems.map('getPreview');\n        }\n    });\n});\n","Magento_Ui/js/form/components/collection.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiRegistry',\n    'uiComponent',\n    'uiLayout',\n    'Magento_Ui/js/modal/confirm'\n], function (_, utils, registry, Component, layout, confirm) {\n    'use strict';\n\n    var childTemplate = {\n        parent: '${ $.$data.name }',\n        name: '${ $.$data.childIndex }',\n        dataScope: '${ $.name }',\n        nodeTemplate: '${ $.$data.name }.${ $.$data.itemTemplate }'\n    };\n\n    return Component.extend({\n        defaults: {\n            lastIndex: 0,\n            template: 'ui/form/components/collection'\n        },\n\n        /**\n         * Extends instance with default config, calls initialize of parent\n         * class, calls initChildren method.\n         */\n        initialize: function () {\n            this._super()\n                .initChildren();\n\n            return this;\n        },\n\n        /**\n         * Activates the incoming child and triggers the update event.\n         *\n         * @param {Object} elem - Incoming child.\n         */\n        initElement: function (elem) {\n            this._super();\n\n            elem.activate();\n\n            this.bubble('update');\n\n            return this;\n        },\n\n        /**\n         * Loops over corresponding data in data storage,\n         * creates child for each and pushes it's identifier to initialItems array.\n         *\n         * @returns {Collection} Chainable.\n         */\n        initChildren: function () {\n            var children = this.source.get(this.dataScope),\n                initial = this.initialItems = [];\n\n            _.each(children, function (item, index) {\n                initial.push(index);\n                this.addChild(index);\n            }, this);\n\n            return this;\n        },\n\n        /**\n         * Creates new item of collection, based on incoming 'index'.\n         * If not passed creates one with 'new_' prefix.\n         *\n         * @param {String|Object} [index] - Index of a child.\n         * @returns {Collection} Chainable.\n         */\n        addChild: function (index) {\n            this.childIndex = !_.isString(index) ?\n                'new_' + this.lastIndex++ :\n                index;\n\n            layout([utils.template(childTemplate, this)]);\n\n            return this;\n        },\n\n        /**\n         * Returnes true if current set of items differ from initial one,\n         * or if some child has been changed.\n         *\n         * @returns {Boolean}\n         */\n        hasChanged: function () {\n            var initial = this.initialItems,\n                current = this.elems.pluck('index'),\n                changed = !utils.equalArrays(initial, current);\n\n            return changed || this.elems.some(function (elem) {\n                return _.some(elem.delegate('hasChanged'));\n            });\n        },\n\n        /**\n         * Initiates validation of its' children components.\n         *\n         * @returns {Array} An array of validation results.\n         */\n        validate: function () {\n            var elems;\n\n            this.allValid = true;\n\n            elems = this.elems.sortBy(function (elem) {\n                return !elem.active();\n            });\n\n            elems = elems.map(this._validate, this);\n\n            return _.flatten(elems);\n        },\n\n        /**\n         * Iterator function for components validation.\n         * Activates first invalid child component.\n         *\n         * @param {Object} elem - Element to run validation on.\n         * @returns {Array} An array of validation results.\n         */\n        _validate: function (elem) {\n            var result = elem.delegate('validate'),\n                invalid;\n\n            invalid = _.some(result, function (item) {\n                return !item.valid;\n            });\n\n            if (this.allValid && invalid) {\n                this.allValid = false;\n\n                elem.activate();\n            }\n\n            return result;\n        },\n\n        /**\n         * Creates function that removes element\n         * from collection using '_removeChild' method.\n         * @param  {Object} elem - Element that should be removed.\n         * @returns {Function}\n         *      Since this method is used by 'click' binding,\n         *      it requires function to invoke.\n         */\n        removeAddress: function (elem) {\n            var self = this;\n\n            confirm({\n                content: this.removeMessage,\n                actions: {\n                    confirm: function () {\n                        self._removeAddress(elem)\n                    }\n                }\n            });\n        },\n\n        /**\n         * Removes elememt from both collection and data storage,\n         * activates first element if removed one was active,\n         * triggers 'update' event.\n         *\n         * @param {Object} elem - Element to remove.\n         */\n        _removeAddress: function (elem) {\n            var isActive = elem.active(),\n                first;\n\n            elem.destroy();\n\n            first = this.elems.first();\n\n            if (first && isActive) {\n                first.activate();\n            }\n\n            this.bubble('update');\n        }\n    });\n});\n","Magento_Ui/js/form/components/tab.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'uiCollection'\n], function (Collection) {\n    'use strict';\n\n    return Collection.extend({\n        defaults: {\n            uniqueProp:     'active',\n            active:         false,\n            wasActivated:   false\n        },\n\n        /**\n         * Extends instance with defaults. Invokes parent initialize method.\n         * Calls initListeners and pushParams methods.\n         */\n        initialize: function () {\n            this._super()\n                .setUnique();\n        },\n\n        /**\n         * Calls initObservable of parent class.\n         * Defines observable properties of instance.\n         * @return {Object} - reference to instance\n         */\n        initObservable: function () {\n            this._super()\n                .observe('active wasActivated');\n\n            return this;\n        },\n\n        /**\n         * Sets active property to true, then invokes pushParams method.\n         */\n        activate: function () {\n            this.active(true);\n            this.wasActivated(true);\n\n            this.setUnique();\n\n            return true;\n        }\n    });\n});\n","Magento_Ui/js/form/components/collection/item.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'underscore',\n    'mageUtils',\n    '../tab'\n], function (_, utils, Tab) {\n    'use strict';\n\n    var previewConfig = {\n        separator: ' ',\n        prefix: ''\n    };\n\n    /**\n     * Parses incoming data and returnes result merged with default preview config\n     *\n     * @param  {Object|String} data\n     * @return {Object}\n     */\n    function parsePreview(data) {\n        if (typeof data == 'string') {\n            data = {\n                items: data\n            };\n        }\n\n        data.items = utils.stringToArray(data.items);\n\n        return _.defaults(data, previewConfig);\n    }\n\n    return Tab.extend({\n        defaults: {\n            label: '',\n            uniqueNs: 'activeCollectionItem',\n            previewTpl: 'ui/form/components/collection/preview'\n        },\n\n        /**\n         * Extends instance with default config, calls initializes of parent class\n         */\n        initialize: function () {\n            _.bindAll(this, 'buildPreview', 'hasPreview');\n\n            return this._super();\n        },\n\n        /**\n         * Calls initProperties of parent class, initializes properties\n         * of instance.\n         *\n         * @return {Object} - reference to instance\n         */\n        initConfig: function () {\n            this._super();\n\n            this.displayed = [];\n\n            return this;\n        },\n\n        /**\n         * Calls initObservable of parent class, initializes observable\n         * properties of instance.\n         *\n         * @return {Object} - reference to instance\n         */\n        initObservable: function () {\n            this._super()\n                .observe({\n                    noPreview: true,\n                    indexed: {}\n                });\n\n            return this;\n        },\n\n        /**\n         * Is being called when child element has been initialized,\n         *     calls initElement of parent class, binds to element's update event,\n         *     calls insertToArea and insertToIndexed methods passing element to it\n         *\n         * @param  {Object} elem\n         */\n        initElement: function (elem) {\n            this._super()\n                .insertToIndexed(elem);\n\n            return this;\n        },\n\n        /**\n         * Adds element to observable indexed object of instance\n         *\n         * @param  {Object} elem\n         * @return {Object} - reference to instance\n         */\n        insertToIndexed: function (elem) {\n            var indexed = this.indexed();\n\n            indexed[elem.index] = elem;\n\n            this.indexed(indexed);\n\n            return this;\n        },\n\n        /**\n         * Destroys current instance along with all of its' children.\n         * Overrides base method to clear data when this method is called.\n         */\n        destroy: function () {\n            this._super();\n            this._clearData();\n        },\n\n        /**\n         * Clears all data associated with component.\n         * @private\n         *\n         * @returns {Item} Chainable.\n         */\n        _clearData: function () {\n            this.source.remove(this.dataScope);\n\n            return this;\n        },\n\n        /**\n         * Formats incoming previews array via parsePreview function.\n         *\n         * @param  {Array} previews\n         * @return {Array} - formatted previews\n         */\n        formatPreviews: function (previews) {\n            return previews.map(parsePreview);\n        },\n\n        /**\n         * Creates string view of previews\n         *\n         * @param  {Object} data\n         * @return {Strict} - formatted preview string\n         */\n        buildPreview: function (data) {\n            var preview = this.getPreview(data.items),\n                prefix = data.prefix;\n\n            return prefix + preview.join(data.separator);\n        },\n\n        /**\n         * Defines if instance has preview for incoming data\n         *\n         * @param  {Object}  data\n         * @return {Boolean}\n         */\n        hasPreview: function (data) {\n            return !!this.getPreview(data.items).length;\n        },\n\n        /**\n         * Creates an array of previews for elements specified in incoming\n         * items array, calls updatePreview afterwards.\n         *\n         * @param  {Array} items - An array of element's indexes.\n         * @returns {Array} An array of previews.\n         */\n        getPreview: function (items) {\n            var elems = this.indexed(),\n                displayed = this.displayed,\n                preview;\n\n            items = items.map(function (index) {\n                var elem = elems[index];\n\n                preview = elem && elem.visible() ? elem.getPreview() : '';\n\n                preview = Array.isArray(preview) ?\n                    _.compact(preview).join(', ') :\n                    preview;\n\n                utils.toggle(displayed, index, !!preview);\n\n                return preview;\n            });\n\n            this.noPreview(!displayed.length);\n\n            return _.compact(items);\n        }\n    });\n});\n","Magento_Ui/js/form/element/multiselect.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    './select'\n], function (_, utils, Select) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            size: 5\n        },\n\n        /**\n         * Splits incoming string value.\n         *\n         * @returns {Array}\n         */\n        normalizeData: function (value) {\n            if (utils.isEmpty(value)) {\n                value = [];\n            }\n\n            return _.isString(value) ? value.split(',') : value;\n        },\n\n        /**\n         * Defines if value has changed\n         *\n         * @returns {Boolean}\n         */\n        hasChanged: function () {\n            var value = this.value(),\n                initial = this.initialValue;\n\n            return !utils.equalArrays(value, initial);\n        }\n    });\n});\n","Magento_Ui/js/form/element/date.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'moment',\n    'mageUtils',\n    './abstract'\n], function (moment, utils, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            dateFormat: 'MM/dd/YYYY',\n            options: {}\n        },\n\n        /**\n         * Initializes regular properties of instance.\n         *\n         * @returns {Object} Chainable.\n         */\n        initConfig: function () {\n            this._super();\n\n            this.dateFormat = utils.normalizeDate(this.dateFormat);\n\n            return this;\n        },\n\n        /**\n         * Formats provided value according to 'dateFormat' property.\n         *\n         * @returns {String}\n         */\n        normalizeData: function () {\n            var value = this._super();\n\n            if (value) {\n                value = moment(value).format(this.dateFormat);\n            }\n\n            return value;\n        }\n    });\n});\n","Magento_Ui/js/form/element/file-uploader.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'jquery',\n    'underscore',\n    'mageUtils',\n    'Magento_Ui/js/modal/alert',\n    'Magento_Ui/js/lib/validation/validator',\n    'Magento_Ui/js/form/element/abstract',\n    'jquery/file-uploader'\n], function ($, _, utils, uiAlert, validator, Element) {\n    'use strict';\n\n    /**\n     * Constructor to creating valid validation format\n     *\n     * @param {String|Object} rule - One or many validation rules.\n     * @param {Boolean} passed\n     * @param {String} msg - ErrorMessage\n     */\n    var ValidationResult = function (rule, passed, msg) {\n        this.rule = rule || '';\n        this.passed = passed || false;\n        this.message = msg || '';\n    };\n\n    return Element.extend({\n        defaults: {\n            value: [],\n            maxFileSize: false,\n            isMultipleFiles: false,\n            allowedExtensions: false,\n            previewTmpl: 'ui/form/element/uploader/preview',\n            dropZone: '[data-role=drop-zone]',\n            isLoading: false,\n            uploaderConfig: {\n                dataType: 'json',\n                sequentialUploads: true,\n                formData: {\n                    'form_key': window.FORM_KEY\n                }\n            }\n        },\n\n        /**\n         * Initializes file uploader plugin on provided input element.\n         *\n         * @param {HTMLInputElement} fileInput\n         * @returns {FileUploader} Chainable.\n         */\n        initUploader: function (fileInput) {\n            this.$fileInput = fileInput;\n\n            _.extend(this.uploaderConfig, {\n                dropZone:   $(fileInput).closest(this.dropZone),\n                change:     this.onFilesChoosed.bind(this),\n                drop:       this.onFilesChoosed.bind(this),\n                add:        this.onBeforeFileUpload.bind(this),\n                done:       this.onFileUploaded.bind(this),\n                start:      this.onLoadingStart.bind(this),\n                stop:       this.onLoadingStop.bind(this)\n            });\n\n            $(fileInput).fileupload(this.uploaderConfig);\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties of instance\n         *\n         * @returns {Abstract} Chainable.\n         */\n        initObservable: function () {\n            this._super();\n\n            this.observe('isLoading');\n\n            return this;\n        },\n\n        /**\n         * Defines initial value of the instance.\n         *\n         * @returns {FileUploader} Chainable.\n         */\n        setInitialValue: function () {\n            var value = this.getInitialValue();\n\n            value = value.map(this.processFile, this);\n\n            this.initialValue = value.slice();\n\n            this.value(value);\n            this.on('value', this.onUpdate.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Empties files list.\n         *\n         * @returns {FileUploader} Chainable.\n         */\n        clear: function () {\n            this.value.removeAll();\n\n            return this;\n        },\n\n        /**\n         * Checks if files list contains any items.\n         *\n         * @returns {Boolean}\n         */\n        hasData: function () {\n            return !!this.value().length;\n        },\n\n        /**\n         * Resets files list to its' initial value.\n         *\n         * @returns {FileUploader}\n         */\n        reset: function () {\n            var value = this.initialValue.slice();\n\n            this.value(value);\n\n            return this;\n        },\n\n        /**\n         * Adds provided file to the files list.\n         *\n         * @param {Object} file\n         * @returns {FileUploder} Chainable.\n         */\n        addFile: function (file) {\n            file = this.processFile(file);\n\n            this.isMultipleFiles ?\n                this.value.push(file) :\n                this.value([file]);\n\n            return this;\n        },\n\n        /**\n         * Retrieves from the list file which matches\n         * search criteria implemented in itertor function.\n         *\n         * @param {Function} fn - Function that will be invoked\n         *      for each file in the list.\n         * @returns {Object}\n         */\n        getFile: function (fn) {\n            return _.find(this.value(), fn);\n        },\n\n        /**\n         * Removes provided file from thes files list.\n         *\n         * @param {Object} file\n         * @returns {FileUploader} Chainable.\n         */\n        removeFile: function (file) {\n            this.value.remove(file);\n\n            return this;\n        },\n\n        /**\n         * May perform modifications on the provided\n         * file object before adding it to the files list.\n         *\n         * @param {Object} file\n         * @returns {Object} Modified file object.\n         */\n        processFile: function (file) {\n            this.observe.call(file, true, [\n                'previewWidth',\n                'previewHeight'\n            ]);\n\n            return file;\n        },\n\n        /**\n         * Formats incoming bytes value to a readable format.\n         *\n         * @param {Number} bytes\n         * @returns {String}\n         */\n        formatSize: function (bytes) {\n            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'],\n                i;\n\n            if (bytes === 0) {\n                return '0 Byte';\n            }\n\n            i = window.parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\n\n            return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\n        },\n\n        /**\n         * Returns path to the files' preview image.\n         *\n         * @param {Object} file\n         * @returns {String}\n         */\n        getFilePreview: function (file) {\n            return file.url;\n        },\n\n        /**\n         * Returns path to the file's preview template.\n         *\n         * @returns {String}\n         */\n        getPreviewTmpl: function () {\n            return this.previewTmpl;\n        },\n\n        /**\n         * Checks if provided file is allowed to be uploaded.\n         *\n         * @param {Object} file\n         * @returns {Object} Validation result.\n         */\n        isFileAllowed: function (file) {\n            var result;\n\n            _.every([\n                this.isExtensionAllowed(file),\n                this.isSizeExceeded(file)\n            ], function (value) {\n                result = value;\n\n                return value.passed;\n            });\n\n            return result;\n        },\n\n        /**\n         * Checks if extension of provided file is allowed.\n         *\n         * @param {Object} file - File to be checked.\n         * @returns {Boolean}\n         */\n        isExtensionAllowed: function (file) {\n            return this.validatorResultParser('validate-file-type', file.name, this.allowedExtensions);\n        },\n\n        /**\n         * Checks if size of provided file exceeds\n         * defined in configuration size limits.\n         *\n         * @param {Object} file - File to be checked.\n         * @returns {Boolean}\n         */\n        isSizeExceeded: function (file) {\n            return this.validatorResultParser('validate-max-size', file.size, this.maxFileSize);\n        },\n\n        /**\n         * Parse validation string result to valid format\n         *\n         * @param {(String|Object)} rule - One or many validation rules.\n         * @param {*} value - Value to validate.\n         * @param {*} [params] - Rule configuration\n         *\n         * @returns {Object} Parsed validation result\n         */\n        validatorResultParser: function (rule, value, params) {\n            var validation = validator(rule, value, params);\n\n            return !validation ? new ValidationResult(rule, true) : new ValidationResult(rule, false, validation);\n        },\n\n        /**\n         * Displays provided error message.\n         *\n         * @param {String} msg\n         * @returns {FileUploader} Chainable.\n         */\n        notifyError: function (msg) {\n            uiAlert({\n                content: msg\n            });\n\n            return this;\n        },\n\n        /**\n         * Performs data type conversions.\n         *\n         * @param {*} value\n         * @returns {Array}\n         */\n        normalizeData: function (value) {\n            return utils.isEmpty(value) ? [] : value;\n        },\n\n        /**\n         * Checks if files list is different\n         * from its' initial value.\n         *\n         * @returns {Boolean}\n         */\n        hasChanged: function () {\n            var value = this.value(),\n                initial = this.initialValue;\n\n            return !utils.equalArrays(value, initial);\n        },\n\n        /**\n         * Abstract handler which is invoked when files are choosed for upload.\n         * May be used for implementation of aditional validation rules,\n         * e.g. total files and a total size rules.\n         *\n         * @abstract\n         */\n        onFilesChoosed: function () {},\n\n        /**\n         * Handler which is invoked prior to the start of a file upload.\n         *\n         * @param {Event} e - Event object.\n         * @param {Object} data - File data that will be uploaded.\n         */\n        onBeforeFileUpload: function (e, data) {\n            var file     = data.files[0],\n                allowed  = this.isFileAllowed(file),\n                target   = $(e.target);\n\n            if (allowed.passed) {\n                target.on('fileuploadsend', function (event, postData) {\n                    postData.data.set('param_name', this.paramName);\n                }.bind(data));\n\n                target.fileupload('process', data).done(function () {\n                    data.submit();\n                });\n            } else {\n                this.notifyError(allowed.message);\n            }\n        },\n\n        /**\n         * Handler of the file upload complete event.\n         *\n         * @param {Event} e\n         * @param {Object} data\n         */\n        onFileUploaded: function (e, data) {\n            var file    = data.result,\n                error   = file.error;\n\n            error ?\n                this.notifyError(error) :\n                this.addFile(file);\n        },\n\n        /**\n         * Load start event handler.\n         */\n        onLoadingStart: function () {\n            this.isLoading(true);\n        },\n\n        /**\n         * Load stop event handler.\n         */\n        onLoadingStop: function () {\n            this.isLoading(false);\n        },\n\n        /**\n         * Handler function which is supposed to be invoked when\n         * file input element has been rendered.\n         *\n         * @param {HTMLInputElement} fileInput\n         */\n        onElementRender: function (fileInput) {\n            this.initUploader(fileInput);\n        },\n\n        /**\n         * Handler of the preview image load event.\n         *\n         * @param {Object} file - File associated with an image.\n         * @param {Event} e\n         */\n        onPreviewLoad: function (file, e) {\n            var img = e.currentTarget;\n\n            file.previewWidth = img.naturalHeight;\n            file.previewHeight = img.naturalWidth;\n        },\n\n        /**\n         * Restore value to default\n         */\n        restoreToDefault: function () {\n            var defaultValue = utils.copy(this.default);\n\n            defaultValue.map(this.processFile, this);\n            this.value(defaultValue);\n        },\n\n        /**\n         * Update whether value differs from default value\n         */\n        setDifferedFromDefault: function () {\n            var value = utils.copy(this.value());\n\n            this.isDifferedFromDefault(!_.isEqual(value, this.default));\n        }\n    });\n});\n","Magento_Ui/js/form/element/post-code.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    './abstract'\n], function (_, registry, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            imports: {\n                update: '${ $.parentName }.country_id:value'\n            }\n        },\n\n        /**\n         * @param {String} value\n         */\n        update: function (value) {\n            var country = registry.get(this.parentName + '.' + 'country_id'),\n                options = country.indexedOptions,\n                option;\n\n            if (!value) {\n                return;\n            }\n\n            option = options[value];\n\n            if (option['is_zipcode_optional']) {\n                this.error(false);\n                this.validation = _.omit(this.validation, 'required-entry');\n            } else {\n                this.validation['required-entry'] = true;\n            }\n\n            this.required(!option['is_zipcode_optional']);\n        }\n    });\n});\n","Magento_Ui/js/form/element/abstract.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'mageUtils',\n    'uiElement',\n    'Magento_Ui/js/lib/validation/validator'\n], function (_, utils, Element, validator) {\n    'use strict';\n\n    return Element.extend({\n        defaults: {\n            visible: true,\n            preview: '',\n            focused: false,\n            required: false,\n            disabled: false,\n            tooltipTpl: 'ui/form/element/helper/tooltip',\n            'input_type': 'input',\n            placeholder: '',\n            description: '',\n            label: '',\n            error: '',\n            warn: '',\n            notice: '',\n            customScope: '',\n            additionalClasses: {},\n\n            listens: {\n                visible: 'setPreview',\n                '${ $.provider }:data.reset': 'reset',\n                '${ $.provider }:${ $.customScope ? $.customScope + \".\" : \"\"}data.validate': 'validate'\n            },\n\n            links: {\n                value: '${ $.provider }:${ $.dataScope }'\n            }\n        },\n\n        /**\n         * Invokes initialize method of parent class,\n         * contains initialization logic\n         */\n        initialize: function () {\n            _.bindAll(this, 'reset');\n\n            this._super()\n                .setInitialValue()\n                ._setClasses();\n\n            return this;\n        },\n\n        /**\n         * Initializes observable properties of instance\n         *\n         * @returns {Abstract} Chainable.\n         */\n        initObservable: function () {\n            var rules = this.validation = this.validation || {};\n\n            this._super();\n\n            this.observe('error disabled focused preview visible value warn')\n                .observe({\n                    'required': !!rules['required-entry']\n                });\n\n            return this;\n        },\n\n        /**\n         * Initializes regular properties of instance.\n         *\n         * @returns {Abstract} Chainable.\n         */\n        initConfig: function () {\n            var uid = utils.uniqueid(),\n                name,\n                scope;\n\n            this._super();\n\n            scope   = this.dataScope,\n            name    = scope.split('.').slice(1);\n\n            _.extend(this, {\n                uid: uid,\n                noticeId: 'notice-' + uid,\n                inputName: utils.serializeName(name.join('.'))\n            });\n\n            return this;\n        },\n\n        /**\n         * Sets initial value of the element and subscribes to it's changes.\n         *\n         * @returns {Abstract} Chainable.\n         */\n        setInitialValue: function () {\n            this.initialValue = this.getInitialValue();\n\n            this.value(this.initialValue);\n            this.on('value', this.onUpdate.bind(this));\n\n            return this;\n        },\n\n        /**\n         * Extends 'additionalClasses' object.\n         *\n         * @returns {Abstract} Chainable.\n         */\n        _setClasses: function () {\n            var additional = this.additionalClasses,\n                classes;\n\n            if (_.isString(additional) && additional.trim().length) {\n                additional = this.additionalClasses.trim().split(' ');\n                classes = this.additionalClasses = {};\n\n                additional.forEach(function (name) {\n                    classes[name] = true;\n                }, this);\n            }\n\n            _.extend(this.additionalClasses, {\n                required: this.required,\n                _error: this.error,\n                _warn: this.warn,\n                _disabled: this.disabled\n            });\n\n            return this;\n        },\n\n        /**\n         * Gets initial value of element\n         *\n         * @returns {*} Elements' value.\n         */\n        getInitialValue: function () {\n            var values = [this.value(), this.default],\n                value;\n\n            values.some(function (v) {\n                return !utils.isEmpty(value = v);\n            });\n\n            return this.normalizeData(value);\n        },\n\n        /**\n         * Sets 'value' as 'hidden' propertie's value, triggers 'toggle' event,\n         * sets instance's hidden identifier in params storage based on\n         * 'value'.\n         *\n         * @returns {Abstract} Chainable.\n         */\n        setVisible: function (isVisible) {\n            this.visible(isVisible);\n\n            return this;\n        },\n\n        /**\n         * Returnes unwrapped preview observable.\n         *\n         * @returns {String} Value of the preview observable.\n         */\n        getPreview: function () {\n            return this.value();\n        },\n\n        /**\n         * Checkes if element has addons\n         *\n         * @returns {Boolean}\n         */\n        hasAddons: function () {\n            return this.addbefore || this.addafter;\n        },\n\n        /**\n         * Defines if value has changed.\n         *\n         * @returns {Boolean}\n         */\n        hasChanged: function () {\n            var notEqual = this.value() != this.initialValue;\n\n            return !this.visible() ? false : notEqual;\n        },\n\n        /**\n         * Checks if 'value' is not empty.\n         *\n         * @returns {Boolean}\n         */\n        hasData: function () {\n            return !utils.isEmpty(this.value());\n        },\n\n        /**\n         * Sets value observable to initialValue property.\n         */\n        reset: function () {\n            this.value(this.initialValue);\n        },\n\n        /**\n         * Clears 'value' property.\n         *\n         * @returns {Abstract} Chainable.\n         */\n        clear: function () {\n            this.value('');\n\n            return this;\n        },\n\n        /**\n         * Converts values like 'null' or 'undefined' to an empty string.\n         *\n         * @param {*} value - Value to be processed.\n         * @returns {*}\n         */\n        normalizeData: function (value) {\n            return utils.isEmpty(value) ? '' : value;\n        },\n\n        /**\n         * Validates itself by it's validation rules using validator object.\n         * If validation of a rule did not pass, writes it's message to\n         * 'error' observable property.\n         *\n         * @returns {Object} Validate information.\n         */\n        validate: function () {\n            var value = this.value(),\n                msg = validator(this.validation, value),\n                isValid = !this.visible() || !msg;\n\n            this.error(msg);\n\n            //TODO: Implement proper result propagation for form\n            if (!isValid) {\n                this.source.set('params.invalid', true);\n            }\n\n            return {\n                valid: isValid,\n                target: this\n            };\n        },\n\n        /**\n         * Callback that fires when 'value' property is updated.\n         */\n        onUpdate: function () {\n            this.bubble('update', this.hasChanged());\n\n            this.validate();\n        }\n    });\n});\n","Magento_Ui/js/form/element/boolean.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    './abstract'\n], function (Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n\n        /**\n         * Converts provided value to boolean.\n         *\n         * @returns {Boolean}\n         */\n        normalizeData: function () {\n            return !!+this._super();\n        },\n\n        /**\n         * Calls 'onUpdate' method of parent, if value is defined and instance's\n         *     'unique' property set to true, calls 'setUnique' method\n         *\n         * @return {Object} - reference to instance\n         */\n        onUpdate: function () {\n            if (this.hasUnique) {\n                this.setUnique();\n            }\n\n            return this._super();\n        }\n    });\n});\n","Magento_Ui/js/form/element/textarea.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    './abstract'\n], function (Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            cols: 15,\n            rows: 2,\n            template: 'ui/form/element/textarea'\n        }\n    });\n});\n","Magento_Ui/js/form/element/region.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n\ndefine([\n    'underscore',\n    'uiRegistry',\n    './select'\n], function (_, registry, Select) {\n    'use strict';\n\n    return Select.extend({\n        defaults: {\n            imports: {\n                update: '${ $.parentName }.country_id:value'\n            }\n        },\n\n        /**\n         * @param {String} value\n         */\n        update: function (value) {\n            var country = registry.get(this.parentName + '.' + 'country_id'),\n                options = country.indexedOptions,\n                option;\n\n            if (!value) {\n                return;\n            }\n\n            option = options[value];\n\n            if (!option['is_region_required']) {\n                this.error(false);\n                this.validation = _.omit(this.validation, 'required-entry');\n            } else {\n                this.validation['required-entry'] = true;\n            }\n\n            this.required(!!option['is_region_required']);\n        }\n    });\n});\n","Magento_Ui/js/form/element/media.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine([\n    'mageUtils',\n    './abstract'\n], function (utils, Abstract) {\n    'use strict';\n\n    return Abstract.extend({\n        defaults: {\n            links: {\n                value: ''\n            }\n        },\n\n        /**\n         * Initializes file component.\n         *\n         * @returns {Media} Chainable.\n         */\n        initialize: function () {\n            this._super()\n                .initFormId();\n\n            return this;\n        },\n\n        /**\n         * Defines form ID with which file input will be associated.\n         *\n         * @returns {Media} Chainable.\n         */\n        initFormId: function () {\n            var namespace;\n\n            if (this.formId) {\n                return this;\n            }\n\n            namespace   = this.name.split('.');\n            this.formId = namespace[0];\n\n            return this;\n        }\n    });\n});\n","Magento_Ui/js/model/messageList.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\ndefine(\n    [\n        './messages'\n    ], function (Messages) {\n        'use strict';\n        return new Messages();\n    }\n);\n","Magento_Persistent/js/view/remember-me.js":"/**\n * Copyright \u00c2\u00a9 2013-2017 Magento, Inc. All rights reserved.\n * See COPYING.txt for license details.\n */\n/*jshint browser:true jquery:true*/\n/*global alert*/\ndefine(\n    [\n        \"ko\",\n        \"uiComponent\"\n    ],\n    function (ko, Component) {\n        \"use strict\";\n        var persistenceConfig = window.checkoutConfig.persistenceConfig;\n        return Component.extend({\n            defaults: {\n                template: \"Magento_Persistent/remember-me\"\n            },\n            dataScope: \"global\",\n            isRememberMeCheckboxVisible: ko.observable(persistenceConfig.isRememberMeCheckboxVisible),\n            isRememberMeCheckboxChecked: ko.observable(persistenceConfig.isRememberMeCheckboxChecked)\n        });\n    }\n);\n"}
    }
});
